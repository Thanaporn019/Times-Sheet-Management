{"version":3,"sources":["config.js","Layout/Head.js","pages/home/index.js","components/popup/alert_popup.js","components/popup/confirm_popup.js","pages/Project/index.js","pages/JobType/index.js","pages/Work/index.js","pages/Work/create-edit-view.js","pages/JobType/create-edit.js","pages/Project/create-edit.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","msgAlert","updated","saved","deleted","systemError","msgConfirm","validDateFill","req","work","validWorkDate","validWorkDateEdit","validProjectName","validJobType","validTimeIn","validTimeOut","validManHours","validWorkDetail","validTimeInmoreTimeOut","validTimeOutlessTimeIn","project","validEmail","validStartDatemoreEndDate","validEndDatelessStartDate","Head","class","style","position","top","zIndex","color","fontSize","fontWeight","to","className","PartitionOutlined","ProjectOutlined","FundProjectionScreenOutlined","Component","IconCorrect","props","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","IconInCorrect","AlertPopUp","isPopupSuccess","successStatus","isPopupError","errorStatus","isPopupLoading","loadingStatus","msg","message","useEffect","centered","footer","header","visible","width","onOk","closable","display","textAlign","justifyContent","bottom","background","onClick","clearActive","marginTop","marginBottom","dangerouslySetInnerHTML","__html","ConfirmPopup","isOpen","open","isPopupType","type","confirmActive","del","data","onClose","margin","text","htmlType","msgAlertTitle","configService","msgPopupTitle","api","appIp","apiUrlPrefix","of","Project","state","openModal","setState","closeModal","handleReset","filter","projectName","setTimeout","fnGetData","onTypeNameChange","event","target","value","onSearch","loadPanelVisible","onDeleteData","a","axios","delete","response","status","resultCode","isPopupMsg","console","log","fields","projectList","limit","pageSize","offset","pageIndex","orderby","get","params","resultData","delCellRender","isTypeShowConfirm","isTextMsg","isDataPopUp","projectId","DeleteOutlined","editCellRender","FormOutlined","viewCellRender","EyeOutlined","noCellRender","component","rowIndex","onProjectNameChange","defaultPageSize","dataGridRef","React","createRef","getTotalPageCount","current","instance","pageCount","changePageSize","bind","goToLastPage","handleOptionChange","this","e","fullName","id","HomeOutlined","for","onChange","marginRight","padding","dataSource","showBorders","showRowLines","ref","noDataText","onOptionChanged","showPageSizeSelector","allowedPageSizes","showInfo","showNavigationButtons","remoteOperations","caption","alignment","cellRender","dataType","dataField","shadingColor","JobType","typeName","onTypeCodeChange","typeCode","typeId","typeList","momentEx","extendMoment","moment","msgValid","format","Option","Select","Work","handleProjectChange","handleTypeChange","handleChangeDateFrom","dateFrom","dateTo","handleChangeDate","index","temp","_","cloneDeep","updateData","i","length","workDate","isValid_workDate","clone","startOf","toDate","endOf","groupRender","day","name","items","workId","collapsedItems","now","replace","undefined","backgroundColor","borderRadius","height","isDelete","actionRender","key","dropDownOptions","dataPopup","displayExpr","keyExpr","onItemClick","itemData","popupEditVisable","workTimeIn","workTimeOut","timeIn","timeOut","post","onUpdateData","splitTime","workManhour","split","checkValidData","validProject","checkValid","validDetail","validGreater","checkGreaterTime","res","element","valid","isValid_projectName","isValid_jobType","isValid_timeIn","isValid_timeOut","isValid_manHours","isValid_detail","workDetail","confirmSave","action","onWorkManHoursChange","onWorkUrlChange","workUrl","onWorkDetailChange","onWorkPlanChange","workPlan","isValid_Plan","onWorkRefChange","workRef","isValid_Ref","handleChangeProject","item","handleChangeType","calManHours","validIn","validOut","start","end","tempTime","fnCallDiffTime","time","dataTime","tempStart","tempEnd","parseInt","calHours","calMin","startDate","Date","diff","getTime","hours","Math","floor","minutes","onChangeTimeIn","timestring","onChangeTimeOut","Promise","resolve","reject","workList","dateOfCurrentMouth","isSameOrBefore","add","push","mergeData","concat","itembar","popOver","projectPhase","icon","range","getProjectList","gettypeList","fnSetDefaultDate","dataWorkDate","map","r","indexOf","resData","phase","parentType","editorOptions","readOnly","isChief","rowType","rowElement","cells","greaterTimeIn","greaterTimeOut","selected","paddingLeft","paddingRight","displayFormat","onValueChanged","allowColumnReordering","onEditorPreparing","onEditorPrepared","onInitNewRow","onRowPrepared","onContentReady","mode","confirmDelete","columnRenderingMode","autoExpandAll","allowCollapsing","groupIndex","groupCellRender","paddingBottom","isSubmit","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","showNow","use12Hours","rows","ActionsWork","query","match","tempQuery","JSON","parse","stringify","param","handleBlurProject","handleFocusProject","handleBlurType","handleFocusType","handleAddData","validDate","deleteData","tempDel","splice","body","put","tempDateFirstRow","date","getDataView","local","Item","href","onFocus","onBlur","PlusOutlined","history","ActionJobType","checkValidate","valid_typeName","valid_typeCode","fnGetDataView","jobTypeId","ActionsProject","projectStartDate","isValid_startDate","projectEndDate","isValid_endDate","checkGreaterValue","checkGreaterStartDateValue","checkGreaterStopDateValue","onProjectPhaseChange","isValid_phase","onProjectDetailChange","projectDetail","onCustomerEmailChange","customerEmail","checkValidEmail","isValid_email","onManDaysChange","projectManDays","vaildProjectName","checkValidValue","vaildProjectPhase","vaildProjectDetail","vaildProjectStart","vaildProjectEnd","vaildEmail","greater","endDate","startGreater","endGreater","checkNullObjectMany","inputDate","checkGreaterCreatedDate","checkGreater","dataObject","checkGreaterStartDate","checkGreaterStopDate","dataFrom","dataTo","greaterStop","createDate","createBy","updateDate","updateBy","disabled","exact","path","Home","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6be60312.chunk.js","sourcesContent":["\r\n\r\nlet data = {\r\n    \"appIp\": \"http://10.1.2.145:5000\",\r\n    \"apiUrlPrefix\": \"/TimeSheetManagement/Working\",\r\n    \"allowedPageSizes\": [10,20, 25, 50, 100,250],\r\n    \"defaultPageSize\": 10,\r\n    \"fields\": {\r\n        \"typeList\": \"typeId,typeName,typeCode,updateDate,updateBy,createDate,createBy\",\r\n        \"projectList\": \"projectId,projectName,projectPhase,projectDetail,projectStartDate,projectEndDate,projectManDays,customerEmail,updateDate,updateBy,createDate,createBy\",\r\n        \"workList\": \"workId,projectId,typeId,workDate,workDetail,workPlan,workRef,workManhour,workTimeIn,workTimeOut,updateDate,updateBy,createDate,createBy\"\r\n    },msgAlert: {\r\n        updated: 'Your data has been updated successfully.',\r\n        saved: 'Your data has been saved successfully.',\r\n        deleted: 'Your data has been deleted successfully.',\r\n        systemError: 'Please contact your administrator.',\r\n    },\r\n    msgConfirm: {\r\n        saved: 'Please confirm your configuration.',\r\n        deleted: 'Are you sure you want to delete this?',\r\n    },\r\n    validDateFill: {\r\n        req: \"Please fill in the information.\",\r\n        work: {\r\n            validWorkDate: \"Please fill in the information.\",\r\n            validWorkDateEdit: \"Please fill in the information.\",\r\n            validProjectName: \"Please fill in the information.\",\r\n            validJobType: \"Please fill in the information.\",\r\n            validTimeIn: \"Please fill in the information.\",\r\n            validTimeOut: \"Please fill in the information.\",\r\n            validManHours: \"Please click a time in and time out.\",\r\n            validWorkDetail: \"Please fill in the information.\",\r\n            validTimeInmoreTimeOut: \"The time in must be less than the time out.\",\r\n            validTimeOutlessTimeIn: \"The time out must be greater than the time in.\",\r\n        },\r\n        project: {\r\n            validEmail: \"You entered the email incorrectly.\",\r\n            // validStartDate: \"Please fill in the information.\",\r\n            // validEndDate: \"Please fill in the information.\",\r\n            validStartDatemoreEndDate: \"The start date must be less than the end date.\",\r\n            validEndDatelessStartDate: \"The end date must be greater than the start date.\",\r\n        \r\n            \r\n        },\r\n        // jobtype: {\r\n        //     validJobTypeName: \"Please fill in the information.\",\r\n        //     validCode: \"Please fill in the information.\",\r\n        // }\r\n    }\r\n}\r\n// }\r\nmodule.exports = data;\r\n","import React, { Component } from 'react';\r\n// import Nav from \"react-bootstrap/Nav\";\r\n// import Navbar from \"react-bootstrap/Navbar\";\r\n// import Form from \"react-bootstrap/Form\";\r\nimport { IoPersonCircleOutline } from \"react-icons/io5\";\r\nimport { Link } from 'react-router-dom'\r\n// import { GrWorkshop } from \"react-icons/gr\";\r\nimport { PartitionOutlined, ProjectOutlined, FundProjectionScreenOutlined  } from '@ant-design/icons';\r\n\r\n// import { AiOutlineFundProjectionScreen } from \"react-icons/ai\";\r\n// import { VscGroupByRefType } from \"react-icons/vsc\";\r\n\r\nclass Head extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div class=\"gx-header-horizontal gx-header-horizontal-dark gx-below-header-horizontal\" style={{position: 'sticky', top: 0, zIndex: 9999}}>\r\n          <header class=\"ant-layout-header gx-header-horizontal-main\">\r\n            <div class=\"gx-container\">\r\n              <div class=\"gx-header-horizontal-main-flex\">\r\n                <div class=\"gx-header-search gx-d-none gx-d-lg-flex\">\r\n                  <div class=\"gx-search-bar gx-lt-icon-search-bar-lg\">\r\n                    <div class=\"gx-form-group\">\r\n                      {/* <input class=\"ant-input\" type=\"search\" placeholder=\"Search in app...\" value=\"\" />\r\n                      <span class=\"gx-search-icon gx-pointer\">\r\n                        <i class=\"icon icon-search\"></i>\r\n                      </span> */}\r\n\r\n                      <span style={{ color: '#fff', fontSize: '22pt', fontWeight: 700 }}>SMARTADMIN</span>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <ul class=\"gx-header-notifications gx-ml-auto\">\r\n                  <li class=\"gx-notify\" style={{fontSize: '20pt'}}>\r\n                  <Link to=\"/work\" >\r\n                    <span class=\"gx-pointer gx-d-block\">\r\n\r\n              {/* Icon Work*/} \r\n                        <span className=\"icon-header\"> < PartitionOutlined style={{color: '#fff'}}/>  </span>\r\n                      Work\r\n                    </span>\r\n\r\n                </Link>\r\n                  </li>\r\n                  <li class=\"gx-msg\" style={{fontSize: '20pt'}}>\r\n                  <Link to=\"/project\" >\r\n                    <span class=\"gx-pointer gx-status-pos gx-d-block\">\r\n                     \r\n            {/* Icon  Project*/}\r\n            <span className=\"icon-header\"> < ProjectOutlined/>  </span>\r\n            \r\n                      Project\r\n                    </span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"gx-msg\">\r\n                  <Link to=\"/jobtype\" style={{fontSize: '20pt'}}>\r\n                    <span class=\"gx-pointer gx-status-pos gx-d-block\">\r\n\r\n          {/* Icon Job type */}\r\n                    <span className=\"icon-header\">  < FundProjectionScreenOutlined  />  </span>\r\n                    \r\n                      Job type\r\n                    </span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"gx-msg\" style={{color: '#fff'}}>\r\n                    <span style={{color: '#fff', fontSize: 36}} class=\"gx-pointer gx-status-pos gx-d-block\">\r\n                    <IoPersonCircleOutline />\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </header>\r\n        </div>\r\n        {/* <Navbar className=\"Navbar-color\" expand=\"lg\" >\r\n          <Navbar.Brand href=\"/\" className=\"Navbar-brand-Style\">SMARTADMIN</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/work\" style={{ marginLeft: \"600px\" }}>work</Nav.Link>\r\n\r\n              <Nav.Link href=\"/projects\" style={{ marginLeft: \"20px\" }}>project</Nav.Link>\r\n\r\n              <Nav.Link href=\"/jobtype\" style={{ marginLeft: \"20px\" }}>job type</Nav.Link>\r\n            </Nav>\r\n\r\n            <Form inline>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Navbar> */}\r\n\r\n        {/* <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#features\">Features</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-info\">Search</Button>\r\n          </Form>\r\n        </Navbar> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Head;","import React from 'react'\r\n\r\nexport default () => (\r\n  <div className=\"has-text-centered\">\r\n    {/* <section class=\"hero is-info\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Home Page</h1>\r\n        <h2 className=\"page-title\">ทำ Routing ให้กับ React ด้วย React Router v4</h2>\r\n        <p className=\"button button-large is-primary\"><a href=\"https://devahoy.com/posts/basic-web-with-react-router-v4/\" target=\"_blank\">อ่านบทความ</a></p>\r\n      </div>\r\n    </section> */}\r\n  </div>\r\n)\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, List, Avatar, Row, Col, Tooltip, Form, TimePicker, Modal, Pagination, Select } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport moment from 'moment';\r\nimport { BsExclamationTriangle } from \"react-icons/bs\";\r\nimport { BrowserRouter as Link } from 'react-router-dom';\r\n\r\nconst IconCorrect = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"fas\" data-icon=\"check\" class=\"svg-inline--fa fa-check fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"></path></svg>\r\nconst IconInCorrect = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"fas\" data-icon=\"times\" class=\"svg-inline--fa fa-times fa-w-11\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 352 512\"><path fill=\"currentColor\" d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"></path></svg>\r\nconst AlertPopUp = (props) => {\r\n    // console.log(\"AlertPopUp -> props\", props)\r\n    const isPopupSuccess = (props.successStatus);\r\n    const isPopupError = (props.errorStatus);\r\n    const isPopupLoading = (props.loadingStatus);\r\n    const msg = (props.message);\r\n    // console.log(\"TCL: AlertPopUp -> props\", props)\r\n    useEffect(() => {\r\n        // getProductItem()\r\n    }, []);\r\n    const setIsPopupError = () => {\r\n        props.onOk()\r\n    }\r\n    const setIsPopupSuccess = () => {\r\n        props.onOk()\r\n    }\r\n\r\n    const setIsPopupLoading = () => {\r\n        props.onOk()\r\n    }\r\n\r\n    return (<>\r\n        <Modal centered\r\n            footer={null}\r\n            header={null}\r\n            visible={isPopupError}\r\n            width={650}\r\n            onOk={() => {\r\n                setIsPopupError(false);\r\n            }}\r\n            closable={false}>\r\n\r\n            {isPopupError ? <>\r\n                <span className=\"popup-icon-error\" style={{ display: 'flow-root', textAlign: 'center', justifyContent: 'center' }}>\r\n                    <IconInCorrect style={{ width: '70px', color: '#fff', top: 12, position: 'relative' }} />\r\n                </span>\r\n                <div style={{ textAlign: 'center', bottom: 50, position: 'relative' }}>\r\n                    <p className=\"popup-title\"> System Error </p>\r\n                    <p className=\"popup-sub-title\"> {msg ? msg : ''} </p>\r\n                    <div style={{ textAlign: 'center', position: 'relative', top: 20 }}>\r\n                        {/* <Link to='/jobtype'> */}\r\n                        <Button style={{ background: 'red' }} className=\"btn-popup-custom error\" onClick={() => {\r\n                            props.clearActive()\r\n                        }} >OK</Button>\r\n                        {/* </Link> */}\r\n                    </div>\r\n                </div>\r\n            </> : null}\r\n        </Modal>\r\n\r\n\r\n        <Modal centered\r\n            footer={null}\r\n            header={null}\r\n            visible={isPopupSuccess}\r\n            width={650}\r\n            closable={false}\r\n            onOk={() => {\r\n                setIsPopupSuccess(false)\r\n            }}>\r\n\r\n            {isPopupSuccess ? <>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <span className=\"popup-icon-success\" style={{ display: 'flow-root', textAlign: 'center', justifyContent: 'center' }}>\r\n                        <IconCorrect style={{ width: '75px', color: '#fff', top: 20, position: 'relative' }} />\r\n                    </span>\r\n                    <div style={{ textAlign: 'center', bottom: 50, position: 'relative' }}>\r\n                        <p className=\"popup-title\"> Success </p>\r\n                        <p className=\"popup-sub-title\"> {msg ? msg : ''} </p>\r\n                        <div style={{ textAlign: 'center', position: 'relative', top: 20 }}>\r\n                            <Button className=\"btn-popup-custom success\" onClick={() => { props.clearActive() }} >OK</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : null}\r\n        </Modal>\r\n\r\n\r\n        <Modal centered\r\n            footer={null}\r\n            header={null}\r\n            visible={isPopupLoading}\r\n            width={500}\r\n            closable={false}\r\n            onOk={() => {\r\n                setIsPopupLoading(false)\r\n            }}\r\n        >\r\n\r\n            {isPopupLoading ? <>\r\n                <div>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <div style={{ display: 'flow-root', textAlign: 'center', justifyContent: 'center' }}>\r\n                            {isPopupLoading ? <BsExclamationTriangle style={{ color: 'rgb(226 189 82)', fontSize: '75px' }} /> : null}\r\n                        </div>\r\n                        <div style={{ textAlign: 'center' }}>\r\n                            <p style={{ fontSize: 17, marginTop: 15, marginBottom: 15 }}>\r\n                                {msg ? <span dangerouslySetInnerHTML={{ __html: msg }}></span> : ''} </p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : null}\r\n        </Modal>\r\n\r\n\r\n    </>)\r\n};\r\n\r\nexport default AlertPopUp;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport moment from 'moment';\r\nconst IconExitRegular = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"far\" data-icon=\"window-close\" class=\"svg-inline--fa fa-window-close fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h404c3.3 0 6 2.7 6 6v340zM356.5 194.6L295.1 256l61.4 61.4c4.6 4.6 4.6 12.1 0 16.8l-22.3 22.3c-4.6 4.6-12.1 4.6-16.8 0L256 295.1l-61.4 61.4c-4.6 4.6-12.1 4.6-16.8 0l-22.3-22.3c-4.6-4.6-4.6-12.1 0-16.8l61.4-61.4-61.4-61.4c-4.6-4.6-4.6-12.1 0-16.8l22.3-22.3c4.6-4.6 12.1-4.6 16.8 0l61.4 61.4 61.4-61.4c4.6-4.6 12.1-4.6 16.8 0l22.3 22.3c4.7 4.6 4.7 12.1 0 16.8z\"></path></svg>\r\nconst IconSaveRegular = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"far\" data-icon=\"save\" class=\"svg-inline--fa fa-save fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 0 1 1.757 4.243V426a6 6 0 0 1-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z\"></path></svg>\r\nconst IconWarning = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"fas\" data-icon=\"exclamation-triangle\" class=\"svg-inline--fa fa-exclamation-triangle fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\" d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"></path></svg>\r\nconst IconCheckRegular = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"far\" data-icon=\"check-square\" class=\"svg-inline--fa fa-check-square fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z\"></path></svg>\r\nconst IconTrash = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash-alt\" class=\"svg-inline--fa fa-trash-alt fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"></path></svg>\r\n\r\nconst ConfirmPopup = (props) => {\r\n    // console.log(`auto boost: ConfirmPopup -> props`, props)\r\n    const isOpen = (props.open);\r\n    const isPopupType = (props.type);\r\n    const isDel = (props.del);\r\n\r\n    const setIsOpen = () => {\r\n        props.onClose()\r\n    }\r\n    const confirmActive = () => {\r\n        props.confirmActive(props.data)\r\n    }\r\n    return (<>\r\n\r\n\r\n\r\n        <Modal centered\r\n            footer={null}\r\n            header={null}\r\n            visible={isOpen}\r\n            width={650}\r\n            closable={false}\r\n            onOk={() => {\r\n                setIsOpen(false)\r\n            }}\r\n        >\r\n            {isPopupType === 'save' ?\r\n                <div>\r\n                    <div style={{ textAlign: 'center' , margin: 40}}>\r\n                        <p className=\"popup-title save\" style={{ color: '#38B000' }}> Confirm </p>\r\n                        <p className=\"popup-sub-title\"> {props.text}</p>\r\n                        <div style={{ textAlign: 'center', position: 'relative', top: 20 }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\" style={{textAlign:'end'}}>\r\n                                    <button className=\"btn-custom btn-reset\" htmlType=\"submit\" onClick={() => { props.clearActive() }} >\r\n                                        No\r\n                            </button>\r\n                                </div>\r\n                                <div className=\"col-6\" style={{textAlign:'start'}}>\r\n                                    <button className=\"btn-custom success\" style={{ background: '#38B000' }} onClick={() => {\r\n                                        confirmActive()\r\n                                    }}>\r\n                                        Yes\r\n                            </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                : <div>\r\n                <div style={{ textAlign: 'center' , margin: 40}}>\r\n                    <p className=\"popup-title del\" style={{ color: 'red' }}> Confirm </p>\r\n                    <p className=\"popup-sub-title\"> {props.text}</p>\r\n                    <div style={{ textAlign: 'center', position: 'relative', top: 20 }}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\" style={{textAlign:'end'}}>\r\n                                <Button className=\"btn-custom  btn-reset\"  onClick={() => { props.clearActive() }} >\r\n                                    No\r\n                        </Button>\r\n                            </div>\r\n                            <div className=\"col-6\" style={{textAlign:'start'}}>\r\n                                <Button htmlType=\"submit\" className=\"btn-custom error\" style={{ background: 'red' }} onClick={() => {\r\n                                    confirmActive()\r\n                                }}>\r\n                                    Yes\r\n                        </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            }\r\n        </Modal>\r\n    </>)\r\n\r\n}\r\nexport default ConfirmPopup;","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BsFillCalendarFill } from \"react-icons/bs\";\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\nimport { FaClipboardList } from \"react-icons/fa\";\r\nimport { AiOutlineStepBackward } from \"react-icons/ai\";\r\nimport { AiFillStepForward } from \"react-icons/ai\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport DateBox from \"devextreme-react/date-box\";\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport AspNetData from \"devextreme-aspnet-data-nojquery\";\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport {\r\n    HomeOutlined,\r\n    EyeOutlined,\r\n    DeleteOutlined,\r\n    FormOutlined,\r\n} from \"@ant-design/icons\";\r\nimport DataGrid, { Column, Pager, Paging } from \"devextreme-react/data-grid\";\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport configService from \"../../config\";\r\n\r\nimport axios from 'axios'\r\nimport { LoadPanel } from 'devextreme-react/load-panel';\r\n\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nconst api = configService.appIp + configService.apiUrlPrefix\r\nconst position = { of: '#App' };\r\n\r\nclass Project extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPopupSuccess: false, // alert success case\r\n            isPopupError: false, // alert error case\r\n            isPopupMsg: \"\", // alert msg\r\n            isOpen: false, // open popup confirm\r\n            isTypeShowConfirm: \"\", // ประเภทของ popup : save , del\r\n            isDataPopUp: {}, // ข้อมูลที่ใช้\r\n            isTextMsg: \"\", // msg ของ Popup\r\n            filter: {\r\n                projectName: null\r\n            },\r\n            data: [],\r\n            pageSize: configService.defaultPageSize,\r\n            pageIndex: 0,\r\n            loadPanelVisible: false\r\n        };\r\n\r\n        this.dataGridRef = React.createRef();\r\n        this.getTotalPageCount = () => {\r\n            return this.dataGridRef.current.instance.pageCount();\r\n        }\r\n\r\n        this.changePageSize = this.changePageSize.bind(this);\r\n        this.goToLastPage = this.goToLastPage.bind(this);\r\n        this.handleOptionChange = this.handleOptionChange.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fnGetData();\r\n    }\r\n\r\n    changePageSize(value) {\r\n        this.setState({\r\n            pageSize: value\r\n        });\r\n    }\r\n\r\n    goToLastPage() {\r\n        const pageCount = this.dataGridRef.current.instance.pageCount();\r\n        this.setState({\r\n            pageIndex: pageCount - 1\r\n        });\r\n    }\r\n\r\n    handleOptionChange(e) {\r\n        console.log(\"TCL: JobType -> handleOptionChange -> e\", e)\r\n        if (e.fullName === 'paging.pageSize') {\r\n            this.setState({\r\n                pageSize: e.value\r\n            });\r\n        }\r\n        if (e.fullName === 'paging.pageIndex') {\r\n            this.setState({\r\n                pageIndex: e.value\r\n            });\r\n        }\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            filter: {\r\n                projectName: '',\r\n            },\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.fnGetData();\r\n        }, 100);\r\n    };\r\n\r\n    onTypeNameChange = (event) => {\r\n        this.setState({\r\n            filter: {\r\n                projectName: event.target.value\r\n            }\r\n        });\r\n    }\r\n    onSearch = () => {\r\n        this.setState({ loadPanelVisible: true })\r\n        this.fnGetData();\r\n    }\r\n\r\n    onDeleteData = async (data) => {\r\n        try {\r\n            var response = await axios.delete(api + '/project/' + data);\r\n            if (response && response.status === 200) {\r\n                if (response.data && response.data.resultCode === \"20000\") {\r\n                    this.setState({ isOpen: false });\r\n                    this.setState({ isPopupError: false });\r\n                    this.setState({ isPopupSuccess: true });\r\n                    this.setState({ isPopupMsg: msgAlertTitle.deleted });\r\n                } else {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: true })\r\n                    this.setState({ isPopupSuccess: false })\r\n                    this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.setState({ loadPanelVisible: false })\r\n            this.setState({ isOpen: false })\r\n            this.setState({ isPopupError: true })\r\n            this.setState({ isPopupSuccess: false })\r\n            this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n            console.log(\"TCL: Project -> fnGetData -> error\", error)\r\n        }\r\n    }\r\n\r\n    fnGetData = async () => {\r\n        try {\r\n            let filter = {}\r\n            filter.filter = {}\r\n            filter.fields = configService.fields.projectList\r\n            filter.limit = this.state.pageSize;\r\n            filter.offset = this.state.pageIndex;\r\n            filter.orderby = \"projectName\";\r\n            console.log(\"🚀 ~ file: index.js ~ line 164 ~ Project ~ fnGetData= ~ this.state.filter\", this.state.filter)\r\n            \r\n            if (this.state.filter.projectName && this.state.filter.projectName !== '') {\r\n                filter.filter.projectName = this.state.filter.projectName\r\n            }\r\n            const response = await axios.get(api + '/project', { params: filter })\r\n            if (response && response.status === 200) {\r\n                if (response.data && response.data.resultCode === \"20000\") {\r\n                    this.setState({ data: response.data.resultData })\r\n                } else {\r\n                    this.setState({ data: response.data.resultData })\r\n                }\r\n\r\n            }\r\n            this.setState({ loadPanelVisible: false })\r\n        } catch (error) {\r\n            this.setState({ loadPanelVisible: false })\r\n            console.log(\"TCL: Project -> fnGetData -> error\", error)\r\n        }\r\n    }\r\n\r\n    delCellRender = (data) => {\r\n        console.log(\"project -> DelcellRender -> data\", data);\r\n        return (\r\n            <a\r\n                onClick={() => {\r\n                    this.setState({\r\n                        isOpen: true,\r\n                        isTypeShowConfirm: \"del\",\r\n                        isTextMsg: msgPopupTitle.deleted,\r\n                        isDataPopUp: data.data.projectId,\r\n                    });\r\n                }}\r\n            >\r\n\r\n                <span style={{ color: \"#111\", fontSize: \"12pt\" }}>\r\n\r\n                    <DeleteOutlined />\r\n                </span>\r\n            </a>\r\n        );\r\n    };\r\n\r\n    editCellRender = (data) => {\r\n        return (\r\n            <Link\r\n                to={\"/project\" + `/{\"action\":\"edit\",\"projectId\":\"${data.data.projectId}\"}`}\r\n            >\r\n                <span style={{ color: \"black\", fontSize: \"12pt\" }}>\r\n\r\n                    <FormOutlined />\r\n                </span>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    viewCellRender = (data) => {\r\n        return (\r\n            <Link\r\n                to={\"/project\" + `/{\"action\":\"view\",\"projectId\":\"${data.data.projectId}\"}`}\r\n            >\r\n                <span style={{ color: \"black\", fontSize: \"12pt\" }}>\r\n\r\n                    <EyeOutlined />\r\n                </span>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    noCellRender = (data) => {\r\n        return (\r\n            <span style={{ color: \"black\", fontSize: \"12pt\" }}>\r\n\r\n                {data.component.pageIndex() * data.component.pageSize() +\r\n                    data.rowIndex +\r\n                    1}\r\n            </span>\r\n        );\r\n    };\r\n\r\n    onProjectNameChange = (event) => {\r\n        this.setState({\r\n            filter: {\r\n                ...this.state.filter,\r\n                projectName: event.target.value\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"App\" id=\"App\">\r\n                    <div id=\"boxType\" className=\"container-box-content\">\r\n                        <div className=\"row wrap-container\">\r\n                            <Breadcrumb>\r\n                                {/* <Breadcrumb.Item href=\"#\"> */}\r\n                                    <HomeOutlined />\r\n                                    <span className=\"breadcrum-custom\"> Project </span>\r\n                                {/* </Breadcrumb.Item> */}\r\n                            </Breadcrumb>\r\n                            <div className=\"wrap-content\">\r\n                                <div className=\"box-search\">\r\n                                    <div className=\"box-title-search\">\r\n                                        <p className=\"font-size-search\"> Search Project </p>\r\n                                    </div>\r\n                                    <div className=\"box-content\">\r\n                                        <div className=\"box-search-border\">\r\n                                            <form>\r\n                                                <div className=\"row form-group\">\r\n                                                    <div\r\n                                                        className=\"col-4\"\r\n                                                        style={{ textAlign: \"right\" }}\r\n                                                    ></div>\r\n                                                </div>\r\n                                                {/* Project Name */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-3\" style={{ textAlign: \"right\" }}>\r\n\r\n                                                        <label\r\n                                                            className=\"title-field\"\r\n                                                            for=\"txtProjectName\"\r\n                                                        >\r\n                                                            Project Name\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        class=\"form-control col-6\"\r\n                                                        id=\"txtProjectName\"\r\n                                                        value={this.state.filter.projectName}\r\n                                                        onChange={this.onProjectNameChange}\r\n                                                    />\r\n                                                </div>\r\n                                            </form>\r\n                                            <div className=\"row form-group\">\r\n                                                <div className=\"col-12\" style={{ textAlign: \"center\" }}>\r\n                                                    <button\r\n                                                        class=\"btn-custom btn-reset \"\r\n                                                        style={{ marginRight: 20 }}\r\n                                                        onClick={this.handleReset}\r\n                                                    >\r\n                                                        RESET\r\n                                                    </button>\r\n                                                    <button class=\"btn-custom btn-search \" onClick={this.onSearch}>\r\n\r\n                                                        SEARCH\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* content start*/}\r\n                            <div className=\"wrap-content\">\r\n                                <div className=\"box-search\" style={{ padding: 30 }}>\r\n                                    <div style={{ textAlign: \"end\", padding: 15 }}>\r\n                                        <Link to='/project/{\"action\":\"create\"}'>\r\n                                            <button\r\n                                                className=\"btn-custom btn-search \"\r\n                                                style={{ width: 250 }}\r\n                                            >\r\n\r\n                                                <span className=\"btn-icon\">\r\n\r\n                                                    <IoAddOutline />\r\n                                                </span>\r\n                                                <span className=\"btn-txt-icon\">\r\n                                                    Create Project\r\n                                                </span>\r\n                                            </button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                    {/* data grid */}\r\n\r\n                                    <div style={{ padding: 20 }}>\r\n                                        <DataGrid\r\n                                            dataSource={this.state.data}\r\n                                            showBorders={true}\r\n                                            showRowLines={true}\r\n                                            ref={this.dataGridRef}\r\n                                            noDataText=\"No Data\"\r\n                                            onOptionChanged={this.handleOptionChange}\r\n                                        >\r\n                                            <Paging defaultPageSize={configService.defaultPageSize}\r\n                                                pageSize={this.state.pageSize}\r\n                                                pageIndex={this.state.pageIndex} />\r\n                                            <Pager\r\n                                                showPageSizeSelector={true}\r\n                                                allowedPageSizes={configService.allowedPageSizes}\r\n                                                showInfo={true}\r\n                                                showNavigationButtons={true}\r\n                                                visible={true}\r\n                                                remoteOperations={true}\r\n                                            />\r\n                                            <Column\r\n                                                width=\"100\"\r\n                                                caption=\"No\"\r\n                                                alignment=\"center\"\r\n                                                cellRender={this.noCellRender}\r\n                                                dataType=\"string\"\r\n                                            />\r\n                                            <Column\r\n                                                caption=\"Project Name\"\r\n                                                dataField=\"projectName\"\r\n                                                alignment=\"center\"\r\n                                                dataType=\"string\"\r\n                                            />\r\n                                            <Column\r\n                                                caption=\"Phase\"\r\n                                                dataField=\"projectPhase\"\r\n                                                alignment=\"center\"\r\n                                                dataType=\"string\"\r\n                                            />\r\n                                            <Column\r\n                                                width=\"100\"\r\n                                                alignment=\"center\"\r\n                                                caption=\"View\"\r\n                                                cellRender={this.viewCellRender}\r\n                                            />\r\n                                            <Column\r\n                                                width=\"100\"\r\n                                                alignment=\"center\"\r\n                                                caption=\"Edit\"\r\n                                                cellRender={this.editCellRender}\r\n                                            />\r\n                                            <Column\r\n                                                width=\"100\"\r\n                                                alignment=\"center\"\r\n                                                cellRender={this.delCellRender}\r\n                                                caption=\"Delete\"\r\n                                            />\r\n                                        </DataGrid>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* content end*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <LoadPanel\r\n                    shadingColor=\"rgba(0,0,0,0.4)\"\r\n                    position={position}\r\n                    visible={this.state.loadPanelVisible}\r\n                />\r\n\r\n\r\n                {/* POPUP */}\r\n                <AlertPopUp\r\n                    successStatus={this.state.isPopupSuccess}\r\n                    errorStatus={this.state.isPopupError}\r\n                    message={this.state.isPopupMsg}\r\n                    clearActive={() => {\r\n                        this.setState({ isPopupError: false });\r\n                        this.setState({ isPopupSuccess: false });\r\n                        this.fnGetData()\r\n                    }}\r\n                />\r\n                <ConfirmPopup\r\n                    open={this.state.isOpen}\r\n                    type={this.state.isTypeShowConfirm}\r\n                    text={this.state.isTextMsg}\r\n                    data={this.state.isDataPopUp}\r\n                    del={false}\r\n                    onClose={() => {\r\n                        this.setState({ isOpen: false });\r\n                    }}\r\n                    clearActive={(e) => {\r\n                        this.setState({ isOpen: false });\r\n                    }}\r\n                    confirmActive={(e) => {\r\n                        console.log(\"Work -> render -> e\", e);\r\n                        this.onDeleteData(e)\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;\r\n","import React, { Component } from \"react\";\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport AspNetData from \"devextreme-aspnet-data-nojquery\";\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport {\r\n    HomeOutlined,\r\n    EyeOutlined,\r\n    DeleteOutlined,\r\n    FormOutlined,\r\n} from \"@ant-design/icons\";\r\nimport DataGrid, { Column, Pager, Paging } from \"devextreme-react/data-grid\";\r\nimport configService from \"../../config\";\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport axios from 'axios'\r\nimport { LoadPanel } from 'devextreme-react/load-panel';\r\n\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nconst api = configService.appIp + configService.apiUrlPrefix\r\nconst position = { of: '#App' };\r\n\r\nclass JobType extends React.Component {\r\n\r\n    state = {\r\n        isOpen: false,\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPopupSuccess: false, // alert success case\r\n            isPopupError: false, // alert error case\r\n            isPopupMsg: \"Please contact your administrator.\", // alert msg\r\n            isOpen: false, // open popup confirm\r\n            isTypeShowConfirm: \"del\", // ประเภทของ popup : save , del\r\n            isDataPopUp: {}, // ข้อมูลที่ใช้\r\n            isTextMsg: \"Are you sure you want to delete this?\", // msg ของ Popup\r\n            filter: {\r\n                typeName: null,\r\n                typeCode: null,\r\n            },\r\n            data: [],\r\n            pageSize: configService.defaultPageSize,\r\n            pageIndex: 0,\r\n            loadPanelVisible: false\r\n        };\r\n        this.dataGridRef = React.createRef();\r\n        this.getTotalPageCount = () => {\r\n            return this.dataGridRef.current.instance.pageCount();\r\n        }\r\n\r\n        this.changePageSize = this.changePageSize.bind(this);\r\n        this.goToLastPage = this.goToLastPage.bind(this);\r\n        this.handleOptionChange = this.handleOptionChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.fnGetData();\r\n    }\r\n\r\n    changePageSize(value) {\r\n        this.setState({\r\n            pageSize: value\r\n        });\r\n    }\r\n\r\n    goToLastPage() {\r\n        const pageCount = this.dataGridRef.current.instance.pageCount();\r\n        this.setState({\r\n            pageIndex: pageCount - 1\r\n        });\r\n    }\r\n\r\n    handleOptionChange(e) {\r\n        console.log(\"TCL: JobType -> handleOptionChange -> e\", e)\r\n        if (e.fullName === 'paging.pageSize') {\r\n            this.setState({\r\n                pageSize: e.value\r\n            });\r\n        }\r\n        if (e.fullName === 'paging.pageIndex') {\r\n            this.setState({\r\n                pageIndex: e.value\r\n            });\r\n        }\r\n    }\r\n\r\n    onTypeNameChange = (event) => {\r\n        this.setState({\r\n            filter: {\r\n                ...this.state.filter,\r\n                typeName: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    onTypeCodeChange = (event) => {\r\n        this.setState({\r\n            filter: {\r\n                ...this.state.filter,\r\n                typeCode: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({ loadPanelVisible: true })\r\n        this.setState({\r\n            filter: { typeName: '', typeCode: '' }\r\n        });\r\n        setTimeout(() => {\r\n            this.fnGetData();\r\n        }, 100);\r\n    };\r\n\r\n    delCellRender = (data) => {\r\n        return (\r\n            <a\r\n                onClick={() => {\r\n                    this.setState({\r\n                        isOpen: true,\r\n                        isTypeShowConfirm: \"del\",\r\n                        isTextMsg: msgPopupTitle.deleted,\r\n                        isDataPopUp: data.data.typeId,\r\n                    });\r\n                }}\r\n            >\r\n\r\n                <span style={{ color: \"#111\", fontSize: \"12pt\" }}>\r\n\r\n                    <DeleteOutlined />\r\n                </span>\r\n            </a>\r\n        );\r\n    };\r\n\r\n    editCellRender = (data) => {\r\n        return (\r\n            <Link\r\n                to={\"/jobtype\" + `/{\"action\":\"edit\",\"jobTypeId\":\"${data.data.typeId}\"}`}\r\n            >\r\n                <span style={{ color: \"black\", fontSize: \"12pt\" }}>\r\n\r\n                    <FormOutlined />\r\n                </span>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    noCellRender = (data) => {\r\n        return (\r\n            <span style={{ color: \"black\", fontSize: \"12pt\" }}>\r\n\r\n                {data.component.pageIndex() * data.component.pageSize() +\r\n                    data.rowIndex +\r\n                    1}\r\n            </span>\r\n        );\r\n    };\r\n\r\n    onSearch = () => {\r\n        this.setState({ loadPanelVisible: true})\r\n        this.fnGetData();\r\n    };\r\n\r\n    onDeleteData = async (data) => {\r\n        try {\r\n            var response = await axios.delete(api + '/type/' + data);\r\n            if (response && response.status === 200) {\r\n                if (response.data && response.data.resultCode === \"20000\") {\r\n                    this.setState({ isOpen: false });\r\n                    this.setState({ isPopupError: false });\r\n                    this.setState({ isPopupSuccess: true });\r\n                    this.setState({ isPopupMsg: msgAlertTitle.deleted });\r\n                } else {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: true })\r\n                    this.setState({ isPopupSuccess: false })\r\n                    this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.setState({ loadPanelVisible: false })\r\n            this.setState({ isOpen: false })\r\n            this.setState({ isPopupError: true })\r\n            this.setState({ isPopupSuccess: false })\r\n            this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n            console.log(\"TCL: JobType -> fnGetData -> error\", error)\r\n        }\r\n    }\r\n\r\n    fnGetData = async () => {\r\n        try {\r\n            let filter = {}\r\n            filter.filter = {}\r\n            filter.fields = configService.fields.typeList\r\n            filter.limit = this.state.pageSize;\r\n            filter.offset = this.state.pageIndex;\r\n            filter.orderby = \"typeName\";\r\n            if (this.state.filter.typeName && this.state.filter.typeName !== '') {\r\n                filter.filter.typeName = this.state.filter.typeName\r\n            }\r\n            if (this.state.filter.typeCode && this.state.filter.typeCode !== '') {\r\n                filter.filter.typeCode = this.state.filter.typeCode\r\n            }\r\n            const response = await axios.get(api + '/type', { params: filter })\r\n            if (response && response.status === 200) {\r\n                if (response.data && response.data.resultCode === \"20000\") {\r\n                    this.setState({ data: response.data.resultData })\r\n                } else {\r\n                    this.setState({ data: response.data.resultData })\r\n                }\r\n\r\n            }\r\n            this.setState({ loadPanelVisible: false })\r\n        } catch (error) {\r\n            this.setState({ loadPanelVisible: false })\r\n            console.log(\"TCL: JobType -> fnGetData -> error\", error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"App\" id=\"App\">\r\n                    <div id=\"boxType\" className=\"container-box-content\">\r\n                        <div className=\"row wrap-container\">\r\n                            <Breadcrumb>\r\n                                {/* <Breadcrumb.Item href=\"#\"> */}\r\n                                    <HomeOutlined />\r\n                                    <span className=\"breadcrum-custom\"> Job Type </span>\r\n                                {/* </Breadcrumb.Item> */}\r\n                            </Breadcrumb>\r\n                            <div className=\"wrap-content\">\r\n                                <div className=\"box-search\">\r\n                                    <div className=\"box-title-search\">\r\n                                        <p className=\"font-size-search\"> Search Job Type </p>\r\n                                    </div>\r\n                                    <div className=\"box-content\">\r\n                                        <div className=\"box-search-border\">\r\n                                            <form>\r\n                                                <div className=\"row form-group\">\r\n                                                    <div\r\n                                                        className=\"col-4\"\r\n                                                        style={{ textAlign: \"right\" }}\r\n                                                    ></div>\r\n                                                </div>\r\n                                                {/* Job Type */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-4\" style={{ textAlign: \"right\" }}>\r\n\r\n                                                        <label for=\"txtTypeName\" className=\"title-field\">\r\n                                                            Job Type\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        class=\"form-control col-3\"\r\n                                                        id=\"txtTypeName\"\r\n                                                        value={this.state.filter.typeName} onChange={this.onTypeNameChange}\r\n                                                    />\r\n                                                </div>\r\n                                                {/* Code */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-4\" style={{ textAlign: \"right\" }}>\r\n\r\n                                                        <label for=\"txtTypeCode\" className=\"title-field\">\r\n                                                            Code\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        class=\"form-control col-3\"\r\n                                                        id=\"txtTypeCode\"\r\n                                                        value={this.state.filter.typeCode} onChange={this.onTypeCodeChange}\r\n                                                    />\r\n                                                </div>\r\n                                            </form>\r\n                                            <div className=\"row form-group\">\r\n                                                <div className=\"col-12\" style={{ textAlign: \"center\" }}>\r\n                                                    <button\r\n                                                        class=\"btn-custom btn-reset \"\r\n                                                        style={{ marginRight: 20 }}\r\n                                                        onClick={this.handleReset}\r\n                                                    >\r\n                                                        RESET\r\n                                                    </button>\r\n                                                    <button class=\"btn-custom btn-search \" onClick={this.onSearch}>\r\n                                                        SEARCH\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* content start*/}\r\n                            <div className=\"wrap-content\">\r\n                                <div className=\"box-search\" style={{ padding: 30 }}>\r\n                                    <div style={{ textAlign: \"end\", padding: 15 }}>\r\n                                        <Link to='/jobtype/{\"action\":\"create\"}'>\r\n                                            <button\r\n                                                className=\"btn-custom btn-search \"\r\n                                                style={{ width: 250 }}\r\n                                            >\r\n\r\n                                                <span className=\"btn-icon\">\r\n\r\n                                                    <IoAddOutline />\r\n                                                </span>\r\n                                                <span className=\"btn-txt-icon\">\r\n                                                    Create Job Type\r\n                                            </span>\r\n                                            </button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                    <div style={{ padding: 20 }}>\r\n                                        <DataGrid\r\n                                            dataSource={this.state.data}\r\n                                            showBorders={true}\r\n                                            showRowLines={true}\r\n                                            ref={this.dataGridRef}\r\n                                            noDataText=\"No Data\"\r\n                                            onOptionChanged={this.handleOptionChange}\r\n                                        >\r\n                                            <Paging defaultPageSize={configService.defaultPageSize}\r\n                                                pageSize={this.state.pageSize}\r\n                                                pageIndex={this.state.pageIndex} />\r\n                                            <Pager\r\n                                                showPageSizeSelector={true}\r\n                                                allowedPageSizes={configService.allowedPageSizes}\r\n                                                showInfo={true}\r\n                                                showNavigationButtons={true}\r\n                                                visible={true}\r\n                                                remoteOperations={true}\r\n                                            />\r\n                                            <Column\r\n                                                width=\"100\"\r\n                                                caption=\"No\"\r\n                                                alignment=\"center\"\r\n                                                cellRender={this.noCellRender}\r\n                                                dataType=\"string\"\r\n                                            />\r\n                                            <Column\r\n                                                caption=\"Job Type\"\r\n                                                dataField=\"typeName\"\r\n                                                dataType=\"string\"\r\n                                                alignment=\"center\"\r\n                                            />\r\n                                            <Column\r\n                                                caption=\"Code\"\r\n                                                dataField=\"typeCode\"\r\n                                                dataType=\"string\"\r\n                                                alignment=\"center\"\r\n                                            />\r\n                                            <Column\r\n                                                width=\"100\"\r\n                                                alignment=\"center\"\r\n                                                caption=\"Edit\"\r\n                                                cellRender={this.editCellRender}\r\n                                            />\r\n                                            <Column\r\n                                                width=\"100\"\r\n                                                alignment=\"center\"\r\n                                                cellRender={this.delCellRender}\r\n                                                caption=\"Delete\"\r\n                                            />\r\n                                        </DataGrid>\r\n                                    </div>\r\n                                    <LoadPanel\r\n                                        shadingColor=\"rgba(0,0,0,0.4)\"\r\n                                        position={position}\r\n                                        visible={this.state.loadPanelVisible}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {/* content end*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* POPUP */}\r\n                <AlertPopUp\r\n                    successStatus={this.state.isPopupSuccess}\r\n                    errorStatus={this.state.isPopupError}\r\n                    message={this.state.isPopupMsg}\r\n                    clearActive={() => {\r\n                        this.setState({ isPopupError: false });\r\n                        this.setState({ isPopupSuccess: false });\r\n                        this.setState({ loadPanelVisible: true })\r\n                        this.fnGetData()\r\n                    }}\r\n                />\r\n                <ConfirmPopup\r\n                    open={this.state.isOpen}\r\n                    type={this.state.isTypeShowConfirm}\r\n                    text={this.state.isTextMsg}\r\n                    data={this.state.isDataPopUp}\r\n                    del={false}\r\n                    onClose={() => {\r\n                        this.setState({ isOpen: false });\r\n                    }}\r\n                    clearActive={(e) => {\r\n                        this.setState({ isOpen: false });\r\n                    }}\r\n                    confirmActive={(e) => {\r\n                        console.log(\"Work -> render -> e\", e);\r\n                        this.onDeleteData(e)\r\n\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobType;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { HomeOutlined, DeleteOutlined, FormOutlined } from '@ant-design/icons';\r\nimport DropDownButton from 'devextreme-react/drop-down-button';\r\nimport moment from 'moment';\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport DataGrid, {\r\n  Column,\r\n  Grouping,\r\n  GroupPanel,\r\n  Paging,\r\n  SearchPanel,\r\n  Editing,\r\n  Pager,\r\n  Scrolling,\r\n} from 'devextreme-react/data-grid';\r\nimport _, { result } from \"lodash\";\r\nimport { Breadcrumb, Modal, TimePicker, Select } from 'antd';\r\nimport configService from '../../config';\r\nimport axios from 'axios'\r\nimport { LoadPanel } from 'devextreme-react/load-panel';\r\n\r\nimport { extendMoment } from 'moment-range';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst momentEx = extendMoment(moment);\r\n\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nconst msgValid = configService.validDateFill;\r\n\r\nconst format = \"HH:mm A\";\r\nconst Option = Select.Option;\r\nconst api = configService.appIp + configService.apiUrlPrefix\r\nconst position = { of: '#App' };\r\n\r\nclass Work extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      itembar: [false, false, false],\r\n      filter: {\r\n        dateFrom: moment().clone().startOf('month').toDate(),\r\n        dateTo: moment().clone().endOf('month').toDate(),\r\n        projectId: null,\r\n        typeId: null\r\n      },\r\n      projectList: [],\r\n      typeList: [],\r\n      isPopupSuccess: false, // alert success case\r\n      isPopupError: false,  // alert error case\r\n      isPopupMsg: '',  // alert msg\r\n      isOpen: false, // open popup confirm\r\n      isTypeShowConfirm: '', // ประเภทของ popup : save , del\r\n      isDataPopUp: {}, // ข้อมูลที่ใช้\r\n      isTextMsg: '', // msg ของ Popup\r\n      isDelete: false, // ใช้เช็คว่าเป็นการลบไหม\r\n      data: [\r\n        ],\r\n      popOver: {\r\n        workId: '',\r\n        visible: false\r\n      },\r\n      popupEditVisable: false,\r\n      updateData: {\r\n        projectId: null,\r\n        typeId: null,\r\n        workDate: null,\r\n        workDetail: null,\r\n        workUrl: null,\r\n        workManhour: null,\r\n        workTimeIn: null,\r\n        workTimeOut: null,\r\n        projectPhase: null,\r\n        timeIn: null,\r\n        timeOut: null,\r\n      },\r\n      loadPanelVisible: false\r\n    };\r\n\r\n    this.dataPopup = [\r\n      { id: 1, name: 'Edit', icon: 'edit' },\r\n      { id: 2, name: 'Delete', icon: 'trash' },\r\n    ];\r\n\r\n    // ปั้นวันที่ตามเดือนปัจจุบัน start\r\n   \r\n    \r\n    // this.dateOfCurrentMouth = []\r\n    // for (let i = 0; i < moment().daysInMonth(); i++) {\r\n    //   this.dateOfCurrentMouth.push({ workDate: `${(i + 1) >= 10 ? i + 1 : '0' + (i + 1)}/${moment().format('MM')}/${moment().format('YYYY')}` })\r\n    // }\r\n    \r\n\r\nconst range = momentEx.range(this.state.filter.dateFrom, this.state.filter.dateTo);\r\nconsole.log(\"🚀 ~ file: index.js ~ line 103 ~ Work ~ constructor ~ range\", range)\r\n    // this.keyDelete = [];\r\n    // ปั้นวันที่ตามเดือนปัจจุบัน end\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.setState({ loadPanelVisible: true })\r\n      await this.getProjectList()\r\n      await this.gettypeList()\r\n      await this.fnGetData();\r\n     \r\n      this.fnSetDefaultDate()\r\n      this.setState({ loadPanelVisible: false })\r\n    } catch (error) {\r\n      console.log(\"TCL: componentDidMount -> error\", error)\r\n    }\r\n  }\r\n\r\n  fnSetDefaultDate() {\r\n    let temp = _.cloneDeep(this.dateOfCurrentMouth)\r\n    // เอาค่าของ workDate ออกมา\r\n    setTimeout(() => {\r\n      let dataWorkDate = this.state.data.map(r => r.workDate)\r\n      // เอาค่าที่ไม่ซ้ำของ workDate\r\n      temp = temp.filter(r => dataWorkDate.indexOf(r.workDate) === -1)\r\n      for (const item of this.state.data) {\r\n        temp.push(item)\r\n  \r\n      }\r\n      console.log(\"TCL: fnSetDefaultDate -> temp\", temp)\r\n      this.setState({ data: temp })\r\n    }, 250);\r\n  }\r\n\r\n  \r\n  async getProjectList() {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        let resData = []\r\n        let filter = {\r\n          \"fields\": \"projectId,projectName,projectPhase\"\r\n          \r\n        }\r\n        const response = await axios.get(api + '/project', { params: filter })\r\n        if (response && response.status === 200) {\r\n          if (response.data && response.data.resultCode === \"20000\") {\r\n\r\n            // const result = numbers.map((number) => {\r\n            //   return number*2\r\n            // })\r\n          // ** Map Phase **\r\n            response.data.resultData = response.data.resultData.map((phase) => {\r\n              phase.projectName = `${phase.projectName} ${phase.projectPhase}`\r\n              return phase\r\n            })\r\n\r\n            this.setState({ projectList: response.data.resultData })\r\n            console.log(\"🚀 ~ file: index.js ~ line 219 ~ Work ~ returnnewPromise ~ response.data.resultData\", response.data.resultData)\r\n            resData = response.data.resultData\r\n          } else {\r\n            this.setState({ projectList: response.data.resultData ? response.data.resultData : [] })\r\n            resData = response.data.resultData || [];\r\n          }\r\n\r\n          let temp = [];\r\n          for (let i = 0; i < resData.length; i++) {\r\n            temp.push(\r\n              <Option key={resData[i].projectId}> {resData[i].projectName} </Option>\r\n            );\r\n          }\r\n\r\n          this.projectList = temp;\r\n        }\r\n        resolve();\r\n      } catch (error) {\r\n        console.log(\"TCL: getProjectList -> error\", error)\r\n        reject(error)\r\n      }\r\n    });\r\n  }\r\n\r\n  async gettypeList() {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        let resData = []\r\n        let filter = {\r\n          \"fields\": \"typeId,typeName\"\r\n        }\r\n        const response = await axios.get(api + '/type', { params: filter })\r\n        if (response && response.status === 200) {\r\n          if (response.data && response.data.resultCode === \"20000\") {\r\n            this.setState({ typeList: response.data.resultData })\r\n            resData = response.data.resultData\r\n          } else {\r\n            this.setState({ typeList: response.data.resultData ? response.data.resultData : [] })\r\n            resData = response.data.resultData || [];\r\n          }\r\n\r\n          let temp = [];\r\n          for (let i = 0; i < resData.length; i++) {\r\n            temp.push(\r\n              <Option key={resData[i].typeId}> {resData[i].typeName} </Option>\r\n            );\r\n          }\r\n\r\n          this.typeList = temp;\r\n        }\r\n        resolve();\r\n      } catch (error) {\r\n        console.log(\"TCL: getProjectList -> error\", error)\r\n        reject(error)\r\n      }\r\n    });\r\n  }\r\n  \r\n  handleProjectChange = (event) => {\r\n    this.setState({\r\n      filter: {\r\n        ...this.state.filter,\r\n        projectId: event.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({\r\n      filter: {\r\n        ...this.state.filter,\r\n        typeId: event.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChangeDateFrom = (event, type) => {\r\n    if (type === 'from') {\r\n      this.setState({\r\n        filter: {\r\n          ...this.state.filter,\r\n          dateFrom: event.value,\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        filter: {\r\n          ...this.state.filter,\r\n          dateTo: event.value\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  handleChangeDate  = (event,index) => {\r\n    let temp = _.cloneDeep(this.state.updateData.data)\r\n    for (let i = 0; i < temp.length; i++) {\r\n        const element = temp[i];\r\n        element.workDate = event.value\r\n    }\r\n\r\n    if (!event.value || event.value !== '') {\r\n        this.setState({ isValid_workDate: false });\r\n        \r\n    }\r\n    this.setState({ updateData: event.value, data: temp })\r\n}\r\n\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: moment().clone().startOf('month').toDate(),\r\n        dateTo: moment().clone().endOf('month').toDate(),\r\n        projectId: null,\r\n        typeId: null\r\n      }\r\n    })\r\n    setTimeout(() => {\r\n      this.fnGetData();\r\n  }, 100);\r\n  }\r\n\r\n  onSearch = () => {\r\n    this.setState({ loadPanelVisible: true })\r\n    this.fnGetData();\r\n}\r\n\r\n\r\n  groupRender = (data) => {\r\n    // console.log(\"groupRender -> data\", data)\r\n    // ข้อความ ดำ > บันทึกแล้ว\r\n    // ข้อความ แดง > ไม่บันทึก / ส - อ\r\n    // ข้อความ น้ำเงิน > ปัจจุบัน\r\n    let day = moment(data.value, 'YYYY/MM/DD').format('dddd')\r\n    let id = data.data.items && data.data.items.length > 0 ? data.data.items[0].workId : data.data.collapsedItems && data.data.collapsedItems.length > 0 ? data.data.collapsedItems[0].workId : null\r\n    let name = `DATE : ${data.value}  ${day}`\r\n    let now = moment().format('YYYY-MM-DD');\r\n    let workDate = '\"' + data.value.replace(/\\//g, \"%2F\") + '\"'\r\n      \r\n\r\n    console.log(\"TCL: groupRender -> workDate\", workDate)\r\n    return (<div className=\"row\">\r\n      <div style={{ fontSize: '12pt' }} className={`col-6 ${day === 'Sunday' || day === 'Saturday' ? 'color-red' : data.value === now ? 'color-blue' : 'color-black'}`}>\r\n        {name}\r\n      </div>\r\n\r\n      {/* ปุ่มบวก : */}\r\n\r\n      {/* {data.data.items[0].workId} */}\r\n      {data.data.items.length === 0 || data.data.items[0].workId === undefined ?\r\n        <div className=\"col-6\" style={{ textAlign: 'end' }}>\r\n          <Link to={\"/work\" + `/{\"action\":\"create\",\"workDate\":${workDate}}`}>\r\n            {/* <button className=\"btn-custom btn-search \" style={{ width: '40px', hight: '13px', borderRadius: '50%', }}><IoAddOutline /></button> */}\r\n            <IoAddOutline style={{ backgroundColor: 'green', borderRadius: '50%', width: '30', height: '30' }} />\r\n\r\n          </Link>\r\n        </div> :\r\n        <div className=\"col-6\" style={{ textAlign: 'end' }}>\r\n          <Link to={\"/work\" + `/{\"action\":\"edit\",\"workDate\":${workDate},\"workId\":${data.data.items[0].workId}}`}>\r\n            <span className=\"custom-icon-group\" style={{ color: 'black', fontSize: '12pt', marginRight: 20 }}><FormOutlined /></span>\r\n          </Link>\r\n          <a className=\"custom-icon-group\" onClick={() => {\r\n            console.log(data.data, 'data.datadata.datadata.datadata.data')\r\n            this.setState({\r\n              isOpen: true,\r\n              isTypeShowConfirm: \"del\",\r\n              isTextMsg: msgPopupTitle.deleted,\r\n              isDataPopUp: [data.data, 'all'],\r\n              isDelete: true,\r\n            });\r\n          }}><span style={{ color: '#111', fontSize: '12pt', marginRight: 20 }}><DeleteOutlined /></span></a>\r\n        </div>}\r\n\r\n    </div>\r\n    )\r\n  }\r\n\r\n  actionRender = (data) => {\r\n    return (<> {data.key && data.key.workId ?\r\n      <DropDownButton\r\n        text=\"...\"\r\n        dropDownOptions={{ width: 100 }}\r\n        items={this.dataPopup}\r\n        displayExpr=\"name\"\r\n        keyExpr=\"id\"\r\n        onItemClick={(e) => { this.onItemClick(e, data) }}\r\n      /> : null}\r\n    </>)\r\n  }\r\n\r\n  onItemClick = (e, data) => {\r\n    console.log(\"TCL: onItemClick -> data\", data)\r\n    if (e.itemData.name === 'Edit') {\r\n      this.setState({\r\n        popupEditVisable: true, updateData: {\r\n          ...data.data,\r\n          workTimeIn: moment(data.data.workTimeIn, 'HH:mm A'),\r\n          workTimeOut: moment(data.data.workTimeOut, 'HH:mm A'),\r\n          timeIn: data.data.workTimeIn,\r\n          timeOut: data.data.workTimeOut,\r\n        }\r\n      })\r\n\r\n    } else if (e.itemData.name === 'Delete') {\r\n      // call function delete\r\n      this.setState({\r\n        isOpen: true,\r\n        isTypeShowConfirm: \"del\",\r\n        isTextMsg: msgPopupTitle.deleted,\r\n        isDataPopUp: [data.data, 'one'],\r\n        isDelete: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  onDeleteData = async (data) => {\r\n    try {\r\n      var response = await axios.post(api + '/work/' , data);\r\n   \r\n    // if (data[1] === 'one') {\r\n    //   let dataWorkDate = this.state.data.map(r => {\r\n    //     if (r.workDate === data[0].workDate) {\r\n    //       return r\r\n    //     }\r\n    //   })\r\n\r\n    //   let newData = _.without(dataWorkDate, undefined);\r\n\r\n    //   // ต้อง call api -------------------\r\n    //   let tempDel = this.state.data.filter(r => data[0].workId.indexOf(r.workId) === -1)\r\n    //   if (newData && newData.length <= 1) {\r\n    //     tempDel.push({ workDate: data[0].workDate })\r\n    //   }\r\n    //   this.setState({ data: tempDel })\r\n    // } else {\r\n    //   let tempDel = _.cloneDeep(this.state.data)\r\n    //   for (let i = 0; i < data[0].items.length; i++) {\r\n    //     const element = data[0].items[i];\r\n    //     tempDel = tempDel.filter(r => element.workId.indexOf(r.workId) === -1)\r\n    //   }\r\n    //   tempDel.push({ workDate: data[0].key })\r\n    //   this.setState({ data: tempDel })\r\n\r\n    if (response && response.status === 200) {\r\n      if (response.data && response.data.resultCode === \"20000\") {\r\n          this.setState({ isOpen: false });\r\n          this.setState({ isPopupError: false });\r\n          this.setState({ isPopupSuccess: true });\r\n          this.setState({ isPopupMsg: msgAlertTitle.deleted });\r\n      } else {\r\n          this.setState({ isOpen: false })\r\n          this.setState({ isPopupError: true })\r\n          this.setState({ isPopupSuccess: false })\r\n          this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n      }\r\n    }\r\n  } catch (error) {\r\n    this.setState({ loadPanelVisible: false })\r\n    this.setState({ isOpen: false })\r\n    this.setState({ isPopupError: true })\r\n    this.setState({ isPopupSuccess: false })\r\n    this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n    console.log(\"TCL: Work -> fnGetData -> error\", error)\r\n  }\r\n  }\r\n\r\n  onUpdateData = (data) => {\r\n    console.log(\"TCL: onDeleteData -> data\", data)\r\n    let temp = _.cloneDeep(this.state.data)\r\n    for (let i = 0; i < temp.length; i++) {\r\n      const element = temp[i];\r\n      if (element.workId === this.state.updateData.workId) {\r\n        let splitTime = this.state.updateData.workManhour.split(':')\r\n        temp[i] = this.state.updateData\r\n        temp[i].workManhour = splitTime[0]\r\n        temp[i].workTimeIn = this.state.updateData.timeIn\r\n        temp[i].workTimeOut = this.state.updateData.timeOut\r\n      }\r\n    }\r\n\r\n    this.setState({ popupEditVisable: false })\r\n    this.setState({ data: temp })\r\n    this.setState({ isOpen: false })\r\n    this.setState({ isPopupError: false })\r\n    this.setState({ isPopupSuccess: true })\r\n    this.setState({ isPopupMsg: msgAlertTitle.updated })\r\n  }\r\n\r\n  onEditorPreparing(e) {\r\n    console.log(\"TCL: onEditorPreparing -> e ===> \", e)\r\n    if (e.parentType === 'dataRow' && e.dataField === 'Position') {\r\n      e.editorOptions.readOnly = this.isChief(e.value);\r\n    }\r\n  }\r\n\r\n  onEditorPrepared(e) {\r\n    console.log(\"TCL: onEditorPrepared -> e ===> \", e)\r\n  }\r\n\r\n  onInitNewRow(e) {\r\n    console.log(\"TCL: onInitNewRow -> e ===> \", e)\r\n  }\r\n\r\n  onContentReady(e) {\r\n    console.log(\"TCL: onContentReady -> e ===> \", e)\r\n  }\r\n\r\n  onRowPrepared(e) {\r\n    // แถบสี ม่วง > จ-ศ\r\n    // แถบสี เทา > ส-อ\r\n    if (e.rowType === 'group') {\r\n      // console.log(\"TCL: onRowPrepared -> e ===> \", e)\r\n      let day = moment(e.key[0], 'YYYY/MM/DD').format('dddd')\r\n      if (day !== 'Sunday' && day !== 'Saturday') {\r\n        e.rowElement.style.backgroundColor = 'rgb(232 211 255)';\r\n      } else {\r\n        e.rowElement.style.backgroundColor = '#ddd';\r\n      }\r\n      if (e.cells) {\r\n        if (e.cells[0]) {\r\n          if ((e.cells[0].data.collapsedItems && e.cells[0].data.collapsedItems[0] && e.cells[0].data.collapsedItems[0].workId) || (e.cells[0].data.items && e.cells[0].data.items[0] && e.cells[0].data.items[0].workId)) {\r\n            // e.component.expandRow(e.component.getKeyByRowIndex(e.rowIndex));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkValidData = () => {\r\n    let validProject = this.checkValid('project')\r\n    let validJobType = this.checkValid('job')\r\n    let validTimeIn = this.checkValid('in')\r\n    let validTimeOut = this.checkValid('out')\r\n    let validManHours = this.checkValid('hours')\r\n    let validDetail = this.checkValid('detail')\r\n    let validGreater = this.checkGreaterTime()\r\n    if (validProject && validJobType && validTimeIn && validTimeOut && validManHours && validDetail && validGreater) {\r\n      this.setState({\r\n        isOpen: true,\r\n        isTypeShowConfirm: \"save\",\r\n        isTextMsg: msgPopupTitle.saved,\r\n        isDataPopUp: this.state.updateData,\r\n        isDelete: false,\r\n      });\r\n    } else {\r\n\r\n      console.log(\"TCL: ActionsWork -> checkValidData -> \", 'กรอกข้อมูลไม่ครบ')\r\n    }\r\n  }\r\n\r\n  checkValid = (type) => {\r\n    let temp = _.cloneDeep(this.state.updateData)\r\n    let res = true;\r\n    if (type === 'project') {\r\n      const element = temp;\r\n      let valid = this.state.isValid_projectName;\r\n      if (!element.projectId || element.projectId === '') {\r\n        res = false;\r\n        valid = true;\r\n        this.setState({ isValid_projectName: valid });\r\n      }\r\n    } else if (type === 'job') {\r\n      const element = temp;\r\n      let valid = this.state.isValid_jobType;\r\n      if (!element.typeId || element.typeId === '') {\r\n        res = false;\r\n        valid = true;\r\n        this.setState({ isValid_jobType: valid });\r\n\r\n      }\r\n    } else if (type === 'in') {\r\n      const element = temp;\r\n      let valid = this.state.isValid_timeIn;\r\n      if (!element.workTimeIn || element.workTimeIn === '') {\r\n        res = false;\r\n        valid = true;\r\n        this.setState({ isValid_timeIn: valid });\r\n\r\n      }\r\n    } else if (type === 'out') {\r\n      const element = temp;\r\n      let valid = this.state.isValid_timeOut;\r\n      if (!element.workTimeOut || element.workTimeOut === '') {\r\n        res = false;\r\n        valid = true;\r\n        this.setState({ isValid_timeOut: valid });\r\n\r\n      }\r\n    } else if (type === 'hours') {\r\n      const element = temp;\r\n      let valid = this.state.isValid_manHours;\r\n      if (!element.workManhour || element.workManhour === '') {\r\n        res = false;\r\n        valid = true;\r\n        this.setState({ isValid_manHours: valid });\r\n\r\n      }\r\n    } else if (type === 'detail') {\r\n      const element = temp;\r\n      let valid = this.state.isValid_detail;\r\n      if (!element.workDetail || element.workDetail === '') {\r\n        res = false;\r\n        valid = true;\r\n        this.setState({ isValid_detail: valid });\r\n\r\n      }\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  checkGreaterTime() {\r\n    let res = true\r\n    if ((!this.state.updateData.timeIn || this.state.updateData.timeIn !== '') && (!this.state.updateData.timeOut || this.state.updateData.timeOut !== '')) {\r\n      var start = moment(this.state.updateData.timeIn, 'HH:mm A').format('HH:mm');\r\n      var end = moment(this.state.updateData.timeOut, 'HH:mm A').format('HH:mm');\r\n      let validTimeIn = this.state.greaterTimeIn;\r\n      let validTimeOut = this.state.greaterTimeOut;\r\n      if (start > end) {\r\n        validTimeIn = true;\r\n        validTimeOut = true;\r\n        this.setState({\r\n          greaterTimeIn: validTimeIn,\r\n          greaterTimeOut: validTimeOut,\r\n        })\r\n        res = false\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  confirmSave = (data) => {\r\n    console.log(\"TCL: ActionsWork -> confirmSave -> data\", data)\r\n    this.setState({ isOpen: false });\r\n    this.setState({ isPopupError: false });\r\n    this.setState({ isPopupSuccess: true });\r\n    this.setState({ isPopupMsg: this.state.params.action === \"edit\" ? msgAlertTitle.updated : msgAlertTitle.saved });\r\n\r\n  }\r\n\r\n  onWorkManHoursChange = (event) => {\r\n    let temp = _.cloneDeep(this.state.updateData)\r\n    temp.workManhour = event.target.value\r\n\r\n    let valid = this.state.isValid_timeOut;\r\n    if (!event.target.value || event.target.value !== '') {\r\n      valid = false;\r\n    }\r\n\r\n    this.setState({ updateData: temp, isValid_timeOut: valid });\r\n  }\r\n\r\n  onWorkUrlChange = (event) => {\r\n    console.log(\"TCL: ActionsWork -> onWorkUrlChange -> event\", event)\r\n    let temp = _.cloneDeep(this.state.updateData)\r\n    temp.workUrl = event.target.value\r\n    console.log(\"TCL: ActionsWork -> onWorkUrlChange -> temp\", temp)\r\n\r\n    this.setState({ updateData: temp });\r\n  }\r\n\r\n  onWorkDetailChange = (event, index) => {\r\n    let temp = _.cloneDeep(this.state.updateData)\r\n    temp.workDetail = event.target.value\r\n\r\n    let valid = this.state.isValid_detail;\r\n    if (!event.target.value || event.target.value !== '') {\r\n      valid = false;\r\n    }\r\n    this.setState({ updateData: temp, isValid_detail: valid });\r\n  }\r\n\r\n  onWorkPlanChange = (event, index) => {\r\n    let temp = _.cloneDeep(this.state.updateData)\r\n    temp.workPlan = event.target.value\r\n\r\n    let valid = this.state.isValid_Plan;\r\n    if (!event.target.value || event.target.value !== '') {\r\n      valid = false;\r\n    }\r\n    this.setState({ updateData: temp, isValid_Plan: valid });\r\n  }\r\n\r\n  onWorkRefChange = (event, index) => {\r\n    let temp = _.cloneDeep(this.state.updateData)\r\n    temp.workRef = event.target.value\r\n\r\n    let valid = this.state.isValid_Ref;\r\n    if (!event.target.value || event.target.value !== '') {\r\n      valid = false;\r\n    }\r\n    this.setState({ updateData: temp, isValid_Ref: valid });\r\n  }\r\n \r\n\r\n  // TODO :: Select\r\n  // TODO :: Dropdown Project Name\r\n  handleChangeProject = (value, index) => {\r\n    let item = this.state.updateData;\r\n    item.projectName = value;\r\n    let valid = this.state.isValid_projectName;\r\n    console.log(\"TCL: ActionsWork -> handleChangeProject -> valid\", valid)\r\n    if (!value || value !== '') {\r\n      valid = false;\r\n    }\r\n    this.setState({ updateData: item, isValid_projectName: valid });\r\n    console.log(\"TCL: ActionsWork -> handleChangeProject -> \", this.state)\r\n  };\r\n\r\n  // TODO :: Dropdown Job Type\r\n  handleChangeType = (value, index) => {\r\n    let item = this.state.updateData;\r\n    item.typeName = value;\r\n    let valid = this.state.isValid_jobType;\r\n    console.log(\"TCL: ActionsWork -> handleChangeType -> valid\", valid)\r\n    if (!value || value !== '') {\r\n      valid = false;\r\n    }\r\n\r\n    this.setState({ updateData: item, isValid_jobType: valid });\r\n    console.log(\"TCL: ActionsWork -> handleChangeType -> \", this.state)\r\n  };\r\n\r\n  \r\n  // TODO :: calculate man hours\r\n  calManHours = () => {\r\n\r\n    let temp = _.cloneDeep(this.state.updateData)\r\n    console.log(\"TCL: calManHours -> temp\", temp)\r\n    let validIn = this.state.isValid_timeIn;\r\n    let validOut = this.state.isValid_timeOut;\r\n\r\n\r\n    if (!temp.timeIn || temp.timeIn === '' || !temp.timeOut || temp.timeOut === '') {\r\n      if (!temp.timeOut || temp.timeOut === '') {\r\n        validOut = true;\r\n        this.setState({ isValid_timeOut: validOut });\r\n      }\r\n      if (!temp.timeIn || temp.timeIn === '') {\r\n        validIn = true;\r\n        this.setState({ isValid_timeIn: validIn });\r\n      }\r\n      return\r\n    }\r\n\r\n    if (this.checkGreaterTime() === false) {\r\n      console.log(\"TCL: ActionsWork -> calManHours -> \", 'time out > time in')\r\n      return\r\n    }\r\n\r\n    var start = moment(temp.timeIn, 'HH:mm A').format('HH:mm');\r\n    var end = moment(temp.timeOut, 'HH:mm A').format('HH:mm');\r\n    let tempTime = this.fnCallDiffTime(start, end)\r\n    let time = '';\r\n    let dataTime = tempTime.split(\":\");\r\n    let tempStart = start.split(\":\");\r\n    let tempEnd = end.split(\":\");\r\n    if (start <= '12:00' && end >= '13:00') {\r\n      let a = parseInt(dataTime[0]) - 1\r\n      time = (a <= 9 ? \"0\" : \"\") + a + \":\" + dataTime[1];\r\n    } else if (start > '12:00' && start < '13:00') {\r\n      if (end <= '13:00') {\r\n        time = '00:00'\r\n      } else if (end > '13:00') {\r\n        if (parseInt(tempStart[1]) <= parseInt(tempEnd[1])) {\r\n          let calHours = parseInt(dataTime[0]) - 1\r\n          time = (calHours <= 9 ? \"0\" : \"\") + calHours + \":\" + tempEnd[1];\r\n        } else {\r\n          let calMin = parseInt(tempEnd[1])\r\n          let calHours = parseInt(dataTime[0])\r\n          time = (calHours <= 9 ? \"0\" : \"\") + calHours + \":\" + (calMin <= 9 ? \"0\" : \"\") + calMin;\r\n        }\r\n      }\r\n    } else {\r\n      time = tempTime;\r\n    }\r\n\r\n    temp.workManhour = time\r\n    this.setState({ updateData: temp })\r\n  };\r\n\r\n  fnCallDiffTime = (start, end) => {\r\n    start = start.split(\":\");\r\n    end = end.split(\":\");\r\n    var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n    var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n    var diff = endDate.getTime() - startDate.getTime();\r\n    var hours = Math.floor(diff / 1000 / 60 / 60);\r\n    diff -= hours * 1000 * 60 * 60;\r\n    var minutes = Math.floor(diff / 1000 / 60);\r\n\r\n    if (hours < 0)\r\n      hours = hours + 24;\r\n\r\n    let time = (hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes;\r\n    return time;\r\n  }\r\n\r\n  // TODO :: Dropdown Time In\r\n  onChangeTimeIn = (time, timestring) => {\r\n    console.log(\"TCL: onChangeTimeIn -> timestring\", timestring)\r\n    console.log(\"TCL: onChangeTimeIn -> time\", time)\r\n    let item = this.state.updateData;\r\n    item.workTimeIn = time;\r\n    item.timeIn = timestring;\r\n    let valid = this.state.isValid_timeIn;\r\n    if (!timestring || timestring !== '') {\r\n      valid = false;\r\n    }\r\n\r\n    this.setState({ updateData: item, isValid_timeIn: valid });\r\n  };\r\n\r\n  // TODO :: Dropdown Time Out\r\n  onChangeTimeOut = (time, timestring) => {\r\n    let item = this.state.updateData;\r\n    item.workTimeOut = time;\r\n    item.timeOut = timestring;\r\n    let valid = this.state.isValid_timeOut;\r\n    if (!timestring || timestring !== '') {\r\n      valid = false;\r\n    }\r\n\r\n    this.setState({ updateData: item, isValid_timeOut: valid });\r\n\r\n  };\r\n\r\n\r\n\r\n  fnGetData = async () => {\r\n    \r\n    return new Promise(async (resolve, reject)=>{\r\n\r\n    try {\r\n        let filter = {}\r\n        filter.filter = {}\r\n        filter.fields = configService.fields.workList\r\n        filter.limit = this.state.pageSize;\r\n        filter.offset = this.state.pageIndex;\r\n        filter.orderby = \"projectName\";\r\n\r\n        if (this.state.filter.projectName && this.state.filter.projectName !== '') {\r\n            filter.filter.projectName = this.state.filter.projectName\r\n        }\r\n        \r\n        if (this.state.filter.typeName && this.state.filter.typeName !== '') {\r\n            filter.filter.typeName = this.state.filter.typeName\r\n        }\r\n\r\n      if (this.state.filter.dateFrom && this.state.filter.dateFrom !== '') {\r\n        filter.filter.dateFrom = this.state.filter.dateFrom\r\n    }\r\n\r\n      if (this.state.filter.dateTo && this.state.filter.dateTo !== '') {\r\n        filter.filter.dateTo = this.state.filter.dateTo\r\n    }\r\n\r\n    let start = moment(this.state.filter.dateFrom);\r\n    let end = moment(this.state.filter.dateTo);\r\n    console.log(this.state.filter.dateFrom)\r\n    console.log(this.state.filter.dateTo)\r\n    this.dateOfCurrentMouth = []\r\n    for (let i = start; i.isSameOrBefore(end, 'day'); i=i.add(1,'day')){\r\n      this.dateOfCurrentMouth.push({ \r\n     \r\n        workDate: i.format(\"YYYY/MM/DD\")})\r\n        console.log(i.format(\"YYYY/MM/DD\"))\r\n        \r\n      \r\n      }\r\n      \r\n      console.log(\"🚀 ~ file: index.js ~ line 829 ~ Work ~ returnnewPromise ~ this.dateOfCurrentMouth\", this.dateOfCurrentMouth)\r\n    \r\n\r\n\r\n        const response = await axios.get(api + '/work', { params: filter })\r\n        if (response && response.status === 200) {\r\n          if (response.data && response.data.resultCode === \"20000\") {\r\n              console.log(\"🚀 ~ file: index.js ~ line 751 ~ Work ~ returnnewPromise ~ this.state.data\", this.state.data)\r\n              // let mergeData = this.state.data.concat(response.data.resultData)\r\n             \r\n             \r\n              console.log(\"🚀 ~ file: index.js ~ line 849 ~ Work ~ returnnewPromise ~ response.data.resultData\", response.data.resultData)\r\n              // let tempData = []\r\n\r\n              // for (let i = 0; i < response.data.resultData.length; i++) {\r\n              //   const element = response.data.resultData[i];\r\n\r\n              //   this.dateOfCurrentMouth.forEach( x => {\r\n              //     if(x.workDate === element.workDate){\r\n              //       console.log(\"🚀 ~ file: index.js ~ line 852 ~ Work ~ returnnewPromise ~ x\", x)\r\n              //       tempData.push(element)\r\n              //     }\r\n              //   })\r\n\r\n              // }\r\n              // console.log(\"🚀 ~ file: index.js ~ line 859 ~ Work ~ returnnewPromise ~ tempData\", tempData)\r\n              // console.log(\"🚀 ~ file: index.js ~ line 859 ~ Work ~ returnnewPromise ~ this.dateOfCurrentMouth\", this.dateOfCurrentMouth)\r\n              let mergeData = this.dateOfCurrentMouth.concat(response.data.resultData)\r\n              \r\n              // console.log(\"🚀 ~ file: index.js ~ line 749 ~ Work ~ fnGetData= ~ response.data.resultData\", response.data.resultData)\r\n              console.log(\"\\n\\n\\n🚀 ~ file: index.js ~ line 749 ~ Work ~ fnGetData= ~ mergeData\", mergeData)\r\n                this.setState({ data: mergeData })\r\n                // this.fnSetDefaultDate()\r\n            } else {\r\n                this.setState({ data: this.state.data(response.data.resultData) })\r\n            }\r\n\r\n        }\r\n        this.setState({ loadPanelVisible: false })\r\n    } catch (error) {\r\n        this.setState({ loadPanelVisible: false })\r\n        console.log(\"TCL: Work -> fnGetData -> error\", error)\r\n    }\r\n  })\r\n\r\n}\r\n\r\n  render() {\r\n\r\n    return (<>\r\n\r\n      <div className=\"App\" id=\"App\">\r\n        <div id=\"boxType\" className=\"container-box-content\">\r\n          <div className=\"row wrap-container\">\r\n            <Breadcrumb>\r\n              {/* <Breadcrumb.Item href=\"#\"> */}\r\n              <HomeOutlined />\r\n              <span className=\"breadcrum-custom\">  Work </span>\r\n              {/* </Breadcrumb.Item> */}\r\n            </Breadcrumb>\r\n\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\">\r\n                <div className=\"box-title-search\">\r\n                  <p className=\"font-size-search\">Search Work</p>\r\n\r\n                </div>\r\n                <div className=\"box-content\">\r\n                  <div className=\"box-search-border\">\r\n                    <form>\r\n\r\n                      {/*  Dropdown */}\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlProjectName\" className=\"title-field\">Project Name</label></div>\r\n                            <select class=\"form-control col-7\" id=\"ddlProjectName\" value={this.state.filter.projectId} onChange={this.handleProjectChange}>\r\n                              {\r\n                                this.state.projectList.map(r => {\r\n                                  return <option value={r.projectId} selected={r.projectId == this.state.filter.projectId}>{r.projectName}</option>\r\n\r\n                                })\r\n                              }\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlJobType\" className=\"title-field\">Job Type</label></div>\r\n                            <select class=\"form-control col-7\" id=\"ddlJobType\" value={this.state.filter.typeId} onChange={this.handleTypeChange}>\r\n                              {\r\n                                this.state.typeList.map(r => {\r\n                                  // console.log(\"Work -> render -> r\", r)\r\n                                  return <option value={r.typeId} selected={r.typeId == this.state.filter.typeId}>{r.typeName}</option>\r\n                                })\r\n                              }\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/*  วันที่ */}\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlDateFrom\" className=\"title-field\">Date : From</label></div>\r\n                            <div className=\"col-7\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                              <DateBox\r\n                                value={this.state.filter.dateFrom}\r\n                                displayFormat=\"yyyy/MM/dd\"\r\n                                type=\"date\" onValueChanged={(e) => {\r\n                                  this.handleChangeDateFrom(e, 'from')\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlDateTo\" className=\"title-field\">Date : To</label></div>\r\n                            <div className=\"col-7\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                              <DateBox value={this.state.filter.dateTo}\r\n                                displayFormat=\"yyyy/MM/dd\"\r\n                                type=\"date\" type=\"date\" onValueChanged={(e) => {\r\n                                  this.handleChangeDateFrom(e, 'to')\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                    </form>\r\n\r\n                    <div className=\"row form-group\">\r\n                      <div className=\"col-12\" style={{ textAlign: 'center' }}>\r\n                        <button class=\"btn-custom btn-reset \" style={{ marginRight: 20 }} onClick={this.handleReset}>RESET\r\n                        </button>\r\n                      \r\n                        <button class=\"btn-custom btn-search \" onClick={this.onSearch}>\r\n                          SEARCH</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            {/* content start*/}\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\" style={{ padding: 30 }}>\r\n                <div style={{ textAlign: 'end', padding: 15 }}>\r\n                  <Link to='/work/{\"action\":\"create\"}'>\r\n                    <button className=\"btn-custom btn-search \" style={{ width: 185 }}><span className=\"btn-icon\"><IoAddOutline /></span> <span className=\"btn-txt-icon\">Create Work</span></button>\r\n\r\n                  </Link>\r\n                </div>\r\n                <div style={{ padding: 20 }} className=\"table-responsive\">\r\n                  <DataGrid\r\n                    dataSource={this.state.data}\r\n                    allowColumnReordering={false}\r\n                    showBorders={true}\r\n                    onEditorPreparing={this.onEditorPreparing}\r\n                    onEditorPrepared={this.onEditorPrepared}\r\n                    onInitNewRow={this.onInitNewRow}\r\n                    onRowPrepared={this.onRowPrepared}\r\n                    onContentReady={this.onContentReady}\r\n                  // columnWidth={100}\r\n                  >\r\n                    <Editing\r\n                      mode=\"row\"\r\n                      confirmDelete={false}\r\n                    />\r\n                    <Scrolling columnRenderingMode=\"virtual\" />\r\n                    <GroupPanel visible={false}\r\n                    />\r\n                    <SearchPanel visible={false} />\r\n                    <Grouping autoExpandAll={true} allowCollapsing={true} />\r\n                    <Paging defaultPageSize={10} />\r\n                    <Pager\r\n                      showPageSizeSelector={true}\r\n                      allowedPageSizes={[100, 250, 500, 1000]}\r\n                      showInfo={true}\r\n                      showNavigationButtons={true}\r\n                    />\r\n\r\n                    <Column dataField=\"projectName\" caption=\"Project\" dataType=\"string\" alignment=\"center\" />\r\n                    <Column dataField=\"projectPhase\" caption=\"Phase\" dataType=\"string\" alignment=\"center\"/>\r\n                    <Column dataField=\"typeName\" caption=\"Type\" dataType=\"string\"  alignment=\"center\" />\r\n                    <Column dataField=\"workDetail\" caption=\"Detail\" dataType=\"string\"  alignment=\"center\" />\r\n                    <Column dataField=\"workManhour\" caption=\"Man Hours\" dataType=\"string\"  alignment=\"center\" />\r\n                    <Column dataField=\"workTimeIn\" caption=\"Time In\" dataType=\"string\"  alignment=\"center\"/>\r\n                    <Column dataField=\"workTimeOut\" caption=\"Time Out\" dataType=\"string\"  alignment=\"center\"/>\r\n                    <Column dataField=\"workPlan\" caption=\"Link Plan\" dataType=\"string\"  alignment=\"center\"/>\r\n                    <Column dataField=\"workRef\" caption=\"Ref\" dataType=\"string\"  alignment=\"center\"/>\r\n                    <Column caption=\"Edit Delete\" alignment=\"center\" width={110} cellRender={this.actionRender}>\r\n                    </Column>\r\n                    <Column className=\"color-red\" dataField=\"workDate\" groupIndex={0} groupCellRender={this.groupRender} />\r\n                  </DataGrid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* content end*/}\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <LoadPanel\r\n        shadingColor=\"rgba(0,0,0,0.4)\"\r\n        position={position}\r\n        visible={this.state.loadPanelVisible}\r\n      />\r\n\r\n      {/* POPUP */}\r\n      <AlertPopUp successStatus={this.state.isPopupSuccess} errorStatus={this.state.isPopupError} message={this.state.isPopupMsg}\r\n        clearActive={() => {\r\n          this.setState({ isPopupError: false })\r\n          this.setState({ isPopupSuccess: false })\r\n        }} />\r\n\r\n      <ConfirmPopup open={this.state.isOpen} type={this.state.isTypeShowConfirm} text={this.state.isTextMsg} data={this.state.isDataPopUp} del={false}\r\n        onClose={() => { this.setState({ isOpen: false }) }}\r\n        clearActive={(e) => { this.setState({ isOpen: false }) }}\r\n        confirmActive={(e) => {\r\n          if (this.state.isDelete) {\r\n            this.onDeleteData(e);\r\n          } else {\r\n            this.onUpdateData(e);\r\n          }\r\n        }}\r\n      />\r\n\r\n      <Modal centered\r\n        footer={null}\r\n        header={null}\r\n        visible={this.state.popupEditVisable}\r\n        width={1200}\r\n        closable={false}\r\n        onOk={() => {\r\n          this.setState({ popupEditVisable: false })\r\n        }}\r\n      >\r\n        {this.state.popupEditVisable ?\r\n          <div className=\"box-title-search\" style={{ paddingBottom: 0 }}>\r\n            <p className=\"font-size-search\"> Update Work </p>\r\n\r\n            <div className=\"box-content\" style={{ marginBottom: 0 }}>\r\n\r\n              <div style={{ textAlign: \"right\" }}>\r\n                <p className=\"title-field\">\r\n                  <span style={{ color: \"red\" }}> * </span> Items marked with an asterisk are required\r\n                                            </p>\r\n              </div> </div>\r\n\r\n\r\n            <div className=\"box-action-content\">\r\n\r\n              {/* Date */}\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-2\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\"title-field\" for=\"Date\" >\r\n                        Date : <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n\r\n                    </div>\r\n                    <div className={`col-10`} style={{ textAlign: 'start', padding: 0 }}>\r\n                    <DateBox value={null} type=\"date\" value={this.state.updateData.workDate}\r\n                                                        displayFormat=\"yyyy/MM/dd\"\r\n                                                        type=\"date\" onValueChanged={(e) => {\r\n                                                            this.handleChangeDate(e)\r\n                                                        }}\r\n                                                        className={`${this.state.isValid_workDate && this.state.isSubmit ? 'has-error-input' : ''}`} />\r\n                                                    {this.state.isValid_workDate && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validWorkDate}</span> : null}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n              </div>\r\n\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\"title-field\" for=\"ddlProjectName\" >\r\n                        Project Name <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className={`col-8`} style={{ textAlign: 'start', padding: 0 }}>\r\n                      <div className={`form-control div-select ${this.state.isValid_projectName && this.state.isSubmit ? 'has-error-input' : ''}`}>\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: 200 }}\r\n                          placeholder=\"Please selete project\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={(e) => {\r\n                            this.handleChangeProject(e);\r\n                          }}\r\n                          filterOption={(input, option) =>\r\n                            option.props.children[1].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                          value={this.state.updateData.projectName}>\r\n                          {this.projectList}\r\n                        </Select>\r\n                      </div>\r\n                      {this.state.isValid_projectName && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validProjectName}</span> : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Job Type */}\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\"title-field\" for=\"ddlJobType\" >\r\n                        Job Type <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className={`col-8`} style={{ textAlign: 'start', padding: 0 }}>\r\n                      <div className={`form-control div-select ${this.state.isValid_jobType && this.state.isSubmit ? 'has-error-input' : ''}`}>\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: 200 }}\r\n                          placeholder=\"Please selete Type\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={(e) => {\r\n                            this.handleChangeType(e);\r\n                          }}\r\n                          filterOption={(input, option) =>\r\n                            option.props.children[1]\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                          value={this.state.updateData.typeName} \r\n                        >\r\n                          {this.typeList}\r\n                        </Select>\r\n                      </div>\r\n                      {this.state.isValid_jobType && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validJobType}</span> : null}\r\n\r\n                    </div>\r\n                  </div> \r\n                </div>\r\n                </div>\r\n\r\n              {/* Time in */}\r\n              <div className=\"row form-group\" >\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\"title-field\" for=\"ddlTimeIn\" >\r\n                        Time in <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-8\" style={{ textAlign: 'start', padding: 0 }}>\r\n                      <TimePicker\r\n                        showNow={true}\r\n                        className=\"font-12pt\"\r\n                        style={{ fontSize: \"12pt\" }}\r\n                        use12Hours\r\n                        placeholder=\"Select time in\"\r\n                        format={format}\r\n                        value={this.state.updateData.workTimeIn}\r\n                        showNow={true}\r\n                        onChange={(time, timestring) => {\r\n                          this.onChangeTimeIn(time, timestring);\r\n                        }}\r\n                        className={`${this.state.isValid_timeIn || this.state.greaterTimeIn ? 'has-error-input' : ''}`} />\r\n                      {this.state.isValid_timeIn && !this.state.greaterTimeIn ? <span className=\"color-red\">{msgValid.work.validTimeIn}</span> : null}\r\n                      {this.state.greaterTimeIn && !this.state.isValid_timeIn ? <span className=\"color-red\">{msgValid.work.validTimeInmoreTimeOut}</span> : null}\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Time out */}\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\"title-field\" for=\"ddlTimeOut\" >\r\n                        Time out <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-8\" style={{ textAlign: 'start', padding: 0 }}>\r\n                      <TimePicker\r\n                        showNow={true}\r\n                        className=\"font-12pt\"\r\n                        style={{ fontSize: \"12pt\" }}\r\n                        use12Hours\r\n                        placeholder=\"Select Time out\"\r\n                        format={format}\r\n                        value={this.state.updateData.workTimeOut}\r\n                        showNow={true}\r\n                        onChange={(time, timestring) => {\r\n                          this.onChangeTimeOut(time, timestring);\r\n                        }}\r\n                        className={`${this.state.isValid_timeOut || this.state.greaterTimeOut ? 'has-error-input' : ''}`} />\r\n                      {this.state.isValid_timeOut && !this.state.greaterTimeOut ? <span className=\"color-red\">{msgValid.work.validTimeOut}</span> : null}\r\n                      {this.state.greaterTimeOut && !this.state.isValid_timeOut ? <span className=\"color-red\">{msgValid.work.validTimeOutlessTimeIn}</span> : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Man hours */}\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\"title-field\" for=\"txtManHours\" >\r\n                        Man hours <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-6\" style={{ textAlign: 'start', padding: 0 }}>\r\n                      <input type=\"text\" className={`form-control ${this.state.isValid_manHours && this.state.isSubmit ? 'has-error-input' : ''}`}\r\n                        id=\"txtManHours\" value={this.state.updateData.workManhour} onChange={(event) => { this.onWorkManHoursChange(event) }} />\r\n                      {this.state.isValid_manHours && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validManHours}</span> : null}\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      <button class=\"btn-custom btn-calculate\" onClick={this.calManHours} >\r\n                        Calculate\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Url */}\r\n              {/* <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\"title-field\" for=\"txtUrl\">\r\n                        Url\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-8\" style={{ textAlign: 'start', padding: 0 }}>\r\n                      <input type=\"text\" class=\"form-control\" id=\"txtUrl\" value={this.state.updateData.workUrl} onChange={(event) => { this.onWorkUrlChange(event) }} />\r\n                    </div>\r\n                  </div>\r\n                </div> */}\r\n\r\n\r\n              {/* Detail */}\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-2\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\" title-field\" for=\"txtDetail\" >\r\n                        Detail <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-10\" style={{ textAlign: 'start', padding: 0 }}>\r\n                      <textarea rows=\"3\" type=\"text\" id=\"txtDetail\"\r\n                        className={`form-control ${this.state.isValid_detail && this.state.isSubmit ? 'has-error-input' : ''}`}\r\n                        value={this.state.updateData.workDetail} onChange={(event) => { this.onWorkDetailChange(event) }}\r\n                      />\r\n                      {this.state.isValid_detail && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validWorkDetail}</span> : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {/* Plan */}\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-2\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\"title-field\" for=\"LinkPlan\" >\r\n                        Link Plan\r\n                                                                        </label>\r\n                    </div>\r\n                    <div className=\"col-10\" style={{ textAlign: 'start', padding: 0 }}>\r\n\r\n                      <input type=\"text\" class=\"form-control\" id=\"txtLinkPlan\" value={this.state.updateData.workPlan} onChange={(event) => { this.onWorkPlanChange(event) }} />\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Ref */}\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-2\" style={{ textAlign: \"right\" }} >\r\n                      <label className=\"title-field\" for=\"Ref\" >\r\n                        Ref\r\n                                                                        </label>\r\n                    </div>\r\n                    <div className=\"col-10\" style={{ textAlign: 'start', padding: 0 }}>\r\n\r\n                      <input type=\"text\" class=\"form-control\" id=\"txtRef\" value={this.state.updateData.workRef} onChange={(event) => { this.onWorkRefChange(event) }} />\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"row form-group\" style={{ margin: 0 }}>\r\n              <div className=\"col-12\" style={{ textAlign: \"right\", padding: 20 }}>\r\n                <button\r\n                  class=\"btn-custom btn-reset\"\r\n                  style={{ marginRight: 20 }}\r\n                  onClick={() => {\r\n                    this.setState({ popupEditVisable: false })\r\n                  }}\r\n                >\r\n                  CANCEL\r\n                </button>\r\n                <button\r\n                  class=\"btn-custom btn-search\"\r\n                  style={{ marginRight: 0 }}\r\n                  onClick={() => {\r\n                    this.setState({ isSubmit: true })\r\n                    this.checkValidData()\r\n\r\n                  }}\r\n\r\n                >\r\n                  UPDATE\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : null}\r\n\r\n      </Modal>\r\n    </>);\r\n  }\r\n}\r\n\r\n\r\nexport default Work;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport DateBox from \"devextreme-react/date-box\";\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, TimePicker, Select } from \"antd\";\r\nimport { HomeOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport { BrowserRouter as Router, Switch, Route,HashRouter, Link } from \"react-router-dom\";\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport configService from \"../../config\";\r\nimport axios from 'axios'\r\nimport { LoadPanel } from 'devextreme-react/load-panel';\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nconst msgValid = configService.validDateFill;\r\nconst format = \"HH:mm A\";\r\nconst Option = Select.Option;\r\nconst api = configService.appIp + configService.apiUrlPrefix\r\nconst position = { of: '#App' };\r\n\r\nclass ActionsWork extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        console.log(\"TCL: ActionsWork -> constructor -> props\", props)\r\n        let query = _.cloneDeep(props.match.params.query);\r\n        let tempQuery = JSON.parse(JSON.stringify(query));\r\n        let param = JSON.parse(tempQuery);\r\n        // console.log(\"TCL: ActionsWork -> constructor -> param\", param)\r\n\r\n        super(props);\r\n        this.state = {\r\n            isPopupSuccess: false, // alert success case\r\n            isPopupError: false, // alert error case\r\n            isPopupMsg: \"\", // alert msg\r\n            isOpen: false, // open popup confirm\r\n            isTypeShowConfirm: \"\", // ประเภทของ popup : save , del\r\n            isDataPopUp: {}, // ข้อมูลที่ใช้\r\n            isTextMsg: \"\", // msg ของ Popup\r\n            isDelete: false, // ใช้เช็คว่าเป็นการลบไหม\r\n            workDate: null,\r\n            data: [\r\n                {\r\n                    workId: null,\r\n                    projectId: null,\r\n                    typeId: null,\r\n                    workDate: null,\r\n                    workDetail: null,\r\n                    workPlan: null,\r\n                    workRef: null,\r\n                    workManhour: null,\r\n                    workTimeIn: null,\r\n                    workTimeOut: null,\r\n                    projectPhase: null,\r\n                    timeIn: null,\r\n                    timeOut: null,\r\n                },\r\n            ],\r\n            projectList: [],\r\n            typeList: [],\r\n            params: param,\r\n            isValid_projectName: [],\r\n            isValid_jobType: [],\r\n            isValid_timeIn: [],\r\n            isValid_timeOut: [],\r\n            isValid_manHours: [],\r\n            isValid_detail: [],\r\n            isValid_workDate: false,\r\n            greaterTimeIn: [],\r\n            greaterTimeOut: [],\r\n            isSubmit: false,\r\n            loadPanelVisible: false\r\n        };\r\n\r\n        let tempDateFirstRow = _.cloneDeep(this.state.data)\r\n        tempDateFirstRow[0].workDate = this.state.params.action === 'create' && this.state.params.workDate ? this.state.params.workDate : null\r\n        console.log(\"TCL: ActionsWork -> constructor -> tempDateFirstRow\", tempDateFirstRow)\r\n        this.setState({ data: tempDateFirstRow })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            this.setState({ loadPanelVisible: true })\r\n            await this.getProjectList()\r\n            await this.gettypeList()\r\n            if (this.state.params && this.state.params.workDate) {\r\n                let workDate = _.cloneDeep(this.state.params.workDate)\r\n                console.log(\"TCL: ActionsWork -> componentDidMount -> workDate\", workDate)\r\n                let date = workDate.replace(/%2F/g, \"\\/\")\r\n                if (this.state.params.action === 'create') {\r\n                    this.setState({\r\n                        workDate: moment(date, 'YYYY/MM/DD').toDate()\r\n                    })\r\n\r\n                }\r\n                if (this.state.params.action === 'edit') {\r\n                    await this.getDataView()\r\n                }\r\n            }\r\n            this.setState({ loadPanelVisible: false })\r\n        } catch (error) {\r\n            console.log(\"TCL: componentDidMount -> error\", error)\r\n        }\r\n    }\r\n\r\n    async getProjectList() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let resData = []\r\n                let filter = {\r\n                    \"fields\": \"projectId,projectName,projectPhase\"\r\n                }\r\n                const response = await axios.get(api + '/project', { params: filter })\r\n                if (response && response.status === 200) {\r\n                    if (response.data && response.data.resultCode === \"20000\") {\r\n\r\n            // const result = numbers.map((number) => {\r\n            //   return number*2\r\n            // })\r\n            // ** Map Phase **\r\n                response.data.resultData = response.data.resultData.map((phase) => {\r\n                phase.projectName = `${phase.projectName} ${phase.projectPhase}`\r\n                return phase\r\n                })\r\n\r\n                        this.setState({ projectList: response.data.resultData })\r\n                        resData = response.data.resultData\r\n                    } else {\r\n                        this.setState({ projectList: response.data.resultData ? response.data.resultData : [] })\r\n                        resData = response.data.resultData || [];\r\n                    }\r\n\r\n                    let temp = [];\r\n                    for (let i = 0; i < resData.length; i++) {\r\n                        console.log(\"🚀 ~ file: create-edit-view.js ~ line 146 ~ ActionsWork ~ returnnewPromise ~ resData[i].projectId\", resData[i].projectId)\r\n                        temp.push(\r\n                            <Option key={resData[i].projectId} value={resData[i].projectId}> {resData[i].projectName} </Option>\r\n                        );\r\n                    }\r\n\r\n                    this.projectList = temp;\r\n                }\r\n                resolve();\r\n            } catch (error) {\r\n                console.log(\"TCL: getProjectList -> error\", error)\r\n                reject(error)\r\n            }\r\n        });\r\n    }\r\n\r\n    async gettypeList() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let resData = []\r\n                let filter = {\r\n                    \"fields\": \"typeId,typeName\"\r\n                }\r\n                const response = await axios.get(api + '/type', { params: filter })\r\n                if (response && response.status === 200) {\r\n                    if (response.data && response.data.resultCode === \"20000\") {\r\n                        this.setState({ typeList: response.data.resultData })\r\n                        resData = response.data.resultData\r\n                    } else {\r\n                        this.setState({ typeList: response.data.resultData ? response.data.resultData : [] })\r\n                        resData = response.data.resultData || [];\r\n                    }\r\n\r\n                    let temp = [];\r\n                    for (let i = 0; i < resData.length; i++) {\r\n                        temp.push(\r\n                            <Option key={resData[i].typeId} value={resData[i].typeId}> {resData[i].typeName} </Option>\r\n                        );\r\n                    }\r\n\r\n                    this.typeList = temp;\r\n                }\r\n                resolve();\r\n            } catch (error) {\r\n                console.log(\"TCL: getProjectList -> error\", error)\r\n                reject(error)\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    // TODO :: Select\r\n    // TODO :: Dropdown Project Name\r\n    handleChangeProject = (value, index) => {\r\n    console.log(\"🚀 ~ file: create-edit-view.js ~ line 197 ~ ActionsWork ~ index\", index)\r\n    console.log(\"🚀 ~ file: create-edit-view.js ~ line 197 ~ ActionsWork ~ value\", value)\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.projectId = value;\r\n        data[index] = item;\r\n\r\n        let valid = [...this.state.isValid_projectName];\r\n        if (!value || value !== '') {\r\n            valid[index] = false;\r\n        }\r\n        this.setState({ data: data, isValid_projectName: valid });\r\n    };\r\n\r\n    \r\n\r\n    handleBlurProject = () => {\r\n        console.log(\"blur ---- \", this.typeList);\r\n    };\r\n\r\n    handleFocusProject = () => {\r\n        console.log(\"focus ....\", this.typeList);\r\n    };\r\n\r\n    // TODO :: Dropdown Job Type\r\n    handleChangeType = (value, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.typeId = value;\r\n        data[index] = item;\r\n\r\n        let valid = [...this.state.isValid_jobType];\r\n        if (!value || value !== '') {\r\n            valid[index] = false;\r\n        }\r\n\r\n        this.setState({ data: data, isValid_jobType: valid });\r\n    };\r\n\r\n    handleBlurType = () => {\r\n        console.log(\"blur ---- \", this.typeList);\r\n    };\r\n\r\n    handleFocusType = () => {\r\n        console.log(\"focus ....\", this.typeList);\r\n    };\r\n\r\n\r\n    // TODO :: Dropdown Time In\r\n    onChangeTimeIn = (time, timestring, index) => {\r\n\r\n        console.log(\"ActionsWork -> onChangeTimeIn -> time, timestring, index\", time, timestring, index)\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeIn = time;\r\n        item.timeIn = timestring;\r\n        data[index] = item;\r\n\r\n        let valid = [...this.state.isValid_timeIn];\r\n        if (!timestring || timestring !== '') {\r\n            valid[index] = false;\r\n        }\r\n\r\n        this.setState({ data: data, isValid_timeIn: valid });\r\n        this.checkGreaterTime('one', index)\r\n    };\r\n\r\n    // TODO :: Dropdown Time Out\r\n    onChangeTimeOut = (time, timestring, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeOut = time;\r\n        item.timeOut = timestring;\r\n        data[index] = item;\r\n        let valid = [...this.state.isValid_timeOut];\r\n        if (!timestring || timestring !== '') {\r\n            valid[index] = false;\r\n        }\r\n\r\n        this.setState({ data: data, isValid_timeOut: valid });\r\n        this.checkGreaterTime('one', index)\r\n    };\r\n\r\n    \r\n\r\n    // TODO :: calculate man hours\r\n    calManHours = (index) => {\r\n\r\n        let temp = _.cloneDeep(this.state.data)\r\n        let validIn = [...this.state.isValid_timeIn];\r\n        let validOut = [...this.state.isValid_timeOut];\r\n\r\n\r\n        if (!temp[index].timeIn || temp[index].timeIn === '' || !temp[index].timeOut || temp[index].timeOut === '') {\r\n            if (!temp[index].timeOut || temp[index].timeOut === '') {\r\n                validOut[index] = true;\r\n                this.setState({ isValid_timeOut: validOut });\r\n            }\r\n            if (!temp[index].timeIn || temp[index].timeIn === '') {\r\n                validIn[index] = true;\r\n                this.setState({ isValid_timeIn: validIn });\r\n            }\r\n            return\r\n        }\r\n\r\n        if (this.checkGreaterTime('one', index) === false) {\r\n            console.log(\"TCL: ActionsWork -> calManHours -> \", 'time out > time in')\r\n            return\r\n        }\r\n\r\n        var start = moment(temp[index].timeIn, 'HH:mm A').format('HH:mm');\r\n        var end = moment(temp[index].timeOut, 'HH:mm A').format('HH:mm');\r\n        let tempTime = this.fnCallDiffTime(start, end)\r\n        let time = '';\r\n        let dataTime = tempTime.split(\":\");\r\n        let tempStart = start.split(\":\");\r\n        let tempEnd = end.split(\":\");\r\n        if (start <= '12:00' && end >= '13:00') {\r\n            let a = parseInt(dataTime[0]) - 1\r\n            time = (a <= 9 ? \"0\" : \"\") + a + \":\" + dataTime[1];\r\n        } else if (start > '12:00' && start < '13:00') {\r\n            if (end <= '13:00') {\r\n                time = '00:00'\r\n            } else if (end > '13:00') {\r\n                if (parseInt(tempStart[1]) <= parseInt(tempEnd[1])) {\r\n                    let calHours = parseInt(dataTime[0]) - 1\r\n                    time = (calHours <= 9 ? \"0\" : \"\") + calHours + \":\" + tempEnd[1];\r\n                } else {\r\n                    let calMin = parseInt(tempEnd[1])\r\n                    let calHours = parseInt(dataTime[0])\r\n                    time = (calHours <= 9 ? \"0\" : \"\") + calHours + \":\" + (calMin <= 9 ? \"0\" : \"\") + calMin;\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            time = tempTime;\r\n        }\r\n\r\n        let valid = [...this.state.isValid_manHours];\r\n        valid[index] = false;\r\n        temp[index].workManhour = time\r\n        this.setState({ data: temp, isValid_manHours: valid });\r\n    };\r\n\r\n    fnCallDiffTime = (start, end) => {\r\n        start = start.split(\":\");\r\n        end = end.split(\":\");\r\n        var startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n        var endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n        var diff = endDate.getTime() - startDate.getTime();\r\n        var hours = Math.floor(diff / 1000 / 60 / 60);\r\n        diff -= hours * 1000 * 60 * 60;\r\n        var minutes = Math.floor(diff / 1000 / 60);\r\n\r\n        if (hours < 0)\r\n            hours = hours + 24;\r\n\r\n        let time = (hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes;\r\n        return time;\r\n    }\r\n\r\n\r\n    // TODO :: Add form data\r\n    handleAddData = () => {\r\n        console.log(\"ActionsWork -> handleAddData -> handleAddData\");\r\n        this.state.data.push({\r\n            workId: null,\r\n            projectId: null,\r\n            typeId: null,\r\n            workDate: null,\r\n            workDetail: null,\r\n            workPlan: null,\r\n            workRef: null,\r\n            workManhour: null,\r\n            workTimeIn: null,\r\n            workTimeOut: null,\r\n        });\r\n        let a = this.state.data;\r\n        this.setState({ data: a });\r\n    };\r\n\r\n    handleChangeDate = (event) => {\r\n        let temp = _.cloneDeep(this.state.data)\r\n        for (let i = 0; i < temp.length; i++) {\r\n            const element = temp[i];\r\n            element.workDate = event.value\r\n        }\r\n\r\n        if (!event.value || event.value !== '') {\r\n            this.setState({ isValid_workDate: false });\r\n        }\r\n        this.setState({ workDate: event.value, data: temp })\r\n    }\r\n\r\n    onWorkManHoursChange = (event, index) => {\r\n        let temp = _.cloneDeep(this.state.data)\r\n        temp[index].workManhour = event.target.value\r\n        let valid = [...this.state.isValid_manHours];\r\n        if (event.target.value || event.target.value !== '') {\r\n            valid[index] = false;\r\n        }\r\n\r\n        this.setState({ data: temp, isValid_manHours: valid });\r\n    }\r\n\r\n    onWorkPlanChange = (event, index) => {\r\n        let temp = _.cloneDeep(this.state.data)\r\n        temp[index].workPlan = event.target.value\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n\r\n    onWorkRefChange = (event, index) => {\r\n        let temp = _.cloneDeep(this.state.data)\r\n        temp[index].workRef = event.target.value\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    onWorkDetailChange = (event, index) => {\r\n        let temp = _.cloneDeep(this.state.data)\r\n        temp[index].workDetail = event.target.value\r\n\r\n        let valid = [...this.state.isValid_detail];\r\n        if (!event.target.value || event.target.value !== '') {\r\n            valid[index] = false;\r\n        }\r\n        this.setState({ data: temp, isValid_detail: valid });\r\n    }\r\n\r\n    checkValidData = () => {\r\n        let validProject = this.checkValid('project')\r\n        let validJobType = this.checkValid('job')\r\n        let validTimeIn = this.checkValid('in')\r\n        let validTimeOut = this.checkValid('out')\r\n        let validManHours = this.checkValid('hours')\r\n        let validDetail = this.checkValid('detail')\r\n        let validDate = this.checkValid('date')\r\n        let validGreater = this.checkGreaterTime('all', '')\r\n        if (validProject && validJobType && validTimeIn && validTimeOut && validManHours && validDetail && validDate && validGreater) {\r\n            this.setState({\r\n                isOpen: true,\r\n                isTypeShowConfirm: \"save\",\r\n                isTextMsg: msgPopupTitle.saved,\r\n                isDataPopUp: this.state.data,\r\n                isDelete: false,\r\n            });\r\n        } else {\r\n            console.log(\"TCL: ActionsWork -> checkValidData -> \", 'กรอกข้อมูลไม่ครบ')\r\n        }\r\n    }\r\n\r\n    checkValid = (type) => {\r\n        let temp = _.cloneDeep(this.state.data)\r\n        let res = true;\r\n        if (type === 'project') {\r\n            for (let i = 0; i < temp.length; i++) {\r\n                const element = temp[i];\r\n                let valid = [...this.state.isValid_projectName];\r\n                console.log(\"🚀 ~ file: create-edit-view.js ~ line 459 ~ ActionsWork ~ element.projectId\", element.projectId)\r\n                if (!element.projectId || element.projectId === '') {\r\n                    res = false;\r\n                    valid[i] = true;\r\n                    console.log(\"🚀 ~ file: create-edit-view.js ~ line 461 ~ ActionsWork ~ valid\", valid)\r\n                    this.setState({ isValid_projectName: valid });\r\n                }\r\n            }\r\n        } else if (type === 'job') {\r\n            for (let i = 0; i < temp.length; i++) {\r\n                const element = temp[i];\r\n                let valid = [...this.state.isValid_jobType];\r\n                if (!element.typeId || element.typeId === '') {\r\n                    res = false;\r\n                    valid[i] = true;\r\n                    this.setState({ isValid_jobType: valid });\r\n                }\r\n            }\r\n        } else if (type === 'in') {\r\n            for (let i = 0; i < temp.length; i++) {\r\n                const element = temp[i];\r\n                let valid = [...this.state.isValid_timeIn];\r\n                if (!element.workTimeIn || element.workTimeIn === '') {\r\n                    res = false;\r\n                    valid[i] = true;\r\n                    this.setState({ isValid_timeIn: valid });\r\n                }\r\n            }\r\n        } else if (type === 'out') {\r\n            for (let i = 0; i < temp.length; i++) {\r\n                const element = temp[i];\r\n                let valid = [...this.state.isValid_timeOut];\r\n                if (!element.workTimeOut || element.workTimeOut === '') {\r\n                    res = false;\r\n                    valid[i] = true;\r\n                    this.setState({ isValid_timeOut: valid });\r\n                }\r\n            }\r\n        } else if (type === 'hours') {\r\n            for (let i = 0; i < temp.length; i++) {\r\n                const element = temp[i];\r\n                let valid = [...this.state.isValid_manHours];\r\n                if (!element.workManhour || element.workManhour === '') {\r\n                    res = false;\r\n                    valid[i] = true;\r\n                    this.setState({ isValid_manHours: valid });\r\n                }\r\n            }\r\n        } else if (type === 'detail') {\r\n            for (let i = 0; i < temp.length; i++) {\r\n                const element = temp[i];\r\n                let valid = [...this.state.isValid_detail];\r\n                if (!element.workDetail || element.workDetail === '') {\r\n                    res = false;\r\n                    valid[i] = true;\r\n                    this.setState({ isValid_detail: valid });\r\n                }\r\n            }\r\n        } else if (type === 'date') {\r\n            if (this.state.workDate === '' || !this.state.workDate) {\r\n                res = false;\r\n                this.setState({ isValid_workDate: true });\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    checkGreaterTime(type, index) {\r\n\r\n        if (type === 'one') {\r\n\r\n            if ((this.state.data[index].timeIn || this.state.data[index].timeIn !== '') && (this.state.data[index].timeOut || this.state.data[index].timeOut !== '')) {\r\n                var start = moment(this.state.data[index].timeIn, 'HH:mm A').format('HH:mm');\r\n                var end = moment(this.state.data[index].timeOut, 'HH:mm A').format('HH:mm');\r\n                let validTimeIn = [...this.state.greaterTimeIn];\r\n                let validTimeOut = [...this.state.greaterTimeOut];\r\n                console.log(start);\r\n                console.log(end);\r\n                if (start > end) {\r\n                    validTimeIn[index] = true;\r\n                    validTimeOut[index] = true;\r\n\r\n                    this.setState({\r\n                        greaterTimeIn: validTimeIn,\r\n                        greaterTimeOut: validTimeOut,\r\n                    })\r\n                    return false\r\n                } else {\r\n                    validTimeIn[index] = false;\r\n                    validTimeOut[index] = false;\r\n                    this.setState({\r\n                        greaterTimeIn: validTimeIn,\r\n                        greaterTimeOut: validTimeOut,\r\n                    })\r\n                    return true\r\n                }\r\n            }\r\n        } else {\r\n            let temp = _.cloneDeep(this.state.data)\r\n            let res = true;\r\n            for (let i = 0; i < temp.length; i++) {\r\n                const element = temp[i];\r\n                var start = moment(element.timeIn, 'HH:mm A').format('HH:mm');\r\n                var end = moment(element.timeOut, 'HH:mm A').format('HH:mm');\r\n                let validTimeIn = [...this.state.greaterTimeIn];\r\n                let validTimeOut = [...this.state.greaterTimeOut];\r\n                if (start > end) {\r\n                    validTimeIn[i] = true;\r\n                    validTimeOut[i] = true;\r\n                    this.setState({\r\n                        greaterTimeIn: validTimeIn,\r\n                        greaterTimeOut: validTimeOut,\r\n                    })\r\n                    res = false\r\n                }\r\n            }\r\n            return res\r\n        }\r\n    }\r\n\r\n    deleteData = async (data) => {\r\n        try {\r\n            var response = await axios.delete(api + '/work/' + data);\r\n\r\n        // ต้อง call api -------------------\r\n        let tempDel = _.cloneDeep(this.state.data)\r\n        tempDel.splice(data[1], 1);\r\n        this.setState({ data: tempDel })\r\n        // ต้อง call api -------------------\r\n        if (response && response.status === 200) {\r\n            if (response.data && response.data.resultCode === \"20000\") {\r\n            } else {\r\n        this.setState({ isOpen: false });\r\n        this.setState({ isPopupError: false });\r\n        this.setState({ isPopupSuccess: true });\r\n        this.setState({ isPopupMsg: msgAlertTitle.deleted });\r\n    }\r\n}\r\n} catch (error) {\r\n    this.setState({ loadPanelVisible: false })\r\n    this.setState({ isOpen: false })\r\n    this.setState({ isPopupError: true })\r\n    this.setState({ isPopupSuccess: false })\r\n    this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n    console.log(\"TCL: WorkEdit -> fnGetData -> error\", error)\r\n}\r\n}\r\n\r\n    confirmSave = async (data) => {\r\n        this.setState({ loadPanelVisible: true })\r\n        console.log(\"TCL: ActionJobType -> confirmSave -> data\", data)\r\n        try {\r\n            let body = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                const element = data[i];\r\n                let temp = {\r\n                    workId: element.workId,\r\n                    projectId: element.projectId,\r\n                    typeId: element.typeId,\r\n                    workDate: moment(this.state.workDate).format('YYYY-MM-DD'),\r\n                    workDetail: element.workDetail,\r\n                    workPlan: element.workPlan,\r\n                    workRef: element.workRef,\r\n                    workManhour: element.workManhour,\r\n                    workTimeIn: element.timeIn,\r\n                    workTimeOut: element.timeOut};\r\n                if (!element.workRef) {\r\n                   delete temp.workRef;\r\n                }\r\n                if (!element.workPlan) {\r\n                   delete temp.workPlan;\r\n                }\r\n                if (this.state.params.action === 'create') {\r\n                    delete temp.workId;\r\n                }\r\n                body.push(temp)\r\n            }\r\n            console.log(\"TCL: ActionsWork -> confirmSave -> body\", body)\r\n            var response;\r\n            if (this.state.params.action === 'edit') {\r\n                response = await axios.put(api + '/work/'+this.state.params.workId, body)\r\n            } else {\r\n                response = await axios.post(api + '/work', body)\r\n            }\r\n            if (response && response.status === 200) {\r\n                if (response.data && response.data.resultCode === \"20000\") {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: false })\r\n                    this.setState({ isPopupSuccess: true })\r\n                    this.setState({ isPopupMsg: this.state.params.action === 'edit' ? msgAlertTitle.updated : msgAlertTitle.saved })\r\n                } else {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: true })\r\n                    this.setState({ isPopupSuccess: false })\r\n                    this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n                }\r\n            }\r\n            this.setState({ loadPanelVisible: false })\r\n        } catch (error) {\r\n            this.setState({ loadPanelVisible: false })\r\n            this.setState({ isOpen: false })\r\n            this.setState({ isPopupError: true })\r\n            this.setState({ isPopupSuccess: false })\r\n            this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n            console.log(\"TCL: JobType -> fnGetData -> error\", error)\r\n        }\r\n    }\r\n\r\n    async getDataView() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let resData = []\r\n                let filter = {\r\n                    \"filter\": {\r\n                        \"workDate\": moment(this.state.params.workDate.replace(/%2F/g, \"\\/\"), 'YYYY/MM/DD').format('YYYY-MM-DD')\r\n                    }\r\n                }\r\n                const response = await axios.get(api + '/work', { params: filter })\r\n                if (response && response.status === 200) {\r\n                    if (response.data && response.data.resultCode === \"20000\") {\r\n                        let temp = _.cloneDeep(response.data.resultData)\r\n                        console.log(\"TCL: ActionsWork -> getDataView -> temp\", temp)\r\n                        for (let i = 0; i < temp.length; i++) {\r\n                            const element = temp[i];\r\n                            temp[i].timeIn = element.workTimeIn\r\n                            temp[i].timeOut = element.workTimeOut\r\n                            temp[i].workTimeIn = moment(element.workTimeIn, 'HH:mm A').local();\r\n                            temp[i].workTimeOut = moment(element.workTimeOut, 'HH:mm A').local();\r\n                        }\r\n                        console.log(\"TCL: ActionsWork -> getDataView -> temp\", temp)\r\n                        this.setState({ data: temp, workDate: moment(temp[0].workDate, 'YYYY/MM/DD').toDate() })\r\n                    } else {\r\n                        // this.setState({ data: [], workDate: null })\r\n                    }\r\n                }\r\n                resolve();\r\n            } catch (error) {\r\n                console.log(\"TCL: getProjectList -> error\", error)\r\n                reject(error)\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"App\">\r\n                    <div id=\"boxType\" className=\"container-box-content\">\r\n                        <div className=\"row wrap-container\">\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item href=\"/work\">\r\n                                    <HomeOutlined />\r\n                                    <span className=\"breadcrum-custom\"> work </span>\r\n                                </Breadcrumb.Item>\r\n                                {this.state.params.action === \"create\" ? (\r\n                                    <span className=\"breadcrum-custom\"> Create work </span>\r\n                                ) : null}\r\n                                {this.state.params.action === \"edit\" ? (\r\n                                    <span className=\"breadcrum-custom\"> Update work </span>\r\n                                ) : null}\r\n                            </Breadcrumb>\r\n\r\n                            <div className=\"wrap-content\">\r\n                                <div className=\"box-action\">\r\n                                    <div className=\"box-title-search\">\r\n\r\n                                        {this.state.params.action === \"create\" ? (<p className=\"font-size-search\"> Create Work </p>) : null}\r\n                                        {this.state.params.action === \"edit\" ? (<p className=\"font-size-search\"> Update Work </p>) : null}\r\n                                    </div>\r\n                                    <div className=\"box-content\" style={{ marginBottom: 0 }}>\r\n                                        <div className=\"box-action-date\">\r\n                                            <div className=\"row form-group\">\r\n                                                <div className=\"col-3\" style={{ textAlign: \"right\" }}>\r\n\r\n                                                    <label className=\"title-field\" for=\"ddlDate\">\r\n\r\n                                                        Date : <span style={{ color: \"red\" }}> * </span>\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className={`col-4`} style={{ textAlign: 'start', padding: 0 }}>\r\n                                                    <DateBox value={null} type=\"date\" value={this.state.workDate}\r\n                                                        displayFormat=\"yyyy/MM/dd\"\r\n                                                        type=\"date\" onValueChanged={(e) => {\r\n                                                            this.handleChangeDate(e)\r\n                                                        }}\r\n                                                        className={`${this.state.isValid_workDate && this.state.isSubmit ? 'has-error-input' : ''}`} />\r\n                                                    {this.state.isValid_workDate && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validWorkDate}</span> : null}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr className=\"hr-action\" />\r\n                                        <div style={{ textAlign: \"right\" }}>\r\n                                            <p className=\"title-field\">\r\n                                                <span style={{ color: \"red\" }}> * </span> Items marked with an asterisk are required\r\n                                            </p>\r\n                                        </div>\r\n                                        {this.state.data.map((data, i) => {\r\n                                            console.log('data.projectId --> ', data.projectId)\r\n                                            return (\r\n                                                <>\r\n                                                    <div className=\"box-action-content\">\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div\r\n                                                                        className=\"col-4\"\r\n                                                                        style={{ textAlign: \"right\" }}\r\n                                                                    >\r\n                                                                        <label className=\"title-field\" for=\"ddlProjectName\" >\r\n                                                                            Project Name  <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className={`col-8`} style={{ textAlign: 'start', padding: 0 }}>\r\n\r\n                                                                        \r\n                                                                        <div className={`form-control div-select ${this.state.isValid_projectName[i] && this.state.isSubmit ? 'has-error-input' : ''}`}>\r\n                                                                            <Select\r\n                                                                                showSearch\r\n                                                                                style={{ width: 200 }}\r\n                                                                                placeholder=\"Please selete project\"\r\n                                                                                optionFilterProp=\"children\"\r\n                                                                                onChange={(e) => {\r\n                                                                                    \r\n                                                                                    \r\n\r\n                                                                                    console.log(\"TCL: ActionsWork -> render -> \", this.projectList)\r\n                                                                                    this.handleChangeProject(e, i);\r\n                                                                                }}\r\n                                                                               \r\n                                                                                filterOption={(input, option) =>\r\n                                                                                    option.props.children[1].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                                                }\r\n                                                                                \r\n                                                                                value={data.projectId}>\r\n                                                                                    \r\n                                                                                {this.projectList}\r\n                                                                            </Select>\r\n                                                                        </div>\r\n                                                                   \r\n                                                                        {this.state.isValid_projectName[i] && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validProjectName}</span> : null}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                                                                        <label className=\"title-field\" for=\"ddlJobType\" >\r\n                                                                            Job Type <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className={`col-8`} style={{ textAlign: 'start', padding: 0 }}>\r\n                                                                        <div className={`form-control div-select ${this.state.isValid_jobType[i] && this.state.isSubmit ? 'has-error-input' : ''}`}>\r\n                                                                            <Select\r\n                                                                                showSearch\r\n                                                                                style={{ width: 200 }}\r\n                                                                                placeholder=\"Please selete Type\"\r\n                                                                                optionFilterProp=\"children\"\r\n                                                                                onChange={(e) => {\r\n                                                                                    this.handleChangeType(e, i);\r\n                                                                                }}\r\n                                                                                onFocus={(e) => {\r\n                                                                                    this.handleFocusType(e, i);\r\n                                                                                }}\r\n                                                                                onBlur={(e) => {\r\n                                                                                    this.handleBlurType(e, i);\r\n                                                                                }}\r\n                                                                                filterOption={(input, option) =>\r\n                                                                                    option.props.children[1]\r\n                                                                                        .toLowerCase()\r\n                                                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                                                }\r\n                                                                                value={data.typeId}\r\n                                                                            >\r\n\r\n                                                                                {this.typeList}\r\n                                                                            </Select>\r\n                                                                        </div>\r\n                                                                        {this.state.isValid_jobType[i] && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validJobType}</span> : null}\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* Time in */}\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                                                                        <label className=\"title-field\" for=\"ddlTimeIn\" >\r\n                                                                            Time in <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-8\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                                        <TimePicker\r\n                                                                            showNow={true}\r\n                                                                            className=\"font-12pt\"\r\n                                                                            style={{ fontSize: \"12pt\" }}\r\n                                                                            use12Hours\r\n                                                                            placeholder=\"Select time in\"\r\n                                                                            format={format}\r\n                                                                            value={data.workTimeIn}\r\n                                                                            showNow={true}\r\n                                                                            onChange={(time, timestring) => {\r\n                                                                                this.onChangeTimeIn(\r\n                                                                                    time,\r\n                                                                                    timestring,\r\n                                                                                    i\r\n                                                                                );\r\n                                                                            }}\r\n\r\n                                                                            className={`${this.state.isValid_timeIn[i] || this.state.greaterTimeIn[i] ? 'has-error-input' : ''}`} />\r\n                                                                        {this.state.isValid_timeIn[i] && !this.state.greaterTimeIn[i] ? <span className=\"color-red\">{msgValid.work.validTimeIn}</span> : null}\r\n                                                                        {this.state.greaterTimeIn[i] && !this.state.isValid_timeIn[i] ? <span className=\"color-red\">{msgValid.work.validTimeInmoreTimeOut}</span> : null}\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n                                                            {/* Time out */}\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                                                                        <label className=\"title-field\" for=\"ddlTimeOut\" >\r\n                                                                            Time out <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-8\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                                        <TimePicker\r\n                                                                            showNow={true}\r\n                                                                            className=\"font-12pt\"\r\n                                                                            style={{ fontSize: \"12pt\" }}\r\n                                                                            use12Hours\r\n                                                                            placeholder=\"Select Time out\"\r\n                                                                            format={format}\r\n                                                                            value={data.workTimeOut}\r\n                                                                            showNow={true}\r\n                                                                            onChange={(time, timestring) => {\r\n                                                                                this.onChangeTimeOut(\r\n                                                                                    time,\r\n                                                                                    timestring,\r\n                                                                                    i\r\n                                                                                );\r\n                                                                            }}\r\n                                                                            className={`${this.state.isValid_timeOut[i] || this.state.greaterTimeOut[i] ? 'has-error-input' : ''}`} />\r\n                                                                        {this.state.isValid_timeOut[i] && !this.state.greaterTimeOut[i] ? <span className=\"color-red\">{msgValid.work.validTimeOut}</span> : null}\r\n                                                                        {this.state.greaterTimeOut[i] && !this.state.isValid_timeOut[i] ? <span className=\"color-red\">{msgValid.work.validTimeOutlessTimeIn}</span> : null}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* Man hours */}\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                                                                        <label className=\"title-field\" for=\"txtManHours\" >\r\n                                                                            Man hours <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-4\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                                        <input type=\"text\" className={`form-control ${this.state.isValid_manHours[i] && this.state.isSubmit ? 'has-error-input' : ''}`}\r\n                                                                            id=\"txtManHours\" value={data.workManhour} onChange={(event) => { this.onWorkManHoursChange(event, i) }} />\r\n                                                                        {this.state.isValid_manHours[i] && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validManHours}</span> : null}\r\n                                                                    </div>\r\n                                                                    <div className=\"col-3\">\r\n                                                                        <button class=\"btn-custom btn-calculate\" onClick={() => { this.calManHours(i) }} >\r\n                                                                            Calculate\r\n                                                                        </button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* Url */}\r\n                                                        {/* <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-4\" style={{ textAlign: \"right\" }} >\r\n                                                                        <label className=\"title-field\" for=\"txtUrl\">\r\n                                                                            Url\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-8\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                                        <input type=\"text\" class=\"form-control\" id=\"txtUrl\" value={data.workUrl} onChange={(event) => { this.onWorkUrlChange(event, i) }} />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div> */}\r\n\r\n                                                        {/* Detail */}\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-2\" style={{ textAlign: \"right\" }} >\r\n                                                                        <label className=\"title-field\" for=\"txtDetail\" >\r\n                                                                            Detail <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-10\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                                        <textarea\r\n                                                                            rows=\"3\"\r\n                                                                            type=\"text\"\r\n                                                                            id=\"txtDetail\"\r\n                                                                            className={`form-control ${this.state.isValid_detail[i] && this.state.isSubmit ? 'has-error-input' : ''}`}\r\n                                                                            value={data.workDetail} onChange={(event) => { this.onWorkDetailChange(event, i) }}\r\n                                                                        />\r\n                                                                        {this.state.isValid_detail[i] && this.state.isSubmit ? <span className=\"color-red\">{msgValid.work.validWorkDetail}</span> : null}\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {/* Link Plan */}\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-2\" style={{ textAlign: \"right\" }} >\r\n                                                                        <label className=\"title-field\" for=\"txtLinkPlan\" >\r\n                                                                        Link Plan\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-10\" style={{ textAlign: 'start', padding: 0 }}>\r\n\r\n                                                                        <input type=\"text\" class=\"form-control\" id=\"txtPlan\" value={data.workPlan} onChange={(event) => { this.onWorkPlanChange(event, i) }} />\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {/* Ref*/}\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-2\" style={{ textAlign: \"right\" }} >\r\n                                                                        <label className=\"title-field\" for=\"txtRef\" >\r\n                                                                        Ref\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-10\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                                        <input type=\"text\" class=\"form-control\" id=\"txtRef\" value={data.workRef} onChange={(event) => { this.onWorkRefChange(event, i) }} />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    {this.state.data.length > 1 ? (\r\n                                                        <div\r\n                                                            style={{\r\n                                                                textAlign: \"end\",\r\n                                                                marginTop: 20,\r\n                                                                marginBottom: 10,\r\n                                                            }}\r\n                                                        >\r\n                                                            <button type=\"button\" style={{ background: \"red\", color: \"#fff\", width: 300 }}\r\n                                                                className=\"btn btn-popup-custom error\"\r\n                                                                onClick={() => {\r\n                                                                    this.setState({\r\n                                                                        isOpen: true,\r\n                                                                        isTypeShowConfirm: \"del\",\r\n                                                                        isTextMsg: msgPopupTitle.deleted,\r\n                                                                        isDataPopUp: [data, i],\r\n                                                                        isDelete: true,\r\n                                                                    });\r\n                                                                }}\r\n                                                            >\r\n                                                                Delete\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    ) : null}\r\n                                                    <hr className=\"hr-action\" />\r\n                                                </>\r\n                                            );\r\n                                        })}\r\n                                        <br />\r\n                                        <div>\r\n                                            <button type=\"button\" class=\"btn btn-add-work\" onClick={this.handleAddData} >\r\n                                                <span className=\"btn-add-work-icon\">\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row form-group\">\r\n                                        <div className=\"col-12\" style={{ textAlign: \"right\" }}>\r\n                                            <Link to=\"/work\">\r\n                                                <button class=\"btn-custom btn-reset\" style={{ marginRight: 20 }} >\r\n                                                    CANCEL\r\n                                                </button>\r\n                                            </Link>\r\n                                            <button\r\n                                                class=\"btn-custom btn-search\"\r\n                                                style={{ marginRight: 70 }}\r\n                                                onClick={() => {\r\n                                                    this.setState({ isSubmit: true })\r\n                                                    this.checkValidData()\r\n\r\n                                                }}\r\n                                            >\r\n                                                {this.state.params.action === \"edit\" ? \"UPDATE\" : \"CREATE\"}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* POPUP */}\r\n                <AlertPopUp\r\n                    successStatus={this.state.isPopupSuccess}\r\n                    errorStatus={this.state.isPopupError}\r\n                    message={this.state.isPopupMsg}\r\n                    clearActive={() => {\r\n\r\n                        if (this.state.isPopupSuccess === true && this.state.isDelete === false) {\r\n                            this.props.history.push('/work')\r\n                        }\r\n\r\n\r\n                        this.setState({ isPopupError: false });\r\n                        this.setState({ isPopupSuccess: false });\r\n\r\n                    }}\r\n                />\r\n                <ConfirmPopup\r\n                    open={this.state.isOpen}\r\n                    type={this.state.isTypeShowConfirm}\r\n                    text={this.state.isTextMsg}\r\n                    data={this.state.isDataPopUp}\r\n                    del={false}\r\n                    onClose={() => {\r\n                        this.setState({ isOpen: false });\r\n                    }}\r\n                    clearActive={(e) => {\r\n                        this.setState({ isOpen: false });\r\n                    }}\r\n                    confirmActive={(data) => {\r\n                        console.log(\"Work -> render -> e\", data);\r\n                        if (this.state.isDelete) {\r\n                            this.deleteData(data)\r\n                        } else {\r\n                            this.confirmSave(data)\r\n                        }\r\n\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActionsWork;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, TimePicker, Select } from 'antd';\r\nimport { HomeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport configService from '../../config';\r\nimport axios from 'axios'\r\nimport { LoadPanel } from 'devextreme-react/load-panel';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\n\r\n   \r\n   \r\n    \r\n\r\nconst api = configService.appIp + configService.apiUrlPrefix\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nconst msgValid = configService.validDateFill;\r\nconst position = { of: '#App' };\r\nclass ActionJobType extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        console.log(\"Actionsjobtype -> constructor -> props\", props)\r\n        let query = _.cloneDeep(props.match.params.query);\r\n        let tempQuery = JSON.parse(JSON.stringify(query))\r\n        let param = JSON.parse(tempQuery)\r\n        console.log(\"ActionJobType -> constructor -> param\", param)\r\n        super(props);\r\n        this.state = {\r\n            isPopupSuccess: false, // alert success case\r\n            isPopupError: false,  // alert error case\r\n            isPopupMsg: '',  // alert msg\r\n            isOpen: false, // open popup confirm\r\n            isTypeShowConfirm: '', // ประเภทของ popup : save , del\r\n            isDataPopUp: {}, // ข้อมูลที่ใช้\r\n            isTextMsg: '', // msg ของ Popup\r\n            data: {\r\n                typeName: null,\r\n                typeCode: null,\r\n                typeId: null,\r\n            },\r\n            projectList: [],\r\n            typeList: [],\r\n            params: param,\r\n            isSubmit: false,\r\n            valid_typeName: false,\r\n            valid_typeCode: false,\r\n            loadPanelVisible: false\r\n        };\r\n\r\n        this.onTypeNameChange = this.onTypeNameChange.bind(this);\r\n        this.onTypeCodeChange = this.onTypeCodeChange.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.state.params.action === 'edit') {\r\n            this.fnGetDataView();\r\n        }\r\n      \r\n    }\r\n\r\n    onTypeNameChange(event) {\r\n        this.setState({\r\n            data: {\r\n                ...this.state.data,\r\n                typeName: event.target.value\r\n            }\r\n        });\r\n\r\n        if (event.target.value !== '' || !event.target.value) {\r\n            this.setState({ valid_typeName: false })\r\n        }\r\n    }\r\n    onTypeCodeChange(event) {\r\n        this.setState({\r\n            data: {\r\n                ...this.state.data,\r\n                typeCode: event.target.value\r\n            }\r\n        });\r\n\r\n        console.log(\"TCL: ActionJobType -> onTypeCodeChange -> event.target.value\", event.target.value)\r\n        if (event.target.value !== '' || !event.target.value) {\r\n            this.setState({ valid_typeCode: false })\r\n        }\r\n    }\r\n\r\n    checkValidate = () => {\r\n        console.log(this.state.data.typeName);\r\n        console.log(this.state.data.typeCode);\r\n        if (this.state.data.typeName && this.state.data.typeCode) {\r\n            this.setState({ isOpen: true, isTypeShowConfirm: 'save', isTextMsg: msgPopupTitle.saved, isDataPopUp: this.state.data, valid_typeName: false, valid_typeCode: false })\r\n        } else {\r\n            if (!this.state.data.typeName) {\r\n                this.setState({ valid_typeName: true })\r\n            }\r\n            if (!this.state.data.typeCode) {\r\n                this.setState({ valid_typeCode: true })\r\n            }\r\n        }\r\n    }\r\n\r\n    confirmSave = async (data) => {\r\n        this.setState({ loadPanelVisible: true })\r\n        console.log(\"TCL: ActionJobType -> confirmSave -> data\", data)\r\n        try {\r\n            let body = {}\r\n            body.typeName = data.typeName;\r\n            body.typeCode = data.typeCode;\r\n            var response;\r\n            if (this.state.params.action === 'edit') {\r\n                response = await axios.put(api + '/type/' + this.state.data.typeId, body)\r\n            } else {\r\n                response = await axios.post(api + '/type', body)\r\n            }\r\n            if (response && response.status === 200) {\r\n                if (response.data && response.data.resultCode === \"20000\") {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: false })\r\n                    this.setState({ isPopupSuccess: true })\r\n                    this.setState({ isPopupMsg: this.state.params.action === 'edit' ? msgAlertTitle.updated : msgAlertTitle.saved })\r\n                } else {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: true })\r\n                    this.setState({ isPopupSuccess: false })\r\n                    this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n                }\r\n            }\r\n            this.setState({ loadPanelVisible: false })\r\n        } catch (error) {\r\n            this.setState({ loadPanelVisible: false })\r\n            this.setState({ isOpen: false })\r\n            this.setState({ isPopupError: true })\r\n            this.setState({ isPopupSuccess: false })\r\n            this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n            console.log(\"TCL: JobType -> fnGetData -> error\", error)\r\n        }\r\n    }\r\n\r\n    fnGetDataView = async () => {\r\n        try {\r\n\r\n            this.setState({ loadPanelVisible: true })\r\n            let filter = {\r\n                \"typeId\": this.state.params.jobTypeId\r\n            }\r\n            const response = await axios.get(api + '/type/' + this.state.params.jobTypeId)\r\n            console.log(\"TCL: ActionJobType -> fnGetDataView -> response\", response)\r\n            if (response && response.status === 200) {\r\n                if (response.data && response.data.resultCode === \"20000\") {\r\n                    this.setState({\r\n                        data: {\r\n                            typeName: response.data.resultData[0].typeName,\r\n                            typeCode: response.data.resultData[0].typeCode,\r\n                            typeId: response.data.resultData[0].typeId,\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        data: {\r\n                            typeName: null,\r\n                            typeCode: null,\r\n                            typeId: null,\r\n                        }\r\n                    })\r\n                }\r\n\r\n            }\r\n            this.setState({ loadPanelVisible: false })\r\n        } catch (error) {\r\n            this.setState({ loadPanelVisible: false })\r\n            console.log(\"TCL: ActionJobType -> fnGetDataView -> error\", error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<>\r\n\r\n            <div className=\"App\">\r\n                <div id=\"boxType\" className=\"container-box-content\">\r\n                    <div className=\"row wrap-container\">\r\n\r\n                   \r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item href=\"/jobtype\">\r\n                                <HomeOutlined />\r\n                                <span className=\"breadcrum-custom\">job type</span>\r\n                            </Breadcrumb.Item>\r\n                            {/* <Breadcrumb.Item href=\"#\"> */}\r\n                            {this.state.params.action === 'create' ? <span className=\"breadcrum-custom\">  Create Job type</span> : null}\r\n                            {this.state.params.action === 'edit' ? <span className=\"breadcrum-custom\">  Update Job type</span> : null}\r\n\r\n                            {/* </Breadcrumb.Item> */}\r\n                        </Breadcrumb>\r\n                        \r\n                        <div className=\"wrap-content\">\r\n                            <div className=\"box-action\">\r\n                                <div className=\"box-title-search\">\r\n                                    <div className=\"box-action-content\">\r\n                                        {this.state.params.action === 'create' ? <p className=\"font-size-search\">Create Job type</p> : null}\r\n                                        {this.state.params.action === 'edit' ? <p className=\"font-size-search\">Update Job type</p> : null}\r\n\r\n                                        {/* Job Type */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className={`col-5`} style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtJobTypeName\">Job Type<span style={{ color: 'red' }}>*</span></label></div>\r\n                                            <div className=\"col-3\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                <input type=\"text\" class={`form-control ${this.state.valid_typeName && this.state.isSubmit ? 'has-error-input' : ''}`} id=\"txtJobTypeName\" value={this.state.data.typeName} onChange={this.onTypeNameChange} />\r\n                                                {this.state.valid_typeName && this.state.isSubmit ? <span className=\"color-red\">{msgValid.req}</span> : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        {/* Code */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-5\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtCode\">Code <span style={{ color: 'red' }}>*</span></label></div>\r\n                                            <div className=\"col-3\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                <input type=\"text\" class={`form-control  ${this.state.valid_typeCode && this.state.isSubmit ? 'has-error-input' : ''}`} id=\"txtCode\" value={this.state.data.typeCode} onChange={this.onTypeCodeChange} />\r\n                                                {this.state.valid_typeCode && this.state.isSubmit ? <span className=\"color-red\">{msgValid.req}</span> : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div style={{ textAlign: 'right' }}>\r\n\r\n                                            <p className=\"title-field\" ><span style={{ color: 'red' }}>*</span> Items marked with an asterisk are required</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-12\" style={{ textAlign: 'right' }}>\r\n                                        {this.state.params.action !== 'view' ?\r\n                                            <Link to='/jobtype'>\r\n                                                <button class=\"btn-custom btn-reset\" style={{ marginRight: 20 }} onClick={this.handleReset}>CANCEL</button>\r\n                                            </Link>\r\n                                            : null}\r\n\r\n                                        {this.state.params.action !== 'view' ? <button class=\"btn-custom btn-search\" style={{ marginRight: 20 }} onClick={() => {\r\n                                            this.setState({ isSubmit: true })\r\n                                            this.checkValidate()\r\n                                        }}>\r\n                                            {this.state.params.action === 'edit' ? 'UPDATE' : 'CREATE'}\r\n                                        </button> : null}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <LoadPanel\r\n                shadingColor=\"rgba(0,0,0,0.4)\"\r\n                position={position}\r\n                visible={this.state.loadPanelVisible}\r\n            />\r\n\r\n            {/* POPUP */}\r\n            <AlertPopUp successStatus={this.state.isPopupSuccess} errorStatus={this.state.isPopupError} message={this.state.isPopupMsg}\r\n                clearActive={() => {\r\n                    if (this.state.isPopupSuccess) {\r\n                        this.props.history.push('/jobtype')\r\n                    }\r\n                    this.setState({ isPopupError: false });\r\n                    this.setState({ isPopupSuccess: false });\r\n                }} />\r\n\r\n            <ConfirmPopup open={this.state.isOpen} type={this.state.isTypeShowConfirm} text={this.state.isTextMsg} data={this.state.isDataPopUp} del={false}\r\n                onClose={() => { this.setState({ isOpen: false }) }}\r\n                clearActive={(e) => { this.setState({ isOpen: false }) }}\r\n                confirmActive={(e) => {\r\n                    console.log(\"Work -> render -> e\", e)\r\n                    this.confirmSave(e)\r\n\r\n                }}\r\n            />\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActionJobType;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, TimePicker, Select } from 'antd';\r\nimport { HomeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport configService from '../../config';\r\nimport axios from 'axios'\r\nimport { LoadPanel } from 'devextreme-react/load-panel';\r\n\r\nconst api = configService.appIp + configService.apiUrlPrefix\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nconst msgValid = configService.validDateFill;\r\nconst format = 'HH:mm';\r\nconst Option = Select.Option;\r\nconst position = { of: '#App' };\r\nclass ActionsProject extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        console.log(\"Actionsproject -> constructor -> props\", props)\r\n        let query = _.cloneDeep(props.match.params.query);\r\n        let tempQuery = JSON.parse(JSON.stringify(query))\r\n        let param = JSON.parse(tempQuery)\r\n\r\n        super(props);\r\n        this.state = {\r\n            isPopupSuccess: false, // alert success case\r\n            isPopupError: false,  // alert error case\r\n            isPopupMsg: '',  // alert msg\r\n            isOpen: false, // open popup confirm\r\n            isTypeShowConfirm: '', // ประเภทของ popup : save , del\r\n            isDataPopUp: {}, // ข้อมูลที่ใช้\r\n            isTextMsg: '', // msg ของ Popup\r\n            data: {\r\n                projectId: null,\r\n                projectName: null,\r\n                projectPhase: null,\r\n                projectDetail: null,\r\n                projectStartDate: null,\r\n                projectEndDate: null,\r\n                projectManDays: null,\r\n                customerEmail: null,\r\n                createDate: null,\r\ncreateBy: null,\r\nupdateDate: null,\r\nupdateBy: null,\r\n            },\r\n            params: param,\r\n            isSubmit: false,\r\n            isValid_startDate: false,\r\n            isValid_endDate: false,\r\n            isValid_projectName: false,\r\n            isValid_phase: false,\r\n            isValid_detail: false,\r\n            isValid_email: false,\r\n            inputDate: {\r\n                startDate: '',\r\n                endDate: ''\r\n            },\r\n            greater: {\r\n                startDate: '',\r\n                endDate: ''\r\n            },\r\n            startGreater: false,\r\n            endGreater: false,\r\n            loadPanelVisible: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"TCL: ActionsProject -> componentDidMount -> this.state.params\", this.state.params)\r\n        if (this.state.params.action !== 'create') {\r\n            this.fnGetDataView();\r\n        }\r\n    }\r\n\r\n    handleChangeDate = (event, type) => {\r\n        let temp = _.cloneDeep(this.state.data)\r\n        if (type === 'start') {\r\n            this.setState({\r\n                data: {\r\n                    ...this.state.data,\r\n                    projectStartDate: event.value,\r\n                }\r\n            });\r\n            this.setState({ isValid_startDate: false })\r\n        } else {\r\n            this.setState({\r\n                data: {\r\n                    ...this.state.data,\r\n                    projectEndDate: event.value,\r\n                }\r\n            });\r\n            this.setState({ isValid_endDate: false })\r\n\r\n        }\r\n        this.checkGreaterValue();\r\n        this.checkGreaterStartDateValue();\r\n        this.checkGreaterStopDateValue();\r\n    }\r\n\r\n    onProjectNameChange = (event) => {\r\n        this.setState({\r\n            data: {\r\n                ...this.state.data,\r\n                projectName: event.target.value\r\n            }\r\n        });\r\n\r\n        if (event.target.value !== '' || !event.target.value) {\r\n            this.setState({ isValid_projectName: false })\r\n        }\r\n    }\r\n\r\n    onProjectPhaseChange = (event) => {\r\n        this.setState({\r\n            data: {\r\n                ...this.state.data,\r\n                projectPhase: event.target.value\r\n            }\r\n        });\r\n\r\n        if (event.target.value !== '' || !event.target.value) {\r\n            this.setState({ isValid_phase: false })\r\n        }\r\n    }\r\n\r\n    onProjectDetailChange = (event) => {\r\n        this.setState({\r\n            data: {\r\n                ...this.state.data,\r\n                projectDetail: event.target.value\r\n            }\r\n        });\r\n\r\n        if (event.target.value !== '' || !event.target.value) {\r\n            this.setState({ isValid_detail: false })\r\n        }\r\n    }\r\n\r\n    onCustomerEmailChange = (event) => {\r\n        this.setState({\r\n            data: {\r\n                ...this.state.data,\r\n                customerEmail: event.target.value\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            if (this.state.data.customerEmail && !this.checkValidEmail()) {\r\n                this.setState({ isValid_email: true })\r\n            } else {\r\n                this.setState({ isValid_email: false })\r\n            }\r\n        }, 100);\r\n    }\r\n    onManDaysChange = (event) => {\r\n        this.setState({\r\n            data: {\r\n                ...this.state.data,\r\n                projectManDays: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    checkValidate = () => {\r\n        let vaildProjectName = this.checkValidValue('name');\r\n        let vaildProjectPhase = this.checkValidValue('phase');\r\n        let vaildProjectDetail = this.checkValidValue('detail');\r\n        let vaildProjectStart = this.checkValidValue('start');\r\n        let vaildProjectEnd = this.checkValidValue('end');\r\n        let vaildEmail = this.state.data.customerEmail ? this.checkValidEmail() : true;\r\n        if (vaildProjectStart && vaildProjectEnd) {\r\n            this.checkValidValue('date')\r\n        }\r\n        if (vaildProjectName && vaildProjectPhase && vaildProjectDetail && vaildProjectStart && vaildProjectEnd && !this.state.greater.startDate && !this.state.greater.endDate && !this.state.startGreater && !this.state.endGreater && vaildEmail) {\r\n            this.setState({ isOpen: true, isTypeShowConfirm: 'save', isTextMsg: this.state.params.action === 'edit' ? msgPopupTitle.saved : msgPopupTitle.saved, isDataPopUp: this.state.data })\r\n        } else {\r\n\r\n            console.log(\"TCL: ActionsProject -> checkValidate -> \", 'กรอกข้อมูลไม่ครบหรือ ติด valid')\r\n        }\r\n    }\r\n\r\n    checkValidValue = (type) => {\r\n        if (type === 'name') {\r\n            if (!this.state.data.projectName || this.state.data.projectName === '') {\r\n                this.setState({ isValid_projectName: true })\r\n                return false;\r\n            } else {\r\n                this.setState({ isValid_projectName: false })\r\n                return true;\r\n            }\r\n        } else if (type === 'phase') {\r\n            if (!this.state.data.projectPhase || this.state.data.projectPhase === '') {\r\n                this.setState({ isValid_phase: true })\r\n                return false;\r\n            } else {\r\n                this.setState({ isValid_phase: false })\r\n                return true;\r\n            }\r\n        } else if (type === 'detail') {\r\n            if (!this.state.data.projectDetail || this.state.data.projectDetail === '') {\r\n                this.setState({ isValid_detail: true })\r\n                return false;\r\n            } else {\r\n                this.setState({ isValid_detail: false })\r\n                return true;\r\n            }\r\n        } else if (type === 'start') {\r\n            if (!this.state.data.projectStartDate || this.state.data.projectStartDate === '') {\r\n                this.setState({ isValid_startDate: true })\r\n                return false;\r\n            } else {\r\n                this.setState({ isValid_startDate: false })\r\n                return true;\r\n            }\r\n        } else if (type === 'end') {\r\n            if (!this.state.data.projectEndDate || this.state.data.projectEndDate === '') {\r\n                this.setState({ isValid_endDate: true })\r\n                return false;\r\n            } else {\r\n                this.setState({ isValid_endDate: false })\r\n                return true;\r\n            }\r\n        } else if (type === 'date') {\r\n            this.checkGreaterValue()\r\n        }\r\n    }\r\n\r\n    checkGreaterValue = () => {\r\n        if (!this.state.data.projectEndDate || !this.state.data.projectStartDate || this.checkNullObjectMany(this.state.inputDate)) {\r\n            this.setState({\r\n                greater: {\r\n                    startDate: false,\r\n                    endDate: false,\r\n                }\r\n            })\r\n        }\r\n        let checkGreaterCreatedDate = this.checkGreater(this.state.data.projectEndDate, this.state.data.projectStartDate);\r\n        console.log(\"TCL: ActionsProject -> checkGreaterValue -> checkGreaterCreatedDate\", checkGreaterCreatedDate)\r\n        this.setState({\r\n            greater: {\r\n                startDate: checkGreaterCreatedDate,\r\n                endDate: checkGreaterCreatedDate,\r\n            }\r\n        })\r\n    }\r\n\r\n    checkNullObjectMany = (dataObject) => {\r\n        for (let key in dataObject) {\r\n\r\n            for (let item in dataObject[key]) {\r\n                if (dataObject[key][item]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    checkGreater(dateFrom, dateTo) {\r\n        let greater;\r\n        if (dateFrom && dateTo) {\r\n            greater = dateFrom < dateTo ? true : false;\r\n        } else {\r\n            greater = false;\r\n        }\r\n        return greater;\r\n    }\r\n\r\n    checkGreaterStartDateValue = () => {\r\n        if (!this.state.data.projectStartDate || !this.state.data.projectEndDate || this.checkNullObjectMany(this.inputDate)) {\r\n            this.setState({ startGreater: false })\r\n        }\r\n        let checkGreaterCreatedDate = this.checkGreaterStartDate(this.state.data.projectEndDate, this.state.data.projectStartDate);\r\n        this.setState({ startGreater: checkGreaterCreatedDate })\r\n    }\r\n\r\n    checkGreaterStopDateValue = () => {\r\n        if (!this.state.data.projectStartDate || !this.state.data.projectEndDate || this.checkNullObjectMany(this.inputDate)) {\r\n            this.setState({ endGreater: false })\r\n        }\r\n        let checkGreaterCreatedDate = this.checkGreaterStopDate(this.state.data.projectEndDate, this.state.data.projectStartDate);\r\n        this.setState({ endGreater: checkGreaterCreatedDate })\r\n    }\r\n\r\n    checkGreaterStartDate = () => {\r\n        let greaterStart;\r\n        greaterStart = false;\r\n        return greaterStart;\r\n    }\r\n\r\n    checkGreaterStopDate = (dataFrom, dataTo) => {\r\n        let greaterStop;\r\n        let now = moment().format();\r\n        if (dataTo && dataFrom) {\r\n            let stop = moment(dataFrom).format();\r\n            greaterStop = stop < now ? true : false;\r\n        } else {\r\n            greaterStop = false;\r\n        }\r\n        return greaterStop;\r\n\r\n    }\r\n\r\n    checkValidEmail = () => {\r\n        let reg = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n        const match = this.state.data.customerEmail ? this.state.data.customerEmail.match(reg) : null;\r\n        console.log(\"TCL: ActionsProject -> checkValidEmail -> match\", match)\r\n        if (match && match.length > 0) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    confirmSave = async (data) => {\r\n        this.setState({ loadPanelVisible: true })\r\n        console.log(\"TCL: ActionJobType -> confirmSave -> data\", data)\r\n        try {\r\n            let body = {}\r\n            body.projectName = data.projectName;\r\n            body.projectPhase = data.projectPhase;\r\n            body.projectDetail = data.projectDetail;\r\n            body.projectStartDate = moment(data.projectStartDate).format('YYYY-MM-DD HH:mm:ss');\r\n            body.projectEndDate = moment(data.projectEndDate).format('YYYY-MM-DD HH:mm:ss');\r\n            if (data.projectManDays) {\r\n                body.projectManDays = data.projectManDays;\r\n            }\r\n            if (data.customerEmail) {\r\n                body.customerEmail = data.customerEmail;\r\n            }\r\n            console.log(\"TCL: ActionsProject -> confirmSave -> body\", body)\r\n            var response;\r\n            if (this.state.params.action === 'edit') {\r\n                response = await axios.put(api + '/project/' + this.state.data.projectId, body)\r\n            } else {\r\n                response = await axios.post(api + '/project', body)\r\n            }\r\n            if (response && response.status === 200) {\r\n                if (response.data && response.data.resultCode === \"20000\") {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: false })\r\n                    this.setState({ isPopupSuccess: true })\r\n                    this.setState({ isPopupMsg: this.state.params.action === 'edit' ? msgAlertTitle.updated : msgAlertTitle.saved })\r\n                } else {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: true })\r\n                    this.setState({ isPopupSuccess: false })\r\n                    this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n                }\r\n            }\r\n            this.setState({ loadPanelVisible: false })\r\n        } catch (error) {\r\n            this.setState({ loadPanelVisible: false })\r\n            this.setState({ isOpen: false })\r\n            this.setState({ isPopupError: true })\r\n            this.setState({ isPopupSuccess: false })\r\n            this.setState({ isPopupMsg: msgAlertTitle.systemError })\r\n            console.log(\"TCL: JobType -> fnGetData -> error\", error)\r\n        }\r\n    }\r\n\r\n    fnGetDataView = async () => {\r\n        try {\r\n\r\n            this.setState({ loadPanelVisible: true })\r\n            let filter = {\r\n                \"projectId\": this.state.params.projectId\r\n            }\r\n            const response = await axios.get(api + '/project/' + this.state.params.projectId)\r\n            console.log(\"TCL: ActionJobType -> fnGetDataView -> response\", response)\r\n            if (response && response.status === 200) {\r\n                if (response.data && response.data.resultCode === \"20000\") {\r\n                    this.setState({\r\n                        data: {\r\n                            projectId: response.data.resultData[0].projectId,\r\n                            projectName: response.data.resultData[0].projectName,\r\n                            projectPhase: response.data.resultData[0].projectPhase,\r\n                            projectDetail: response.data.resultData[0].projectDetail,\r\n                            projectStartDate: moment(response.data.resultData[0].projectStartDate, 'YYYY/MM/DD HH:mm:ss').toDate(),\r\n                            projectEndDate: moment(response.data.resultData[0].projectEndDate, 'YYYY/MM/DD HH:mm:ss').toDate(),\r\n                            projectManDays: response.data.resultData[0].projectManDays,\r\n                            customerEmail: response.data.resultData[0].customerEmail,\r\n                            createDate: response.data.resultData[0].createDate, \r\n                            createBy: response.data.resultData[0].createBy,\r\n                            updateDate: response.data.resultData[0].updateDate,\r\n                            updateBy: response.data.resultData[0].updateBy,\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        data: {\r\n                            projectId: null,\r\n                            projectName: null,\r\n                            projectPhase: null,\r\n                            projectDetail: null,\r\n                            projectStartDate: null,\r\n                            projectEndDate: null,\r\n                            projectManDays: null,\r\n                            customerEmail: null,\r\n                            createDate: null,\r\n                            createBy: null,\r\n                            updateDate: null,\r\n                            updateBy: null,\r\n                        }\r\n                    })\r\n                }\r\n\r\n            }\r\n            this.setState({ loadPanelVisible: false })\r\n        } catch (error) {\r\n            this.setState({ loadPanelVisible: false })\r\n            console.log(\"TCL: ActionJobType -> fnGetDataView -> error\", error)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (<>\r\n\r\n            <div className=\"App\" id=\"App\">\r\n                <div id=\"boxType\" className=\"container-box-content\">\r\n                    <div className=\"row wrap-container\">\r\n\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item href=\"/project\">\r\n                                <HomeOutlined />\r\n                                <span className=\"breadcrum-custom\">project</span>\r\n                            </Breadcrumb.Item>\r\n                            {/* <Breadcrumb.Item href=\"#\"> */}\r\n                            {this.state.params.action === 'create' ? <span className=\"breadcrum-custom\">Create project</span> : null}\r\n                            {this.state.params.action === 'edit' ? <span className=\"breadcrum-custom\">  Update project</span> : null}\r\n                            {this.state.params.action === 'view' ? <span className=\"breadcrum-custom\">  Detail project</span> : null}\r\n\r\n                            {/* </Breadcrumb.Item> */}\r\n                        </Breadcrumb>\r\n\r\n\r\n                        <div className=\"wrap-content\">\r\n                            <div className=\"box-action\">\r\n                                <div className=\"box-title-search\">\r\n                                    <div className=\"box-action-content\">\r\n                                        {this.state.params.action === 'create' ? <p className=\"font-size-search\">Create Project</p> : null}\r\n                                        {this.state.params.action === 'edit' ? <p className=\"font-size-search\">Update Project</p> : null}\r\n                                        {this.state.params.action === 'view' ? <p className=\"font-size-search\">Detail Project</p> : null}\r\n\r\n                                        {/* Start Date */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"ddlStartDate\">Start Date {this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <div className={`col-4`} style={{ textAlign: 'start', padding: 0 }}>\r\n                                                <DateBox\r\n                                                    value={this.state.data.projectStartDate}\r\n                                                    disabled={this.state.params.action === 'view'}\r\n                                                    displayFormat=\"yyyy/MM/dd\"\r\n                                                    type=\"date\" onValueChanged={(e) => {\r\n                                                        this.handleChangeDate(e, 'start')\r\n                                                    }}\r\n                                                    className={`${this.state.isValid_startDate && this.state.isSubmit || this.state.greater.startDate || this.state.startGreater ? 'has-error-input' : ''}`} />\r\n                                                {this.state.isValid_startDate && this.state.isSubmit ? <span className=\"color-red\">{msgValid.req}</span> : null}\r\n                                                {this.state.greater.startDate || this.state.startGreater ? <span className=\"color-red\">{msgValid.project.validStartDatemoreEndDate}</span> : null}\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* End Date */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"ddlEndDate\">End Date{this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <div className={`col-4`} style={{ textAlign: 'start', padding: 0 }}>\r\n                                                <DateBox\r\n                                                    value={this.state.data.projectEndDate}\r\n                                                    displayFormat=\"yyyy/MM/dd\"\r\n                                                    disabled={this.state.params.action === 'view'}\r\n                                                    type=\"date\" onValueChanged={(e) => {\r\n                                                        this.handleChangeDate(e, 'end')\r\n                                                    }}\r\n                                                    className={`${this.state.isValid_endDate && this.state.isSubmit || this.state.greater.endDate || this.state.endGreater || this.state.greater.startDate ? 'has-error-input' : ''}`} />\r\n                                                {this.state.isValid_endDate && this.state.isSubmit ? <span className=\"color-red\">{msgValid.req}</span> : null}\r\n                                                {this.state.greater.endDate || this.state.greater.startDate && !this.state.endGreater && this.state.data.projectEndDate ? <span className=\"color-red\">{msgValid.project.validEndDatelessStartDate}</span> : null}\r\n                                                {/* {!this.state.greater.stopDate && this.state.endGreater && this.state.data.projectEndDate ? <span className=\"color-red\">The end date must be greater than the start date. </span> : null} */}\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Project */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"ddlProject\">Project{this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <div className=\"col-4\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                <input type=\"text\" class={`form-control  ${this.state.isValid_projectName && this.state.isSubmit ? 'has-error-input' : ''}`} id=\"txtProject\"\r\n                                                    value={this.state.data.projectName} onChange={this.onProjectNameChange} disabled={this.state.params.action === 'view'}/>\r\n                                                {this.state.isValid_projectName && this.state.isSubmit ? <span className=\"color-red\">{msgValid.req}</span> : null}\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        {/* Phase */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"ddlPhase\">Phase{this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <div className=\"col-4\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                <input type=\"text\" class={`form-control  ${this.state.isValid_phase && this.state.isSubmit ? 'has-error-input' : ''}`}\r\n                                                    id=\"txtPhase\" value={this.state.data.projectPhase} onChange={this.onProjectPhaseChange} disabled={this.state.params.action === 'view'}/>\r\n                                                {this.state.isValid_phase && this.state.isSubmit ? <span className=\"color-red\">{msgValid.req}</span> : null}\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/*Man Day */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtManDay\">Man Day{this.state.params.action !== 'view' ? <span style={{ color: 'red' }}></span> : null}</label></div>\r\n                                            <div className=\"col-5\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                <input type=\"text\" class=\"form-control col-5\" id=\"txtManDay\" value={this.state.data.projectManDays} onChange={this.onManDaysChange} disabled={this.state.params.action === 'view'}/>\r\n                                          \r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Detail */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtDetail\">Detail {this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <div className=\"col-5\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                <textarea rows=\"3\" type=\"text\" class={`form-control  ${this.state.isValid_detail && this.state.isSubmit ? 'has-error-input' : ''}`}\r\n                                                    id=\"txtDetail\" value={this.state.data.projectDetail} onChange={this.onProjectDetailChange} disabled={this.state.params.action === 'view'}/>\r\n                                                {this.state.isValid_detail && this.state.isSubmit ? <span className=\"color-red\">{msgValid.req}</span> : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* CustomerEmail */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtCustomerEmail\">Customer Email<span style={{ color: 'red' }}></span></label></div>\r\n                                            <div className=\"col-5\" style={{ textAlign: 'start', padding: 0 }}>\r\n                                                <input type=\"text\" class={`form-control  ${this.state.isValid_email ? 'has-error-input' : ''}`} id=\"txtCustomerEmail\" value={this.state.data.customerEmail} onChange={this.onCustomerEmailChange} disabled={this.state.params.action === 'view'}/>\r\n                                                {this.state.isValid_email ? <span className=\"color-red\">{msgValid.project.validEmail}</span> : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* CreateDate */}\r\n                                        {this.state.params.action === 'view' ? <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtCreateDate\">CreateDate<span style={{ color: 'red' }}></span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtCreateDate\" disabled={this.state.params.action === 'view'} value={this.state.data.createDate}/>\r\n                                        </div> : null}\r\n\r\n                                        {/* CreateBy */}\r\n                                        {this.state.params.action === 'view' ? <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtCreateBy\">CreateBy<span style={{ color: 'red' }}></span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtCreateBy\" disabled={this.state.params.action === 'view'} value={this.state.data.createBy}/>\r\n\r\n                                        </div> : null}\r\n\r\n                                        {/* UpdateDate */}\r\n                                        {this.state.params.action === 'view' ? <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtUpdateDate\">UpdateDate<span style={{ color: 'red' }}></span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtUpdateDate\" disabled={this.state.params.action === 'view'} value={this.state.data.updateDate}/>\r\n\r\n                                        </div> : null}\r\n\r\n                                        {/*  UpdateBy */}\r\n                                        {this.state.params.action === 'view' ? <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtUpdateBy\">UpdateBy<span style={{ color: 'red' }}></span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtUpdateBy\" disabled={this.state.params.action === 'view'} value={this.state.data.updateBy}/>\r\n\r\n                                        </div> : null}\r\n\r\n                                        {this.state.params.action !== 'view' ? <div style={{ textAlign: 'right' }}>\r\n                                            <p className=\"title-field\"><span style={{ color: 'red' }}>*</span> Items marked with an asterisk are required</p>\r\n                                        </div> : null}\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-12\" style={{ textAlign: 'right' }}>\r\n                                        {this.state.params.action !== 'view' ?\r\n                                            <Link to='/project'>\r\n                                                <button class=\"btn-custom btn-reset\" style={{ marginRight: 20 }}>CANCEL</button>\r\n                                            </Link> : null}\r\n                                        {this.state.params.action !== 'view' ? <button class=\"btn-custom btn-search\" style={{ marginRight: 20 }} onClick={() => {\r\n                                            this.setState({ isSubmit: true })\r\n                                            this.checkValidate()\r\n                                        }}>{this.state.params.action === 'edit' ? 'UPDATE' : 'CREATE'}</button> : null}\r\n                                        {this.state.params.action === 'view' ?\r\n                                            <Link to='/project'>\r\n                                                <button class=\"btn-custom btn-search \" style={{ marginRight: 20 }} >BACK</button>\r\n                                            </Link>\r\n                                            : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <LoadPanel\r\n                shadingColor=\"rgba(0,0,0,0.4)\"\r\n                position={position}\r\n                visible={this.state.loadPanelVisible}\r\n            />\r\n\r\n            {/* POPUP */}\r\n            <AlertPopUp successStatus={this.state.isPopupSuccess} errorStatus={this.state.isPopupError} message={this.state.isPopupMsg}\r\n                clearActive={() => {\r\n                    if (this.state.isPopupSuccess) {\r\n                        this.props.history.push('/project')\r\n                    }\r\n                    this.setState({ isPopupError: false })\r\n                    this.setState({ isPopupSuccess: false })\r\n                }} />\r\n\r\n            <ConfirmPopup open={this.state.isOpen} type={this.state.isTypeShowConfirm} text={this.state.isTextMsg} data={this.state.isDataPopUp} del={false}\r\n                onClose={() => { this.setState({ isOpen: false }) }}\r\n                clearActive={(e) => { this.setState({ isOpen: false }) }}\r\n                confirmActive={(e) => {\r\n                    console.log(\"Work -> render -> e\", e)\r\n                    this.confirmSave(e)\r\n                }}\r\n            />\r\n        </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ActionsProject;\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from '../pages/home'\r\nimport Project from '../pages/Project'\r\nimport JobType from '../pages/JobType'\r\nimport Work from '../pages/Work'\r\nimport ActionsWork from '../pages/Work/create-edit-view'\r\nimport ActionJobType from '../pages/JobType/create-edit'\r\nimport ActionsProject from '../pages/Project/create-edit'\r\n\r\n\r\n\r\nexport default () => (\r\n  \r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route exact path=\"/jobtype\" component={JobType} />\r\n    <Route exact path=\"/project\" component={Project} />\r\n    <Route exact path=\"/work\" component={Work} />\r\n    <Route exact path=\"/work/:query?\" render={(props) => <ActionsWork {...props} /> } />\r\n    <Route exact path=\"/project/:query?\" render={(props) => <ActionsProject {...props} /> } />\r\n    <Route exact path=\"/jobtype/:query?\" render={(props) => <ActionJobType {...props} /> } />\r\n    {/* <Route exact path=\"/work/:action?/:workId?\" render={(props) => <ActionsWork {...props} /> } /> */}\r\n    {/* <Route exact path=\"/jobtype/:action?/:typeId\" render={(props) => <ActionJobType {...props} /> } />\r\n    <Route exact path=\"/project/:action?/:projectId\" render={(props) => <ActionsProject {...props} /> } /> */}\r\n   \r\n  </Switch>\r\n  \r\n)","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Head from './Layout/Head';\r\nimport { ConfigProvider, Layout } from \"antd\";\r\n// const { Content } = Layout;\r\nimport Routing from './routes'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <ConfigProvider>\r\n        <Layout>\r\n          <Layout>\r\n            <Head></Head>\r\n            {/* <Content> */}\r\n              <div className=\"gx-main-content-wrapper\">\r\n                {/* {children} */}\r\n                <Routing />\r\n              </div>\r\n              {/* <Footer>\r\n                  <div className=\"gx-layout-footer-content\">\r\n                    {footerText}\r\n                  </div>\r\n                </Footer> */}\r\n            {/* </Content> */}\r\n          </Layout>\r\n          {/* <Customizer/> */}\r\n        </Layout>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// // If you want to start measuring performance in your app, pass a function\r\n// // to log results (for example: reportWebVitals(console.log))\r\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n// import { BrowserRouter } from 'react-router-dom'\r\n\r\n// const AppWithRouter = () => (\r\n//   <BrowserRouter>\r\n//     <App />\r\n//   </BrowserRouter>\r\n// )\r\n\r\n// ReactDOM.render(<AppWithRouter />, document.getElementById('root'))\r\n// reportWebVitals();\r\nimport { createStore, applyMiddleware} from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { HashRouter } from 'react-router-dom'\r\nconst store = createStore(\r\n\r\n  applyMiddleware(ReduxThunk)\r\n)\r\nReactDOM.render(\r\n\r\n  <Provider store={store}>\r\n<HashRouter>\r\n    <App/>\r\n    </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root'))\r\n     reportWebVitals();"],"sourceRoot":""}