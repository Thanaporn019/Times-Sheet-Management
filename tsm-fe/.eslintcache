[{"D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\index.js":"1","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\reportWebVitals.js":"2","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\App.js":"3","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\Layout\\Head.js":"4","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\routes\\index.js":"5","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\create-edit-view.js":"6","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\index.js":"7","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\home\\index.js":"8","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\index.js":"9","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\index.js":"10","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\alert_popup.js":"11","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\index.js":"12","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\reportWebVitals.js":"13","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\App.js":"14","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\Layout\\Head.js":"15","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\routes\\index.js":"16","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\create-edit-view.js":"17","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\index.js":"18","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\home\\index.js":"19","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\index.js":"20","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\index.js":"21","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\alert_popup.js":"22","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\create-edit.js":"23","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\create-edit.js":"24","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\confirm_popup.js":"25"},{"size":952,"mtime":1611297489248,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1611297489283,"results":"28","hashOfConfig":"27"},{"size":935,"mtime":1611297489244,"results":"29","hashOfConfig":"27"},{"size":3811,"mtime":1611300093351,"results":"30","hashOfConfig":"27"},{"size":758,"mtime":1611303349341,"results":"31","hashOfConfig":"27"},{"size":18681,"mtime":1611297489280,"results":"32","hashOfConfig":"27"},{"size":8934,"mtime":1611297489251,"results":"33","hashOfConfig":"27"},{"size":548,"mtime":1611297489282,"results":"34","hashOfConfig":"27"},{"size":9047,"mtime":1611297489254,"results":"35","hashOfConfig":"27"},{"size":12944,"mtime":1611310477611,"results":"36","hashOfConfig":"27"},{"size":6423,"mtime":1611312716098,"results":"37","hashOfConfig":"27"},{"size":952,"mtime":1611324565681,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1611324565793,"results":"40","hashOfConfig":"39"},{"size":935,"mtime":1611324565641,"results":"41","hashOfConfig":"39"},{"size":3811,"mtime":1611324565649,"results":"42","hashOfConfig":"39"},{"size":1077,"mtime":1611395205596,"results":"43","hashOfConfig":"39"},{"size":20195,"mtime":1611395433110,"results":"44","hashOfConfig":"39"},{"size":12581,"mtime":1611398656512,"results":"45","hashOfConfig":"39"},{"size":548,"mtime":1611324565793,"results":"46","hashOfConfig":"39"},{"size":11251,"mtime":1611327726654,"results":"47","hashOfConfig":"39"},{"size":11161,"mtime":1611330915506,"results":"48","hashOfConfig":"39"},{"size":5536,"mtime":1611396918867,"results":"49","hashOfConfig":"39"},{"size":14510,"mtime":1611336095760,"results":"50","hashOfConfig":"39"},{"size":19848,"mtime":1611334857615,"results":"51","hashOfConfig":"39"},{"size":7329,"mtime":1611398521780,"results":"52","hashOfConfig":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"4y4nkv",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"bhares",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"85"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"85"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\index.js",[],["116","117"],"D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\reportWebVitals.js",[],"D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\App.js",[],"D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\Layout\\Head.js",["118","119","120","121"],"import React, { Component } from 'react';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { IoPersonCircleOutline } from \"react-icons/io5\";\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nclass Head extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div class=\"gx-header-horizontal gx-header-horizontal-dark gx-below-header-horizontal\" style={{position: 'sticky', top: 0, zIndex: 9999}}>\r\n          <header class=\"ant-layout-header gx-header-horizontal-main\">\r\n            <div class=\"gx-container\">\r\n              <div class=\"gx-header-horizontal-main-flex\">\r\n                <div class=\"gx-header-search gx-d-none gx-d-lg-flex\">\r\n                  <div class=\"gx-search-bar gx-lt-icon-search-bar-lg\">\r\n                    <div class=\"gx-form-group\">\r\n                      {/* <input class=\"ant-input\" type=\"search\" placeholder=\"Search in app...\" value=\"\" />\r\n                      <span class=\"gx-search-icon gx-pointer\">\r\n                        <i class=\"icon icon-search\"></i>\r\n                      </span> */}\r\n\r\n                      <span style={{ color: '#fff', fontSize: '22pt' }}>SMARTADMIN</span>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <ul class=\"gx-header-notifications gx-ml-auto\">\r\n                  <li class=\"gx-notify\">\r\n                <Link to=\"/work\" >\r\n                    <span class=\"gx-pointer gx-d-block\">\r\n                      Work\r\n                    </span>\r\n                </Link>\r\n                  </li>\r\n                  <li class=\"gx-msg\">\r\n                  <Link to=\"/project\" >\r\n                    <span class=\"gx-pointer gx-status-pos gx-d-block\">\r\n                      Project\r\n                    </span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"gx-msg\">\r\n                  <Link to=\"/jobtype\" >\r\n                    <span class=\"gx-pointer gx-status-pos gx-d-block\">\r\n                      Job type\r\n                    </span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"gx-msg\" style={{color: '#fff'}}>\r\n                    <span style={{color: '#fff', fontSize: 36}} class=\"gx-pointer gx-status-pos gx-d-block\">\r\n                    <IoPersonCircleOutline />\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </header>\r\n        </div>\r\n        {/* <Navbar className=\"Navbar-color\" expand=\"lg\" >\r\n          <Navbar.Brand href=\"/\" className=\"Navbar-brand-Style\">SMARTADMIN</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/work\" style={{ marginLeft: \"600px\" }}>work</Nav.Link>\r\n\r\n              <Nav.Link href=\"/projects\" style={{ marginLeft: \"20px\" }}>project</Nav.Link>\r\n\r\n              <Nav.Link href=\"/jobtype\" style={{ marginLeft: \"20px\" }}>job type</Nav.Link>\r\n            </Nav>\r\n\r\n            <Form inline>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Navbar> */}\r\n\r\n        {/* <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#features\">Features</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-info\">Search</Button>\r\n          </Form>\r\n        </Navbar> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Head;","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\routes\\index.js",["122"],"import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from '../pages/home'\r\nimport Project from '../pages/Project'\r\nimport JobType from '../pages/JobType'\r\nimport Work from '../pages/Work'\r\nimport ActionsWork from '../pages/Work/create-edit-view'\r\n// import CreateP from '../pages/Project/CreateP'\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route exact path=\"/jobtype\" component={JobType} />\r\n    <Route exact path=\"/project\" component={Project} />\r\n    <Route exact path=\"/work\" component={Work} />\r\n    <Route exact path=\"/work/:action?\" render={(props) => <ActionsWork {...props} /> } />\r\n\r\n    {/* <Route exact path=\"/CreateP\" component={CreateP} /> */}\r\n  </Switch>\r\n)","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\create-edit-view.js",["123","124","125","126","127","128","129","130","131","132"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, TimePicker, Select } from 'antd';\r\nimport { HomeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nconst format = 'HH:mm';\r\nconst Option = Select.Option;\r\n\r\nlet data = [{\r\n    projectId: null,\r\n    typeId: null,\r\n    workDate: null,\r\n    workDetail: null,\r\n    workUrl: null,\r\n    workManhour: null,\r\n    workTimeIn: null,\r\n    workTimeOut: null,\r\n}]\r\n\r\nlet projectList = [];\r\nlet typeList = [];\r\nlet timeHours = [];\r\nlet timeMin = [];\r\n\r\nclass ActionsWork extends React.Component {\r\n    constructor(props) {\r\n        // console.log(\"ActionsWork -> constructor -> props\", props.match.params.action)\r\n        // let param = useParams();\r\n        // console.log(\"param\", param)\r\n        // console.log(\"ActionsWork -> constructor -> props\", props)\r\n        super(props);\r\n        this.state = {\r\n            data: [{\r\n                projectId: null,\r\n                typeId: null,\r\n                workDate: null,\r\n                workDetail: null,\r\n                workUrl: null,\r\n                workManhour: null,\r\n                workTimeIn: null,\r\n                workTimeOut: null,\r\n            }],\r\n            projectList: [],\r\n            typeList: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // console.log(\"ActionsWork -> componentDidMount -> s\", this.state.data)\r\n        this.getTypeList();\r\n        this.getProjectList();\r\n        this.setDdlTime();\r\n\r\n\r\n    }\r\n\r\n    getProjectList() {\r\n        this.setState({\r\n            projectList: [{\r\n                projectId: '001',\r\n                projectName: 'test1'\r\n            },\r\n            {\r\n                projectId: '002',\r\n                projectName: 'test2'\r\n            }]\r\n        })\r\n\r\n        let resData = [{\r\n            projectId: '001',\r\n            projectName: 'test1'\r\n        },\r\n        {\r\n            projectId: '002',\r\n            projectName: 'test2'\r\n        }]\r\n        let temp = [];\r\n        for (let i = 0; i < resData.length; i++) {\r\n            temp.push(<Option key={resData[i].projectId}>{resData[i].projectName}</Option>);\r\n        }\r\n\r\n        this.projectList = temp\r\n    }\r\n\r\n    getTypeList() {\r\n        this.setState({\r\n            jobtypeList: [{\r\n                typeId: '001',\r\n                typeName: 'test1'\r\n            },\r\n            {\r\n                typeId: '002',\r\n                typeName: 'test2'\r\n            }]\r\n        })\r\n\r\n        let resData = [{\r\n            typeId: '001',\r\n            typeName: 'test1'\r\n        },\r\n        {\r\n            typeId: '002',\r\n            typeName: 'test2'\r\n        }]\r\n        let temp = []\r\n        for (let i = 0; i < resData.length; i++) {\r\n            temp.push(<Option key={resData[i].typeId}>{resData[i].typeName}</Option>);\r\n            console.log(\"ActionsWork -> getJobtypeList -> resData[i].typeId\", resData[i].typeId)\r\n        }\r\n\r\n        this.typeList = temp\r\n    }\r\n\r\n    handleProjectChange = (value, i) => {\r\n        console.log(\"ActionsWork -> handleProjectChange -> i\", i)\r\n        console.log(\"ActionsWork -> handleProjectChange -> value\", value)\r\n\r\n        // let temp = _.cloneDeep(this.state.filter)\r\n        // temp.projectId = value\r\n        // this.setState({\r\n        //     filter: {\r\n        //         dateFrom: temp.dateFrom,\r\n        //         dateTo: temp.dateTo,\r\n        //         typeId: temp.typeId,\r\n        //         projectId: value\r\n        //     }\r\n        // });\r\n    }\r\n    handleTypeChange = (event) => {\r\n\r\n        let temp = _.cloneDeep(this.state.filter)\r\n        temp.typeId = event.target.value\r\n        this.setState({\r\n            filter: {\r\n                dateFrom: temp.dateFrom,\r\n                dateTo: temp.dateTo,\r\n                typeId: temp.typeId,\r\n                projectId: temp.projectId\r\n            }\r\n        });\r\n    }\r\n\r\n    setDdlTime() {\r\n        // let maxMin = 60;\r\n        // let maxHours = 24;\r\n\r\n        // let tmpMin = []\r\n        // let tmpHours = []\r\n        // for (let i = 0; i < maxHours; i++) {\r\n        //     tmpMin.push()\r\n        // }\r\n\r\n\r\n        // TODO :: get hours\r\n        var hours = []; // time array\r\n        var th = 0; // start time\r\n        //loop to increment the time and push results in array\r\n        for (var i = 0; th < 24 * 60; i++) {\r\n            var hh = Math.floor(th / 60); // gething hours of day in 0-24 format\r\n            var mm = (th % 60); // gething minutes of the hour in 0-55 format\r\n            hours[i] = (\"0\" + (hh)).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n            th++;\r\n        }\r\n        hours = _.uniq(hours)\r\n        console.log(\"ActionsWork -> setDdlTime -> hours\", hours)\r\n        // timeHours\r\n        // timeMin\r\n\r\n        // TODO :: get min\r\n        // var min = []; // time array\r\n        // var tm = 0;\r\n        // for (var j = 0; th < 60 *60; j++) {\r\n        //     // var hh = Math.floor(th / 60); // gething hours of day in 0-24 format\r\n        //     var mm = (tm % 60); // gething minutes of the hour in 0-55 format\r\n        //     min[i] = (\"0\" + (mm)).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n        //     tm +=10;\r\n        // }\r\n        // min = _.uniq(min)\r\n        // console.log(\"ActionsWork -> setDdlTime -> min\", min)\r\n        // timeHours\r\n    }\r\n\r\n    // TODO :: Select\r\n\r\n    handleChangeProject = (value, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.projectId = value;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleBlurProject = () => {\r\n        console.log('blur ---- ', this.typeList);\r\n    }\r\n\r\n    handleFocusProject = () => {\r\n        console.log('focus ....', this.typeList);\r\n    }\r\n    handleChangeType = (value, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.typeId = value;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleBlurType = () => {\r\n        console.log('blur ---- ', this.typeList);\r\n    }\r\n\r\n    handleFocusType = () => {\r\n        console.log('focus ....', this.typeList);\r\n    }\r\n\r\n    onChangeTimeIn = (time, timestring, index) => {\r\n        // console.log(\"ActionsWork -> onChangeTimeIn -> time, timestring, index\", time, timestring, index)\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeIn = time;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n    onChangeTimeOut = (time, timestring, index) => {\r\n        console.log(\"ActionsWork -> onChangeTimeOut -> time, timestring, index\", time, timestring, index)\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeOut = time;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n\r\n    calManHours = () => {\r\n\r\n    }\r\n\r\n    handleAddData = () => {\r\n    console.log(\"ActionsWork -> handleAddData -> handleAddData\")\r\n    this.state.data.push({\r\n        projectId: null,\r\n        typeId: null,\r\n        workDate: null,\r\n        workDetail: null,\r\n        workUrl: null,\r\n        workManhour: null,\r\n        workTimeIn: null,\r\n        workTimeOut: null,\r\n    })\r\n    let a = this.state.data\r\n    this.setState({data: a})\r\n        console.log(\"ActionsWork -> handleAddData ->  this.state.data\",  this.state.data)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<>\r\n\r\n            <div className=\"App\">\r\n                <div id=\"boxType\" className=\"container-box-content\">\r\n                    <div className=\"row wrap-container\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item href=\"/work\">\r\n                                <HomeOutlined />\r\n                                <span className=\"breadcrum-custom\">  work</span>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item href=\"#\">\r\n                                {this.props.match.params.action === 'create' ? <span className=\"breadcrum-custom\">  Create</span> : null}\r\n                                {this.props.match.params.action === 'edit' ? <span className=\"breadcrum-custom\">  Edit</span> : null}\r\n                                {this.props.match.params.action === 'view' ? <span className=\"breadcrum-custom\">  View</span> : null}\r\n                            </Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <div className=\"wrap-content\">\r\n                            <div className=\"box-action\">\r\n                                <div className=\"box-title-search\">\r\n                                    {this.props.match.params.action === 'create' ? <p className=\"font-size-search\">Create Work</p> : null}\r\n                                    {this.props.match.params.action === 'edit' ? <p className=\"font-size-search\">Edit Work</p> : null}\r\n                                    {this.props.match.params.action === 'view' ? <p className=\"font-size-search\">View Work</p> : null}\r\n\r\n                                </div>\r\n                                <div className=\"box-content\">\r\n                                    <div className=\"box-action-date\">\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"ddlDate\">Date : <span style={{ color: 'red' }}>*</span></label></div>\r\n                                            <div className=\"col-5\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                                <DateBox\r\n                                                    value={null}\r\n                                                    type=\"date\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr className=\"hr-action\"></hr>\r\n                                    <div style={{ textAlign: 'right' }}>\r\n                                        <p><span style={{ color: 'red' }}>*</span> Items marked with an asterisk are required</p>\r\n                                    </div>\r\n                                    {this.state.data.map((data, i) => {\r\n                                        console.log(\"ActionsWork -> render -> data\", data)\r\n                                        console.log(\"ActionsWork -> render -> i\", i);\r\n                                        return (\r\n                                            <>\r\n                                                <div className=\"box-action-content\">\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                                                            <label for=\"ddlProjectName\">Project Name <span style={{ color: 'red' }}>*</span></label>\r\n                                                        </div>\r\n\r\n                                                        <Select\r\n                                                            showSearch\r\n                                                            style={{ width: 200 }}\r\n                                                            placeholder=\"Please selete project\"\r\n                                                            optionFilterProp=\"children\"\r\n                                                            onChange={(e) => { this.handleChangeProject(e, i) }}\r\n                                                            onFocus={(e) => { this.handleFocusProject(e, i) }}\r\n                                                            onBlur={(e) => { this.handleBlurProject(e, i) }}\r\n                                                            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                                            value={data.projectId}\r\n                                                        >\r\n                                                            {this.projectList}\r\n                                                        </Select>\r\n                                                    </div>\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"ddlJobType\">Job Type <span style={{ color: 'red' }}>*</span></label></div>\r\n                                                        <Select\r\n                                                            showSearch\r\n                                                            style={{ width: 200 }}\r\n                                                            placeholder=\"Please selete Type\"\r\n                                                            optionFilterProp=\"children\"\r\n                                                            onChange={(e) => { this.handleChangeType(e, i) }}\r\n                                                            onFocus={(e) => { this.handleFocusType(e, i) }}\r\n                                                            onBlur={(e) => { this.handleBlurType(e, i) }}\r\n                                                            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                                            value={data.typeId}\r\n                                                        >\r\n                                                            {this.typeList}\r\n                                                        </Select>\r\n                                                    </div>\r\n\r\n                                                    {/* WorkIn */}\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"ddlTimeIn\">Time in <span style={{ color: 'red' }}>*</span></label></div>\r\n\r\n                                                        <TimePicker placeholder=\"Select time in\" format={format} value={data.workTimeIn} showNow={true} onChange={(time, timestring) => { this.onChangeTimeIn(time, timestring, i) }} />\r\n                                                    </div>\r\n\r\n                                                    {/* WorkOut */}\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"ddlTimeOut\">Time out <span style={{ color: 'red' }}>*</span></label></div>\r\n\r\n                                                        <TimePicker placeholder=\"Select Time out\" format={format} value={data.workTimeOut} showNow={true} onChange={(time, timestring) => { this.onChangeTimeOut(time, timestring, i) }} />\r\n                                                    </div>\r\n\r\n                                                    {/* man hours */}\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtManHours\">Man hours <span style={{ color: 'red' }}>*</span></label></div>\r\n                                                        <input type=\"text\" class=\"form-control col-3\" id=\"txtManHours\" />\r\n                                                        <div class=\"col-3\">\r\n                                                            <button type=\"button\" class=\"btn btn-custom-color\" style={{ marginRight: 20 }} onClick={this.calManHours}>Calculate Man Hours</button></div>\r\n                                                    </div>\r\n\r\n                                                    {/* Detail */}\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtDetail\">Detail <span style={{ color: 'red' }}>*</span></label></div>\r\n                                                        <textarea rows=\"3\" type=\"text\" class=\"form-control col-6\" id=\"txtDetail\" />\r\n\r\n                                                    </div>\r\n\r\n                                                    {/* Url */}\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtUrl\">Url <span style={{ color: 'red' }}>*</span></label></div>\r\n                                                        <input type=\"text\" class=\"form-control col-6\" id=\"txtUrl\" />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <hr className=\"hr-action\"></hr>\r\n                                            </>\r\n                                        )\r\n\r\n                                    })}\r\n                                    <br />\r\n                                    <div>\r\n                                        <button type=\"button\" class=\"btn btn-add-work\" onClick={this.handleAddData}><span className=\"btn-add-work-icon\"><PlusOutlined /></span></button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-12\" style={{ textAlign: 'center' }}>\r\n                                        <button type=\"button\" class=\"btn btn-secondary\" style={{ marginRight: 20 }} onClick={this.handleReset}>RESET</button>\r\n                                        <button type=\"button\" class=\"btn btn-primary\">SEARCH</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ActionsWork;\r\n","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\index.js",["133","134","135","136","137","138"],"import React, { Component } from 'react';\r\n// import '..//App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\nimport { FaClipboardList } from \"react-icons/fa\";\r\nimport { AiOutlineStepBackward } from \"react-icons/ai\";\r\nimport { AiFillStepForward } from \"react-icons/ai\";\r\nimport { AiTwotoneEye } from \"react-icons/ai\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport SearchField from \"react-search-field\";\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\n// import JobType from './JobType/๋JobType';\r\n\r\nclass JobType extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  openModal = () => this.setState({ isOpen: true });\r\n  closeModal = () => this.setState({ isOpen: false });\r\n  render() {\r\n    // const style = {\r\n    //   backgroundColor: 'white',\r\n    //   front: 'inherit',\r\n    //   border: '1x sold blue',\r\n    //   padding: '8px',\r\n    //   width: '1280px',\r\n    //   height: '800px',\r\n    // };\r\n\r\n\r\n    return (\r\n\r\n      <>\r\n        <div className=\"App\">\r\n          <div id=\"boxType\" className=\"container-box-content\">\r\n            <div className=\"row \">\r\n              <div className=\"col-12 text-left\">\r\n                <h1><Navbar.Brand href=\"#Job Type\" style={{ marginLeft: \"140px\" }}>Job Type</Navbar.Brand></h1>\r\n              </div>\r\n\r\n              <div className=\"col-12 box-search\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <p style={{ color: \"#696969\" }}>Search Job Type</p>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <div className=\"box-search-border\">\r\n\r\n                      <form>\r\n                        <div className=\"row form-group\">\r\n                          <div className=\"col-4\"><p>Job Type</p></div>\r\n                          {/* <div className=\"col-6\"><SearchField\r\n                            placeholder=\"JobType Name \"\r\n                            // onChange={onChange}\r\n                            searchText=\"\"\r\n                            classNames=\"test-class\"\r\n                          />\r\n                          </div> */}\r\n                          <div className=\"col-6\"><input type=\"text\" class=\"form-control\" /></div>\r\n                        </div>\r\n\r\n   <div className=\"row form-group\">\r\n                          <div className=\"col-4\"><p>Code</p></div>\r\n                          {/* <div className=\"col-6\"><SearchField\r\n                            placeholder=\"JobType Name \"\r\n                            // onChange={onChange}\r\n                            searchText=\"\"\r\n                            classNames=\"test-class\"\r\n                          />\r\n                          </div> */}\r\n                          <div className=\"col-6\"><input type=\"text\" class=\"form-control\" /></div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"row form-group\">\r\n                          <div className=\"col-3\"></div>\r\n                          <div className=\"col-9\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ marginRight: \"10px\" }}>RESET</button>\r\n                            <button type=\"button\" class=\"btn btn-primary\" style={{ marginRight: \"60px\" }}>SEARCH</button>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n                      </form>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-12 box-search\">\r\n                <div className=\"row table-ui\">\r\n                  <div className=\"col-12 text-rigth\">\r\n                    <div>\r\n                      {/* <Button variant=\"primary\" onClick={this.openModal}>+ Create Job Type\r\n                     </Button> */}\r\n                    </div>\r\n\r\n                    {/* <button type=\"button\" class=\"btn btn-primary\" > + Create Job Type</button> */}\r\n\r\n<div className=\"wrap-content\">\r\n            <div className=\"box-search\">\r\n              <div style={{textAlign: 'end', padding: 15}}>\r\n              <Link to=\"/JobType/create\">\r\n              <Button variant=\"primary\" onClick={this.openModal}><IoAddOutline style={{ width: '16px' }} /> Create JobType</Button>\r\n              </Link>\r\n              </div>\r\n\r\n                    <table class=\"table text-center\">\r\n                      <table class=\"table \">\r\n                        <thead class=\"thead-light\">\r\n\r\n                          <tr>\r\n                            <th scope=\"col\">No</th>\r\n                            <th scope=\"col\">Job Type</th>\r\n                            <th scope=\"col\">Code</th>\r\n                            <th scope=\"col\">Edit</th>\r\n                            <th scope=\"col\">Delete</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr>\r\n                            <th scope=\"row\">1</th>\r\n                            <td>Coding</td>\r\n                            <td>ECT</td>\r\n                            <td><FaClipboardList /></td>\r\n                            <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n\r\n\r\n                            <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                              <Modal.Header closeButton style={{ color: \"#bb1717\" }}>\r\n                                <Modal.Title style={{ padding: \"1rem 11rem\" }}>Confirm</Modal.Title>\r\n                              </Modal.Header>\r\n                              <Modal.Body style={{ textAlign: \"center\" }}>Are you sure you want to delete this?</Modal.Body>\r\n\r\n                              <Modal.Footer style={{ borderTop: \"0px\" }} style={{ justifyContent: \"center\" }}>\r\n                                <Button variant=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                                  ON</Button>\r\n\r\n                                <Button variant=\"danger\" onClick={this.openModal}>\r\n                                  YES</Button>\r\n\r\n                              </Modal.Footer>\r\n\r\n                            </Modal>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <th scope=\"row\">2</th>\r\n                            <td>Coding</td>\r\n                            <td>ECT</td>\r\n                            <td><FaClipboardList /></td>\r\n                            <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th scope=\"row\">3</th>\r\n                            <td>Coding</td>\r\n                            <td>ECT</td>\r\n                            <td><FaClipboardList /></td>\r\n                            <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n\r\n                    </table>\r\n                  </div></div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n </div> </div>\r\n\r\n\r\n          </div>\r\n        </div><br />\r\n\r\n        <Navbar bg=\"btn btn-light\" expand=\"lg\" style={{ height: \"40px\" }} >\r\n          <Navbar.Brand href=\"#Result : 1-10 of 10\" style={{ marginLeft: \"400px\" }}>Resulft : 1-10 of 10</Navbar.Brand>\r\n\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#AiOutlineStepBackward\" style={{ marginLeft: \"200px\" }}> <AiOutlineStepBackward /></Nav.Link>\r\n            <Nav.Link href=\"#1\" style={{ marginLeft: \"20px\" }}>  1  </Nav.Link>\r\n            <Nav.Link href=\"#2\" style={{ marginLeft: \"10px\" }}>  2  </Nav.Link>\r\n            <Nav.Link href=\"#3\" style={{ marginLeft: \"10px\" }}>  3  </Nav.Link>\r\n            <Nav.Link href=\"#AiFillStepForward\" style={{ marginLeft: \"30px\" }}><AiFillStepForward /> </Nav.Link>\r\n\r\n          </Nav>\r\n\r\n\r\n\r\n          <Nav.Link href=\"#Row per page :\" style={{ marginLeft: \"300px\" }}>Row per page :</Nav.Link>\r\n\r\n\r\n\r\n\r\n\r\n          <NavDropdown title=\"10\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">10</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\">20</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">50</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">100</NavDropdown.Item>\r\n          </NavDropdown>\r\n\r\n\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n\r\n\r\n\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n\r\n      </>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default JobType;\r\n","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\home\\index.js",["139"],"import React from 'react'\r\n\r\nexport default () => (\r\n  <div className=\"has-text-centered\">\r\n    {/* <section class=\"hero is-info\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Home Page</h1>\r\n        <h2 className=\"page-title\">ทำ Routing ให้กับ React ด้วย React Router v4</h2>\r\n        <p className=\"button button-large is-primary\"><a href=\"https://devahoy.com/posts/basic-web-with-react-router-v4/\" target=\"_blank\">อ่านบทความ</a></p>\r\n      </div>\r\n    </section> */}\r\n  </div>\r\n)\r\n","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\index.js",["140","141","142","143","144","145"],"import React, { Component } from 'react';\r\n// import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import Head from './JobType/Head';\r\n\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\nimport { FaClipboardList } from \"react-icons/fa\";\r\nimport { AiOutlineStepBackward } from \"react-icons/ai\";\r\nimport { AiFillStepForward } from \"react-icons/ai\";\r\nimport { AiTwotoneEye } from \"react-icons/ai\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport SearchField from \"react-search-field\";\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\n// import JobType from './JobType/๋JobType';\r\n\r\nclass Project extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  openModal = () => this.setState({ isOpen: true });\r\n  closeModal = () => this.setState({ isOpen: false });\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n       <div className=\"App\">\r\n        <div id=\"boxType\" className=\"container-box-content\">\r\n          <div className=\"row wrap-container\">\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\" active aria-current=\"page\"><a>Work</a></li>\r\n              </ol>\r\n            </nav>\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\">\r\n                <div className=\"box-title-search\">\r\n                  <p className=\"font-size-search\">Search Project</p>\r\n                </div>\r\n        {/* <div className=\"App\">\r\n          <div id=\"boxType\" className=\"container-box-content\">\r\n            <div className=\"row \">\r\n              <div className=\"col-12 text-left\">\r\n                <h1><Navbar.Brand href=\"#Project\" style={{ marginLeft: \"140px\" }}>Project</Navbar.Brand></h1>\r\n              </div>\r\n\r\n              <div className=\"col-12 box-search\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <p style={{ color: \"#696969\" }}>Search Project</p>\r\n                  </div> */}\r\n                  <div className=\"col-12\">\r\n                    <div className=\"box-search-border\">\r\n\r\n                      <form>\r\n                        <div className=\"row form-group\">\r\n                          <div className=\"col-4\"><p>Project Name</p></div>\r\n                          {/* <div className=\"col-6\"><SearchField\r\n                            placeholder=\"JobType Name \"\r\n                            // onChange={onChange}\r\n                            searchText=\"\"\r\n                            classNames=\"test-class\"\r\n                          />\r\n                          </div> */}\r\n                          <div className=\"col-6\"><input type=\"text\" class=\"form-control\" /></div>\r\n                        </div>\r\n\r\n                        <div className=\"row form-group\">\r\n                          <div className=\"col-3\"></div>\r\n                          <div className=\"col-9\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ marginRight: \"10px\" }}>RESET</button>\r\n                            <button type=\"button\" class=\"btn btn-primary\" style={{ marginRight: \"60px\" }}>SEARCH</button>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n                      </form>\r\n\r\n\r\n                    {/* </div>\r\n                  </div>\r\n                </div> */}\r\n\r\n              </div>\r\n\r\n              {/* <div className=\"col-12 box-search\">\r\n                <div className=\"row table-ui\">\r\n                  <div className=\"col-12 text-rigth\">\r\n                    <div>\r\n                      {/* <Button variant=\"primary\" onClick={this.openModal}>+ Create Job Type\r\n                     </Button> */}\r\n                    </div> \r\n\r\n                    {/* <button type=\"button\" class=\"btn btn-primary\" > + Create Project</button> */}\r\n {/* content start*/}\r\n <div className=\"wrap-content\">\r\n            <div className=\"box-search\">\r\n              <div style={{textAlign: 'end', padding: 15}}>\r\n              <Link to=\"/projects/create\">\r\n              <Button variant=\"primary\" onClick={this.openModal}><IoAddOutline style={{ width: '16px' }} /> Create Project</Button>\r\n              </Link>\r\n              </div>\r\n\r\n                    <table class=\"table text-center\">\r\n                      <table class=\"table \">\r\n                        <thead class=\"thead-light\">\r\n\r\n                          <tr>\r\n                            <th scope=\"col\">No</th>\r\n                            <th scope=\"col\">ProjectName</th>\r\n                            <th scope=\"col\">Phase</th>\r\n                            <th scope=\"col\">View</th>\r\n                            <th scope=\"col\">Edit</th>\r\n                            <th scope=\"col\">Delete</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr>\r\n                            <th scope=\"row\">1</th>\r\n                            <td>SSB-SRFC</td>\r\n                            <td>Phase 1.0</td>\r\n                            <td><AiTwotoneEye /></td>\r\n                            <td><FaClipboardList /></td>\r\n                            <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n\r\n\r\n                            <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                              <Modal.Header closeButton style={{ color: \"#bb1717\" }}>\r\n                                <Modal.Title style={{ padding: \"1rem 11rem\" }}>Confirm</Modal.Title>\r\n                              </Modal.Header>\r\n                              <Modal.Body style={{ textAlign: \"center\" }}>Are you sure you want to delete this?</Modal.Body>\r\n\r\n                              <Modal.Footer style={{ borderTop: \"0px\" }} style={{ justifyContent: \"center\" }}>\r\n                                <Button variant=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                                  ON</Button>\r\n\r\n                                <Button variant=\"danger\" onClick={this.openModal}>\r\n                                  YES</Button>\r\n\r\n                              </Modal.Footer>\r\n\r\n                            </Modal>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <th scope=\"row\">2</th>\r\n                            <td>SSB-SRFC</td>\r\n                            <td>Phase 1.0</td>\r\n                            <td><AiTwotoneEye /></td>\r\n                            <td><FaClipboardList /></td>\r\n                            <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th scope=\"row\">3</th>\r\n                            <td>SSB-SRFC</td>\r\n                            <td>Phase 1.0</td>\r\n                            <td><AiTwotoneEye /></td>\r\n                            <td><FaClipboardList /></td>\r\n                            <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n\r\n                    </table>\r\n                  </div></div>\r\n\r\n            </div> \r\n              </div> \r\n\r\n</div></div> \r\n\r\n\r\n          </div>\r\n        {/* </div> */}\r\n        <br />\r\n\r\n        <Navbar bg=\"btn btn-light\" expand=\"lg\" style={{ height: \"40px\" }} >\r\n          <Navbar.Brand href=\"#Result : 1-10 of 10\" style={{ marginLeft: \"400px\" }}>Resulft : 1-10 of 10</Navbar.Brand>\r\n\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#AiOutlineStepBackward\" style={{ marginLeft: \"200px\" }}> <AiOutlineStepBackward /></Nav.Link>\r\n            <Nav.Link href=\"#1\" style={{ marginLeft: \"20px\" }}>  1  </Nav.Link>\r\n            <Nav.Link href=\"#2\" style={{ marginLeft: \"10px\" }}>  2  </Nav.Link>\r\n            <Nav.Link href=\"#3\" style={{ marginLeft: \"10px\" }}>  3  </Nav.Link>\r\n            <Nav.Link href=\"#AiFillStepForward\" style={{ marginLeft: \"30px\" }}><AiFillStepForward /> </Nav.Link>\r\n\r\n          </Nav>\r\n\r\n          <Nav.Link href=\"#Row per page :\" style={{ marginLeft: \"300px\" }}>Row per page :</Nav.Link>\r\n\r\n          <NavDropdown title=\"10\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">10</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\">20</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">50</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">100</NavDropdown.Item>\r\n          </NavDropdown>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n\r\n      </>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\index.js",["146","147","148","149","150","151","152","153","154","155","156"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport TreeList, { RemoteOperations, Column, SearchPanel, HeaderFilter, Editing, RequiredRule, Lookup } from 'devextreme-react/tree-list';\r\nimport AspNetData from 'devextreme-aspnet-data-nojquery';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb } from 'antd';\r\nimport { HomeOutlined, UserOutlined } from '@ant-design/icons';\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\n\r\n\r\nconst url = 'https://js.devexpress.com/Demos/Mvc/api/TreeListTasks';\r\n\r\nconst tasksData = AspNetData.createStore({\r\n  key: 'Task_ID',\r\n  loadUrl: `${url}/Tasks`,\r\n  insertUrl: `${url}/InsertTask`,\r\n  updateUrl: `${url}/UpdateTask`,\r\n  deleteUrl: `${url}/DeleteTask`,\r\n  onBeforeSend: function (method, ajaxOptions) {\r\n    ajaxOptions.xhrFields = { withCredentials: true };\r\n  }\r\n});\r\n\r\nconst employeesData = AspNetData.createStore({\r\n  key: 'ID',\r\n  loadUrl: `${url}/TaskEmployees`\r\n});\r\n\r\nconst statusesData = [\r\n  'Not Started',\r\n  'Need Assistance',\r\n  'In Progress',\r\n  'Deferred',\r\n  'Completed'\r\n];\r\n\r\n\r\n\r\nclass Work extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      itembar: [false, false, false],\r\n      filter: {\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n        projectId: null,\r\n        typeId: null\r\n      },\r\n      projectList: [],\r\n      jobtypeList: [],\r\n      isPopupSuccess: true,\r\n      isPopupError: false,\r\n      isPopupMsg: 'test',\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjectList()\r\n    this.getJobtypeList()\r\n  }\r\n\r\n  getProjectList() {\r\n    this.setState({\r\n      projectList: [{\r\n        projectId: '001',\r\n        projectName: 'test1'\r\n      },\r\n      {\r\n        projectId: '002',\r\n        projectName: 'test2'\r\n      }]\r\n    })\r\n  }\r\n\r\n  getJobtypeList() {\r\n    this.setState({\r\n      jobtypeList: [{\r\n        typeId: '001',\r\n        typeName: 'test1'\r\n      },\r\n      {\r\n        typeId: '002',\r\n        typeName: 'test2'\r\n      }]\r\n    })\r\n    console.log(\"Work -> getJobtypeList -> this.state.jobtypeList\", this.state.jobtypeList)\r\n  }\r\n\r\n  handleProjectChange = (event) => {\r\n\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    temp.projectId = event.target.value\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: temp.dateFrom,\r\n        dateTo: temp.dateTo,\r\n        typeId: temp.typeId,\r\n        projectId: event.target.value\r\n      }\r\n    });\r\n  }\r\n  handleTypeChange = (event) => {\r\n\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    temp.typeId = event.target.value\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: temp.dateFrom,\r\n        dateTo: temp.dateTo,\r\n        typeId: temp.typeId,\r\n        projectId: temp.projectId\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChangeDate = (event, type) => {\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    if (type === 'from') {\r\n      this.setState({\r\n        filter: {\r\n          dateFrom: event.value,\r\n          dateTo: temp.dateTo,\r\n          typeId: temp.typeId,\r\n          projectId: temp.projectId\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        filter: {\r\n          dateFrom: temp.dateFrom,\r\n          dateTo: event.value,\r\n          typeId: temp.typeId,\r\n          projectId: temp.projectId\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    console.log(\"Work -> handleReset -> this.state.filter\", this.state.filter)\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n        projectId: null,\r\n        typeId: null\r\n      }\r\n    })\r\n    setTimeout(() => {\r\n      console.log(\"Work -> handleReset -> ll\", this.state.filter)\r\n    }, 100);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    function initNewRow(e) {\r\n      e.data.Task_Status = 'Not Started';\r\n      e.data.Task_Start_Date = new Date();\r\n      e.data.Task_Due_Date = new Date();\r\n    }\r\n\r\n\r\n\r\n    return (<>\r\n\r\n      <div className=\"App\">\r\n        <div id=\"boxType\" className=\"container-box-content\">\r\n          <div className=\"row wrap-container\">\r\n            <Breadcrumb>\r\n              <Breadcrumb.Item href=\"#\">\r\n                <HomeOutlined />\r\n                <span className=\"breadcrum-custom\">  work</span>\r\n              </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\">\r\n                <div className=\"box-title-search\">\r\n                  <p className=\"font-size-search\">Search Work</p>\r\n\r\n                </div>\r\n                <div className=\"box-content\">\r\n                  <div className=\"box-search-border\">\r\n                    <form>\r\n\r\n                      {/*  Dropdown */}\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlProjectName\">Project Name</label></div>\r\n                            <select class=\"form-control col-7\" id=\"ddlProjectName\" value={this.state.filter.projectId} onChange={this.handleProjectChange}>\r\n                              {/* <option value={this.state.filter.projectId} selected={this.state.filter.projectId == null}>-- Please select project --</option> */}\r\n                              {\r\n                                this.state.projectList.map(r => {\r\n                                  console.log(r, r.projectId == this.state.filter.projectId)\r\n                                  return <option value={r.projectId} selected={r.projectId == this.state.filter.projectId}>{r.projectName}</option>\r\n\r\n                                })\r\n                              }\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlJobType\">Job Type</label></div>\r\n                            <select class=\"form-control col-7\" id=\"ddlJobType\" value={this.state.filter.typeId} onChange={this.handleTypeChange}>\r\n                              {\r\n                                this.state.jobtypeList.map(r => {\r\n                                  console.log(\"Work -> render -> r\", r)\r\n                                  return <option value={r.typeId} selected={r.typeId == this.state.filter.typeId}>{r.typeName}</option>\r\n                                })\r\n                              }\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/*  วันที่ */}\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlProjectName\">Date : From</label></div>\r\n                            <div className=\"col-7\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                              <DateBox\r\n                                value={this.state.filter.dateFrom}\r\n                                type=\"date\" onValueChanged={(e) => {\r\n                                  this.handleChangeDate(e, 'from')\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlJobType\">Date : To</label></div>\r\n                            <div className=\"col-7\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                              <DateBox value={this.state.filter.dateTo}\r\n                                type=\"date\" type=\"date\" onValueChanged={(e) => {\r\n                                  this.handleChangeDate(e, 'to')\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                    </form>\r\n\r\n                    <div className=\"row form-group\">\r\n                      <div className=\"col-12\" style={{ textAlign: 'center' }}>\r\n                        <button type=\"button\" class=\"btn btn-secondary\" style={{ marginRight: 20 }} onClick={this.handleReset}>RESET</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\">SEARCH</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            {/* content start*/}\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\" style={{ padding: 30 }}>\r\n                <div style={{ textAlign: 'end', padding: 15 }}>\r\n                  <Link to=\"/work/create\">\r\n                    <Button variant=\"primary\" onClick={this.openModal}><IoAddOutline style={{ width: '16px' }} /> Create Work</Button>\r\n                  </Link>\r\n                </div>\r\n\r\n                <TreeList\r\n                  id=\"tree-list\"\r\n                  dataSource={tasksData}\r\n                  keyExpr=\"Task_ID\"\r\n                  parentIdExpr=\"Task_Parent_ID\"\r\n                  hasItemsExpr=\"Has_Items\"\r\n                  defaultExpandedRowKeys={[1, 2]}\r\n                  showRowLines={true}\r\n                  showBorders={true}\r\n                  columnAutoWidth={true}\r\n                  wordWrapEnabled={true}\r\n                  onInitNewRow={initNewRow}>\r\n                  <RemoteOperations filtering={true} sorting={true} grouping={true} />\r\n                  {/* <SearchPanel visible={true} /> */}\r\n                  <HeaderFilter visible={true} />\r\n                  <Editing\r\n                    mode=\"row\"\r\n                    allowUpdating={true}\r\n                    allowDeleting={true} />\r\n                  <Column dataField=\"PROJECT\" minWidth={250}>\r\n                    <RequiredRule />\r\n                  </Column>\r\n                  <Column dataField=\"Task_PHASE\" caption=\"PHASE\" minWidth={120}>\r\n                    <Lookup dataSource={employeesData} valueExpr=\"ID\" displayExpr=\"Name\" />\r\n                    <RequiredRule />\r\n                  </Column>\r\n                  <Column dataField=\"Task_DETAIL\" caption=\"DETAIL\" minWidth={120}>\r\n                    <Lookup dataSource={statusesData} />\r\n                  </Column>\r\n                  <Column dataField=\"Task_MANHOUR\" caption=\"MANHOUR\" minWidth={120}>\r\n                    <Lookup dataSource={statusesData} />\r\n                  </Column>\r\n\r\n\r\n\r\n\r\n                  <Column dataField=\"Task_TIME_IN\" caption=\"TIME IN\" dataType=\"date\" />\r\n                  <Column dataField=\"Task_TIME_OUT\" caption=\"TIME OUT\" dataType=\"date\" />\r\n\r\n                  <Column dataField=\"Task_EDIT_DELETE\" caption=\"EDIT DELETE\" minWidth={120}>\r\n                    <Lookup dataSource={statusesData} />\r\n                  </Column>\r\n                </TreeList>\r\n\r\n                {/* <div style={{padding: 20}}>\r\n              <DataGrid\r\n                  dataSource={customers}\r\n                  showBorders={true}\r\n                >\r\n                  <GroupPanel visible={true} />\r\n                  {/* <Grouping autoExpandAll={this.state.autoExpandAll} /> */}\r\n                {/* <Paging defaultPageSize={10} />\r\n\r\n                  <Column dataField=\"PROJECT\" dataType=\"string\" />\r\n                  <Column dataField=\"PHASE\" dataType=\"string\" />\r\n                  <Column dataField=\"TYPE\" dataType=\"string\" />\r\n                  <Column dataField=\"DETAIL\" dataType=\"string\" />\r\n                  <Column dataField=\"MANHOUR\" dataType=\"string\" />\r\n                  <Column dataField=\"TIME IN\" dataType=\"string\" />\r\n                  <Column dataField=\"TIME OUT\" dataType=\"string\" />\r\n                  <Column dataField=\"EDIT DELETE\" dataType=\"string\" />\r\n                  <Column dataField=\"State\" dataType=\"string\" groupIndex={0} />\r\n\r\n                </DataGrid>\r\n              // </div> */}\r\n\r\n              </div>\r\n            </div>\r\n            {/* content end*/}\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <AlertPopUp successStatus={this.state.isPopupSuccess} errorStatus={this.state.isPopupError} message={this.state.isPopupMsg} onClose={() => {\r\n        this.setState({ isPopupError: false })\r\n        this.setState({ isPopupSuccess: false })\r\n      }} />\r\n    </>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Work;\r\n","D:\\ฝึกสหกิจ_ซอร์สโค้ด\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\alert_popup.js",["157","158","159","160","161","162","163","164","165","166","167","168","169"],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\index.js",[],["170","171"],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\reportWebVitals.js",[],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\App.js",[],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\Layout\\Head.js",["172","173","174","175"],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\routes\\index.js",["176"],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\create-edit-view.js",["177","178","179","180","181","182","183","184","185"],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\index.js",["186","187","188","189","190","191","192","193","194","195","196"],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\home\\index.js",["197"],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\index.js",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BsFillCalendarFill } from \"react-icons/bs\";\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\nimport { FaClipboardList } from \"react-icons/fa\";\r\nimport { AiOutlineStepBackward } from \"react-icons/ai\";\r\nimport { AiFillStepForward } from \"react-icons/ai\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport TreeList, { RemoteOperations, Column, SearchPanel, HeaderFilter, Editing, RequiredRule, Lookup } from 'devextreme-react/tree-list';\r\nimport AspNetData from 'devextreme-aspnet-data-nojquery';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb } from 'antd';\r\nimport { HomeOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst url = 'https://js.devexpress.com/Demos/Mvc/api/TreeListTasks';\r\n\r\nconst tasksData = AspNetData.createStore({\r\n  key: 'Task_ID',\r\n  loadUrl: `${url}/Tasks`,\r\n  insertUrl: `${url}/InsertTask`,\r\n  updateUrl: `${url}/UpdateTask`,\r\n  deleteUrl: `${url}/DeleteTask`,\r\n  onBeforeSend: function (method, ajaxOptions) {\r\n    ajaxOptions.xhrFields = { withCredentials: true };\r\n  }\r\n});\r\n\r\nconst employeesData = AspNetData.createStore({\r\n  key: 'ID',\r\n  loadUrl: `${url}/TaskEmployees`\r\n});\r\n\r\nconst statusesData = [\r\n  'Not Started',\r\n  'Need Assistance',\r\n  'In Progress',\r\n  'Deferred',\r\n  'Completed'\r\n];\r\n\r\n\r\n\r\nclass JobType extends React.Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  openModal = () => this.setState({ isOpen: true });\r\n  closeModal = () => this.setState({ isOpen: false });\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      itembar: [false, false, false],\r\n      filter: {\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n        projectId: null,\r\n        typeId: null\r\n      },\r\n      projectList: [],\r\n      jobtypeList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjectList()\r\n    this.getJobtypeList()\r\n  }\r\n\r\n  getProjectList() {\r\n    this.setState({\r\n      projectList: [{\r\n        projectId: '001',\r\n        projectName: 'test1'\r\n      },\r\n      {\r\n        projectId: '002',\r\n        projectName: 'test2'\r\n      }]\r\n    })\r\n  }\r\n\r\n  getJobtypeList() {\r\n    this.setState({\r\n      jobtypeList: [{\r\n        typeId: '001',\r\n        typeName: 'test1'\r\n      },\r\n      {\r\n        typeId: '002',\r\n        typeName: 'test2'\r\n      }]\r\n    })\r\n    console.log(\"Work -> getJobtypeList -> this.state.jobtypeList\", this.state.jobtypeList)\r\n  }\r\n\r\n  handleProjectChange = (event) => {\r\n\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    temp.projectId = event.target.value\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: temp.dateFrom,\r\n        dateTo: temp.dateTo,\r\n        typeId: temp.typeId,\r\n        projectId: event.target.value\r\n      }\r\n    });\r\n  }\r\n  handleTypeChange = (event) => {\r\n\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    temp.typeId = event.target.value\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: temp.dateFrom,\r\n        dateTo: temp.dateTo,\r\n        typeId: temp.typeId,\r\n        projectId: temp.projectId\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChangeDate = (event, type) => {\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    if (type === 'from') {\r\n      this.setState({\r\n        filter: {\r\n          dateFrom: event.value,\r\n          dateTo: temp.dateTo,\r\n          typeId: temp.typeId,\r\n          projectId: temp.projectId\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        filter: {\r\n          dateFrom: temp.dateFrom,\r\n          dateTo: event.value,\r\n          typeId: temp.typeId,\r\n          projectId: temp.projectId\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    console.log(\"Work -> handleReset -> this.state.filter\", this.state.filter)\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n        projectId: null,\r\n        typeId: null\r\n      }\r\n    })\r\n    setTimeout(() => {\r\n      console.log(\"Work -> handleReset -> ll\", this.state.filter)\r\n    }, 100);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    function initNewRow(e) {\r\n      e.data.Task_Status = 'Not Started';\r\n      e.data.Task_Start_Date = new Date();\r\n      e.data.Task_Due_Date = new Date();\r\n    }\r\n\r\n\r\n\r\n    return (<>\r\n\r\n      <div className=\"App\">\r\n        <div id=\"boxType\" className=\"container-box-content\">\r\n          <div className=\"row wrap-container\">\r\n            <Breadcrumb>\r\n              <Breadcrumb.Item href=\"#\">\r\n                <HomeOutlined />\r\n                <span className=\"breadcrum-custom\">job type</span>\r\n              </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\">\r\n                <div className=\"box-title-search\">\r\n                  <p className=\"font-size-search\">Search Job Type</p>\r\n\r\n                </div>\r\n                <div className=\"box-content\">\r\n                  <div className=\"box-search-border\">\r\n                    <form>\r\n\r\n                      {/* <div className=\"box-action-content\"> */}\r\n\r\n                      <div className=\"row form-group\">\r\n                        <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                      {/* Job Type Name */}\r\n                      <div className=\"row form-group\">\r\n                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtJob Type\">Job Type<span style={{ color: 'red' }}>*</span></label></div>\r\n                        <input type=\"text\" class=\"form-control col-3\" id=\"txtJob Type\" />\r\n                        {/* <div class=\"col-3\">\r\n        <button type=\"button\" class=\"btn btn-custom-color\" style={{ marginRight: 20 }} onClick={this.calManHours}>Calculate</button></div> */}\r\n                      </div>\r\n\r\n                      {/* Code */}\r\n                      <div className=\"row form-group\">\r\n                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtCode\">Code <span style={{ color: 'red' }}>*</span></label></div>\r\n                        <input type=\"text\" class=\"form-control col-3\" id=\"txtCode\" />\r\n\r\n                      </div>\r\n\r\n\r\n\r\n                      {/* </div> */}\r\n\r\n                    </form>\r\n\r\n                    <div className=\"row form-group\">\r\n                      <div className=\"col-12\" style={{ textAlign: 'center' }}>\r\n                        <button type=\"button\" class=\"btn btn-secondary\" style={{ marginRight: 20 }} onClick={this.handleReset}>RESET</button>\r\n                        <button type=\"button\" class=\"btn btn-custom-color\">SEARCH</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            {/* content start*/}\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\" style={{ padding: 30 }}>\r\n                <div style={{ textAlign: 'end', padding: 15 }}>\r\n                  <Link to=\"/JobType/create\">\r\n                    <Button variant=\"btn btn-custom-color\" onClick={this.openModal}><IoAddOutline style={{ width: '16px' }} /> Create Job Type</Button>\r\n                  </Link>\r\n                </div>\r\n\r\n\r\n                <table class=\"table text-center\">\r\n                  <table class=\"table \">\r\n                    <thead class=\"thead-light\">\r\n\r\n                      <tr>\r\n                        <th scope=\"col\">No</th>\r\n                        <th scope=\"col\">Job Type</th>\r\n                        <th scope=\"col\">Code</th>\r\n                        <th scope=\"col\">Edit</th>\r\n                        <th scope=\"col\">Delete</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Coding</td>\r\n                        <td>ECT</td>\r\n                        <td><FaClipboardList /></td>\r\n                        <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n\r\n\r\n                        <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                          <Modal.Header closeButton style={{ color: \"#bb1717\" }}>\r\n                            <Modal.Title style={{ padding: \"1rem 11rem\" }}>Confirm</Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body style={{ textAlign: \"center\" }}>Are you sure you want to delete this?</Modal.Body>\r\n\r\n                          <Modal.Footer style={{ borderTop: \"0px\" }} style={{ justifyContent: \"center\" }}>\r\n                            <Button variant=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                              ON</Button>\r\n\r\n                            <Button variant=\"danger\" onClick={this.openModal}>\r\n                              YES</Button>\r\n\r\n                          </Modal.Footer>\r\n\r\n                        </Modal>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Coding</td>\r\n                        <td>ECT</td>\r\n                        <td><FaClipboardList /></td>\r\n                        <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">3</th>\r\n                        <td>Coding</td>\r\n                        <td>ECT</td>\r\n                        <td><FaClipboardList /></td>\r\n                        <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n\r\n                </table>\r\n\r\n\r\n\r\n\r\n                {/* <div style={{padding: 20}}>\r\n              <DataGrid\r\n                  dataSource={customers}\r\n                  showBorders={true}\r\n                >\r\n                  <GroupPanel visible={true} />\r\n                  {/* <Grouping autoExpandAll={this.state.autoExpandAll} /> */}\r\n                {/* <Paging defaultPageSize={10} />\r\n\r\n                  <Column dataField=\"PROJECT\" dataType=\"string\" />\r\n                  <Column dataField=\"PHASE\" dataType=\"string\" />\r\n                  <Column dataField=\"TYPE\" dataType=\"string\" />\r\n                  <Column dataField=\"DETAIL\" dataType=\"string\" />\r\n                  <Column dataField=\"MANHOUR\" dataType=\"string\" />\r\n                  <Column dataField=\"TIME IN\" dataType=\"string\" />\r\n                  <Column dataField=\"TIME OUT\" dataType=\"string\" />\r\n                  <Column dataField=\"EDIT DELETE\" dataType=\"string\" />\r\n                  <Column dataField=\"State\" dataType=\"string\" groupIndex={0} />\r\n\r\n                </DataGrid>\r\n              // </div> */}\r\n\r\n              </div>\r\n            </div>\r\n            {/* content end*/}\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default JobType;\r\n","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\index.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BsFillCalendarFill } from \"react-icons/bs\";\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\nimport { FaClipboardList } from \"react-icons/fa\";\r\nimport { AiOutlineStepBackward } from \"react-icons/ai\";\r\nimport { AiFillStepForward } from \"react-icons/ai\";\r\nimport { AiTwotoneEye } from \"react-icons/ai\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport TreeList, { RemoteOperations, Column, SearchPanel, HeaderFilter, Editing, RequiredRule, Lookup } from 'devextreme-react/tree-list';\r\nimport AspNetData from 'devextreme-aspnet-data-nojquery';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb } from 'antd';\r\nimport { HomeOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst url = 'https://js.devexpress.com/Demos/Mvc/api/TreeListTasks';\r\n\r\nconst tasksData = AspNetData.createStore({\r\n  key: 'Task_ID',\r\n  loadUrl: `${url}/Tasks`,\r\n  insertUrl: `${url}/InsertTask`,\r\n  updateUrl: `${url}/UpdateTask`,\r\n  deleteUrl: `${url}/DeleteTask`,\r\n  onBeforeSend: function (method, ajaxOptions) {\r\n    ajaxOptions.xhrFields = { withCredentials: true };\r\n  }\r\n});\r\n\r\nconst employeesData = AspNetData.createStore({\r\n  key: 'ID',\r\n  loadUrl: `${url}/TaskEmployees`\r\n});\r\n\r\nconst statusesData = [\r\n  'Not Started',\r\n  'Need Assistance',\r\n  'In Progress',\r\n  'Deferred',\r\n  'Completed'\r\n];\r\n\r\n\r\n\r\nclass Project extends React.Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  openModal = () => this.setState({ isOpen: true });\r\n  closeModal = () => this.setState({ isOpen: false });\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      itembar: [false, false, false],\r\n      filter: {\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n        projectId: null,\r\n        typeId: null\r\n      },\r\n      projectList: [],\r\n      jobtypeList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjectList()\r\n    this.getJobtypeList()\r\n  }\r\n\r\n  getProjectList() {\r\n    this.setState({\r\n      projectList: [{\r\n        projectId: '001',\r\n        projectName: 'test1'\r\n      },\r\n      {\r\n        projectId: '002',\r\n        projectName: 'test2'\r\n      }]\r\n    })\r\n  }\r\n\r\n  getJobtypeList() {\r\n    this.setState({\r\n      jobtypeList: [{\r\n        typeId: '001',\r\n        typeName: 'test1'\r\n      },\r\n      {\r\n        typeId: '002',\r\n        typeName: 'test2'\r\n      }]\r\n    })\r\n    console.log(\"Work -> getJobtypeList -> this.state.jobtypeList\", this.state.jobtypeList)\r\n  }\r\n\r\n  handleProjectChange = (event) => {\r\n\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    temp.projectId = event.target.value\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: temp.dateFrom,\r\n        dateTo: temp.dateTo,\r\n        typeId: temp.typeId,\r\n        projectId: event.target.value\r\n      }\r\n    });\r\n  }\r\n  handleTypeChange = (event) => {\r\n\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    temp.typeId = event.target.value\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: temp.dateFrom,\r\n        dateTo: temp.dateTo,\r\n        typeId: temp.typeId,\r\n        projectId: temp.projectId\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChangeDate = (event, type) => {\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    if (type === 'from') {\r\n      this.setState({\r\n        filter: {\r\n          dateFrom: event.value,\r\n          dateTo: temp.dateTo,\r\n          typeId: temp.typeId,\r\n          projectId: temp.projectId\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        filter: {\r\n          dateFrom: temp.dateFrom,\r\n          dateTo: event.value,\r\n          typeId: temp.typeId,\r\n          projectId: temp.projectId\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    console.log(\"Work -> handleReset -> this.state.filter\", this.state.filter)\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n        projectId: null,\r\n        typeId: null\r\n      }\r\n    })\r\n    setTimeout(() => {\r\n      console.log(\"Work -> handleReset -> ll\", this.state.filter)\r\n    }, 100);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    function initNewRow(e) {\r\n      e.data.Task_Status = 'Not Started';\r\n      e.data.Task_Start_Date = new Date();\r\n      e.data.Task_Due_Date = new Date();\r\n    }\r\n\r\n\r\n\r\n    return (<>\r\n\r\n      <div className=\"App\">\r\n        <div id=\"boxType\" className=\"container-box-content\">\r\n          <div className=\"row wrap-container\">\r\n            <Breadcrumb>\r\n              <Breadcrumb.Item href=\"#\">\r\n                <HomeOutlined />\r\n                <span className=\"breadcrum-custom\">project</span>\r\n              </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\">\r\n                <div className=\"box-title-search\">\r\n                  <p className=\"font-size-search\">Search Project</p>\r\n\r\n                </div>\r\n                <div className=\"box-content\">\r\n                  <div className=\"box-search-border\">\r\n                    <form>\r\n\r\n                      {/* <div className=\"box-action-content\"> */}\r\n\r\n                      <div className=\"row form-group\">\r\n                        <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                      {/* Job Type Name */}\r\n                      <div className=\"row form-group\">\r\n                        <div className=\"col-3\" style={{ textAlign: 'right' }}><label for=\"txtProject Name\">Project Name<span style={{ color: 'red' }}>*</span></label></div>\r\n                        <input type=\"text\" class=\"form-control col-6\" id=\"txtJob Type\" />\r\n                        {/* <div class=\"col-3\">\r\n        <button type=\"button\" class=\"btn btn-custom-color\" style={{ marginRight: 20 }} onClick={this.calManHours}>Calculate</button></div> */}\r\n                      </div>\r\n\r\n                     \r\n\r\n\r\n\r\n                      {/* </div> */}\r\n\r\n                    </form>\r\n\r\n                    <div className=\"row form-group\">\r\n                      <div className=\"col-12\" style={{ textAlign: 'center' }}>\r\n                        <button type=\"button\" class=\"btn btn-secondary\" style={{ marginRight: 20 }} onClick={this.handleReset}>RESET</button>\r\n                        <button type=\"button\" class=\"btn btn-custom-color\">SEARCH</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            {/* content start*/}\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\" style={{ padding: 30 }}>\r\n                <div style={{ textAlign: 'end', padding: 15 }}>\r\n                  <Link to=\"/project/create\">\r\n                    <Button variant=\"btn btn-custom-color\" onClick={this.openModal}><IoAddOutline style={{ width: '16px' }} /> Create Project</Button>\r\n                  </Link>\r\n                </div>\r\n\r\n\r\n                <table class=\"table text-center\">\r\n                  <table class=\"table \">\r\n                    <thead class=\"thead-light\">\r\n\r\n                      <tr>\r\n                        <th scope=\"col\">No</th>\r\n                        <th scope=\"col\">Job Type</th>\r\n                        <th scope=\"col\">Code</th>\r\n                        <th scope=\"col\">View</th>\r\n                        <th scope=\"col\">Edit</th>\r\n                        <th scope=\"col\">Delete</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Coding</td>\r\n                        <td>ECT</td>\r\n                        <td><AiTwotoneEye /></td>\r\n                        <td><FaClipboardList /></td>\r\n                        <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n\r\n\r\n                        <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                          <Modal.Header closeButton style={{ color: \"#bb1717\" }}>\r\n                            <Modal.Title style={{ padding: \"1rem 11rem\" }}>Confirm</Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body style={{ textAlign: \"center\" }}>Are you sure you want to delete this?</Modal.Body>\r\n\r\n                          <Modal.Footer style={{ borderTop: \"0px\" }} style={{ justifyContent: \"center\" }}>\r\n                            <Button variant=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                              ON</Button>\r\n\r\n                            <Button variant=\"danger\" onClick={this.openModal}>\r\n                              YES</Button>\r\n\r\n                          </Modal.Footer>\r\n\r\n                        </Modal>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Coding</td>\r\n                        <td>ECT</td>\r\n                        <td><AiTwotoneEye /></td>\r\n                        <td><FaClipboardList /></td>\r\n                        <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">3</th>\r\n                        <td>Coding</td>\r\n                        <td>ECT</td>\r\n                        <td><AiTwotoneEye /></td>\r\n                        <td><FaClipboardList /></td>\r\n                        <td onClick={this.openModal}><BsFillTrashFill /></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n\r\n                </table>\r\n\r\n\r\n\r\n\r\n                {/* <div style={{padding: 20}}>\r\n              <DataGrid\r\n                  dataSource={customers}\r\n                  showBorders={true}\r\n                >\r\n                  <GroupPanel visible={true} />\r\n                  {/* <Grouping autoExpandAll={this.state.autoExpandAll} /> */}\r\n                {/* <Paging defaultPageSize={10} />\r\n\r\n                  <Column dataField=\"PROJECT\" dataType=\"string\" />\r\n                  <Column dataField=\"PHASE\" dataType=\"string\" />\r\n                  <Column dataField=\"TYPE\" dataType=\"string\" />\r\n                  <Column dataField=\"DETAIL\" dataType=\"string\" />\r\n                  <Column dataField=\"MANHOUR\" dataType=\"string\" />\r\n                  <Column dataField=\"TIME IN\" dataType=\"string\" />\r\n                  <Column dataField=\"TIME OUT\" dataType=\"string\" />\r\n                  <Column dataField=\"EDIT DELETE\" dataType=\"string\" />\r\n                  <Column dataField=\"State\" dataType=\"string\" groupIndex={0} />\r\n\r\n                </DataGrid>\r\n              // </div> */}\r\n\r\n              </div>\r\n            </div>\r\n            {/* content end*/}\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\alert_popup.js",["242","243","244","245","246","247","248","249","250","251","252","253"],"C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\create-edit.js",["254","255","256","257","258","259","260","261"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, TimePicker, Select } from 'antd';\r\nimport { HomeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\n// const format = 'HH:mm';\r\n// const Option = Select.Option;\r\n\r\n// let data = [{\r\n//     jobtypeId: null,\r\n//     codeId: null,\r\n// }]\r\n\r\n// let projectList = [];\r\n// let typeList = [];\r\n\r\n\r\nclass ActionJobType extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        // console.log(\"ActionsWork -> constructor -> props\", props.match.params.action)\r\n        // let param = useParams();\r\n        // console.log(\"param\", param)\r\n        // console.log(\"ActionsWork -> constructor -> props\", props)\r\n        super(props);\r\n        this.state = {\r\n            data: [{\r\n                jobtypeId: null,\r\n                codeId: null,\r\n\r\n            }],\r\n            projectList: [],\r\n            typeList: []\r\n        };\r\n    }\r\n\r\n    // componentDidMount() {\r\n\r\n    //     // console.log(\"ActionsWork -> componentDidMount -> s\", this.state.data)\r\n    //     this.getTypeList();\r\n    //     this.getProjectList();\r\n    //     this.setDdlTime();\r\n\r\n\r\n    // }\r\n\r\n    // getProjectList() {\r\n    //     this.setState({\r\n    //         projectList: [{\r\n    //             projectId: '001',\r\n    //             projectName: 'test1'\r\n    //         },\r\n    //         {\r\n    //             projectId: '002',\r\n    //             projectName: 'test2'\r\n    //         }]\r\n    //     })\r\n\r\n    //     let resData = [{\r\n    //         projectId: '001',\r\n    //         projectName: 'test1'\r\n    //     },\r\n    //     {\r\n    //         projectId: '002',\r\n    //         projectName: 'test2'\r\n    //     }]\r\n    //     let temp = [];\r\n    //     for (let i = 0; i < resData.length; i++) {\r\n    //         temp.push(<Option key={resData[i].projectId}>{resData[i].projectName}</Option>);\r\n    //     }\r\n\r\n    //     this.projectList = temp\r\n    // }\r\n\r\n    // getTypeList() {\r\n    //     this.setState({\r\n    //         jobtypeList: [{\r\n    //             typeId: '001',\r\n    //             typeName: 'test1'\r\n    //         },\r\n    //         {\r\n    //             typeId: '002',\r\n    //             typeName: 'test2'\r\n    //         }]\r\n    //     })\r\n\r\n    //     let resData = [{\r\n    //         typeId: '001',\r\n    //         typeName: 'test1'\r\n    //     },\r\n    //     {\r\n    //         typeId: '002',\r\n    //         typeName: 'test2'\r\n    //     }]\r\n    //     let temp = []\r\n    //     for (let i = 0; i < resData.length; i++) {\r\n    //         temp.push(<Option key={resData[i].typeId}>{resData[i].typeName}</Option>);\r\n    //         console.log(\"ActionsWork -> getJobtypeList -> resData[i].typeId\", resData[i].typeId)\r\n    //     }\r\n\r\n    //     this.typeList = temp\r\n    // }\r\n\r\n    // handleProjectChange = (value, i) => {\r\n    //     console.log(\"actionJobType -> handleProjectChange -> i\", i)\r\n    //     console.log(\"actionJobType -> handleProjectChange -> value\", value)\r\n\r\n    //     // let temp = _.cloneDeep(this.state.filter)\r\n    //     // temp.projectId = value\r\n    //     // this.setState({\r\n    //     //     filter: {\r\n    //     //         dateFrom: temp.dateFrom,\r\n    //     //         dateTo: temp.dateTo,\r\n    //     //         typeId: temp.typeId,\r\n    //     //         projectId: value\r\n    //     //     }\r\n    //     // });\r\n    // }\r\n    // handleTypeChange = (event) => {\r\n\r\n    //     let temp = _.cloneDeep(this.state.filter)\r\n    //     temp.typeId = event.target.value\r\n    //     this.setState({\r\n    //         filter: {\r\n    //             dateFrom: temp.dateFrom,\r\n    //             dateTo: temp.dateTo,\r\n    //             typeId: temp.typeId,\r\n    //             projectId: temp.projectId\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    // setDdlTime() {\r\n    // let maxMin = 60;\r\n    // let maxHours = 24;\r\n\r\n    // let tmpMin = []\r\n    // let tmpHours = []\r\n    // for (let i = 0; i < maxHours; i++) {\r\n    //     tmpMin.push()\r\n    // }\r\n\r\n\r\n    // TODO :: get hours\r\n    // var hours = []; // time array\r\n    // var th = 0; // start time\r\n    //loop to increment the time and push results in array\r\n    // for (var i = 0; th < 24 * 60; i++) {\r\n    //     var hh = Math.floor(th / 60); // gething hours of day in 0-24 format\r\n    //     var mm = (th % 60); // gething minutes of the hour in 0-55 format\r\n    //     hours[i] = (\"0\" + (hh)).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n    //     th++;\r\n    // }\r\n    // hours = _.uniq(hours)\r\n    // console.log(\"ActionsWork -> setDdlTime -> hours\", hours)\r\n    // timeHours\r\n    // timeMin\r\n\r\n    // TODO :: get min\r\n    // var min = []; // time array\r\n    // var tm = 0;\r\n    // for (var j = 0; th < 60 *60; j++) {\r\n    //     // var hh = Math.floor(th / 60); // gething hours of day in 0-24 format\r\n    //     var mm = (tm % 60); // gething minutes of the hour in 0-55 format\r\n    //     min[i] = (\"0\" + (mm)).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n    //     tm +=10;\r\n    // }\r\n    // min = _.uniq(min)\r\n    // console.log(\"ActionsWork -> setDdlTime -> min\", min)\r\n    // timeHours\r\n    // }\r\n\r\n    // TODO :: Select\r\n\r\n    // handleChangeProject = (value, index) => {\r\n    //     let data = [...this.state.data];\r\n    //     let item = { ...data[index] };\r\n    //     item.projectId = value;\r\n    //     data[index] = item;\r\n    //     this.setState({ data });\r\n    // }\r\n\r\n    // handleBlurProject = () => {\r\n    //     console.log('blur ---- ', this.typeList);\r\n    // }\r\n\r\n    // handleFocusProject = () => {\r\n    //     console.log('focus ....', this.typeList);\r\n    // }\r\n    // handleChangeType = (value, index) => {\r\n    //     let data = [...this.state.data];\r\n    //     let item = { ...data[index] };\r\n    //     item.typeId = value;\r\n    //     data[index] = item;\r\n    //     this.setState({ data });\r\n    // }\r\n\r\n    // handleBlurType = () => {\r\n    //     console.log('blur ---- ', this.typeList);\r\n    // }\r\n\r\n    // handleFocusType = () => {\r\n    //     console.log('focus ....', this.typeList);\r\n    // }\r\n\r\n    // onChangeTimeIn = (time, timestring, index) => {\r\n    //     // console.log(\"ActionsWork -> onChangeTimeIn -> time, timestring, index\", time, timestring, index)\r\n    //     let data = [...this.state.data];\r\n    //     let item = { ...data[index] };\r\n    //     item.workTimeIn = time;\r\n    //     data[index] = item;\r\n    //     this.setState({ data });\r\n    // }\r\n    // onChangeTimeOut = (time, timestring, index) => {\r\n    //     console.log(\"ActionsWork -> onChangeTimeOut -> time, timestring, index\", time, timestring, index)\r\n    //     let data = [...this.state.data];\r\n    //     let item = { ...data[index] };\r\n    //     item.workTimeOut = time;\r\n    //     data[index] = item;\r\n    //     this.setState({ data });\r\n    // }\r\n\r\n    // calManHours = () => {\r\n\r\n    // }\r\n\r\n    // handleAddData = () => {\r\n    //     console.log(\"ActionsWork -> handleAddData -> handleAddData\")\r\n    //     this.state.data.push({\r\n    //         projectId: null,\r\n    //         typeId: null,\r\n    //         workDate: null,\r\n    //         workDetail: null,\r\n    //         workUrl: null,\r\n    //         workManhour: null,\r\n    //         workTimeIn: null,\r\n    //         workTimeOut: null,\r\n    //     })\r\n    //     let a = this.state.data\r\n    //     this.setState({ data: a })\r\n    //     console.log(\"ActionsWork -> handleAddData ->  this.state.data\", this.state.data)\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (<>\r\n\r\n            <div className=\"App\">\r\n                <div id=\"boxType\" className=\"container-box-content\">\r\n                    <div className=\"row wrap-container\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item href=\"/jobtype\">\r\n                                <HomeOutlined />\r\n                                <span className=\"breadcrum-custom\">Job Type</span>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item href=\"#\">\r\n                                {this.props.match.params.action === 'create' ? <span className=\"breadcrum-custom\">  Create Job Type</span> : null}\r\n                                {this.props.match.params.action === 'edit' ? <span className=\"breadcrum-custom\">  Edit</span> : null}\r\n\r\n                            </Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <div className=\"wrap-content\">\r\n                            <div className=\"box-action\">\r\n                                <div className=\"box-title-search\">\r\n\r\n\r\n                                    {this.state.data.map((data, i) => {\r\n                                        console.log(\"ActionsWork -> render -> data\", data)\r\n                                        console.log(\"ActionsWork -> render -> i\", i);\r\n                                        return (\r\n                                            <>\r\n                                                <div className=\"box-action-content\">\r\n                                                    {this.props.match.params.action === 'create' ? <p className=\"font-size-search\">Create Job Type</p> : null}\r\n                                                    {this.props.match.params.action === 'edit' ? <p className=\"font-size-search\">Edit Work</p> : null}\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n\r\n                                                        </div>\r\n\r\n\r\n                                                    </div>\r\n                                                    {/* Job Type Name */}\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtManHours\">Job Type Name<span style={{ color: 'red' }}>*</span></label></div>\r\n                                                        <input type=\"text\" class=\"form-control col-3\" id=\"txtManHours\" />\r\n                                                        {/* <div class=\"col-3\">\r\n                                                            <button type=\"button\" class=\"btn btn-custom-color\" style={{ marginRight: 20 }} onClick={this.calManHours}>Calculate</button></div> */}\r\n                                                    </div>\r\n\r\n                                                    {/* Code */}\r\n                                                    <div className=\"row form-group\">\r\n                                                        <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtUrl\">Code <span style={{ color: 'red' }}>*</span></label></div>\r\n                                                        <input type=\"text\" class=\"form-control col-3\" id=\"txtUrl\" />\r\n\r\n                                                    </div>\r\n\r\n                                                    <div style={{ textAlign: 'right' }}>\r\n                                                        <p><span style={{ color: 'red' }}>*</span> Items marked with an asterisk are required</p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                {/* <hr className=\"hr-action\"></hr> */}\r\n                                            </>\r\n                                        )\r\n\r\n                                    })}\r\n                                    <br />\r\n                                    <div>\r\n                                        {/* <button type=\"button\" class=\"btn btn-add-work\" onClick={this.handleAddData}><span className=\"btn-add-work-icon\"><PlusOutlined /></span></button> */}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-12\" style={{ textAlign: 'right' }}>\r\n                                        <button type=\"button\" class=\"btn btn-secondary\" style={{ marginRight: 20 }} onClick={this.handleReset}>CANCEL</button>\r\n                                        {/* <button type=\"button\" class=\"btn btn-primary\" style={{ marginRight: 80 }}>CREATE</button> */}\r\n\r\n                                        <button type=\"button\" class=\"btn btn-custom-color\" style={{ marginRight: 20 }} onClick={this.openModal}>CREATE</button>\r\n                                        {/* <Button variant=\"custom\" style={{ marginRight: 70 }} onClick={this.openModal}>CREATE\r\n                     </Button> */}\r\n                                    </div>\r\n\r\n                                    <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                                        <Modal.Header closeButton style={{ color: \"#bb1717\" }}>\r\n                                            <Modal.Title style={{ padding: \"3rem 11rem\" }}>Confirm</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body style={{ textAlign: \"center\" }}>Please confirm your configuration.</Modal.Body>\r\n\r\n                                        <Modal.Footer style={{ borderTop: \"3px\" }} style={{ justifyContent: \"center\" }}>\r\n                                            <Button variant=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                                                ON</Button>\r\n\r\n                                            <Button variant=\"primary\" onClick={this.openModal}>\r\n                                                YES</Button>\r\n\r\n                                        </Modal.Footer>\r\n\r\n                                    </Modal>\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ActionJobType;\r\n","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\create-edit.js",["262","263","264","265","266","267","268","269","270","271","272","273"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, TimePicker, Select } from 'antd';\r\nimport { HomeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nconst format = 'HH:mm';\r\nconst Option = Select.Option;\r\n\r\nlet data = [{\r\n    projectId: null,\r\n    typeId: null,\r\n    workDate: null,\r\n    workDetail: null,\r\n    workUrl: null,\r\n    workManhour: null,\r\n    workTimeIn: null,\r\n    workTimeOut: null,\r\n}]\r\n\r\nlet projectList = [];\r\nlet typeList = [];\r\nlet timeHours = [];\r\nlet timeMin = [];\r\n\r\nclass ActionsProject extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        // console.log(\"ActionsWork -> constructor -> props\", props.match.params.action)\r\n        // let param = useParams();\r\n        // console.log(\"param\", param)\r\n        // console.log(\"ActionsWork -> constructor -> props\", props)\r\n        super(props);\r\n        this.state = {\r\n            data: [{\r\n                projectId: null,\r\n                typeId: null,\r\n                workDate: null,\r\n                workDetail: null,\r\n                workUrl: null,\r\n                workManhour: null,\r\n                workTimeIn: null,\r\n                workTimeOut: null,\r\n            }],\r\n            projectList: [],\r\n            typeList: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // console.log(\"ActionsWork -> componentDidMount -> s\", this.state.data)\r\n        this.getTypeList();\r\n        this.getProjectList();\r\n        this.setDdlTime();\r\n\r\n\r\n    }\r\n\r\n    getProjectList() {\r\n        this.setState({\r\n            projectList: [{\r\n                projectId: '001',\r\n                projectName: 'test1'\r\n            },\r\n            {\r\n                projectId: '002',\r\n                projectName: 'test2'\r\n            }]\r\n        })\r\n\r\n        let resData = [{\r\n            projectId: '001',\r\n            projectName: 'test1'\r\n        },\r\n        {\r\n            projectId: '002',\r\n            projectName: 'test2'\r\n        }]\r\n        let temp = [];\r\n        for (let i = 0; i < resData.length; i++) {\r\n            temp.push(<Option key={resData[i].projectId}>{resData[i].projectName}</Option>);\r\n        }\r\n\r\n        this.projectList = temp\r\n    }\r\n\r\n    getTypeList() {\r\n        this.setState({\r\n            jobtypeList: [{\r\n                typeId: '001',\r\n                typeName: 'test1'\r\n            },\r\n            {\r\n                typeId: '002',\r\n                typeName: 'test2'\r\n            }]\r\n        })\r\n\r\n        let resData = [{\r\n            typeId: '001',\r\n            typeName: 'test1'\r\n        },\r\n        {\r\n            typeId: '002',\r\n            typeName: 'test2'\r\n        }]\r\n        let temp = []\r\n        for (let i = 0; i < resData.length; i++) {\r\n            temp.push(<Option key={resData[i].typeId}>{resData[i].typeName}</Option>);\r\n            console.log(\"ActionsWork -> getJobtypeList -> resData[i].typeId\", resData[i].typeId)\r\n        }\r\n\r\n        this.typeList = temp\r\n    }\r\n\r\n    handleProjectChange = (value, i) => {\r\n        console.log(\"ActionsWork -> handleProjectChange -> i\", i)\r\n        console.log(\"ActionsWork -> handleProjectChange -> value\", value)\r\n\r\n        // let temp = _.cloneDeep(this.state.filter)\r\n        // temp.projectId = value\r\n        // this.setState({\r\n        //     filter: {\r\n        //         dateFrom: temp.dateFrom,\r\n        //         dateTo: temp.dateTo,\r\n        //         typeId: temp.typeId,\r\n        //         projectId: value\r\n        //     }\r\n        // });\r\n    }\r\n    handleTypeChange = (event) => {\r\n\r\n        let temp = _.cloneDeep(this.state.filter)\r\n        temp.typeId = event.target.value\r\n        this.setState({\r\n            filter: {\r\n                dateFrom: temp.dateFrom,\r\n                dateTo: temp.dateTo,\r\n                typeId: temp.typeId,\r\n                projectId: temp.projectId\r\n            }\r\n        });\r\n    }\r\n\r\n    setDdlTime() {\r\n        // let maxMin = 60;\r\n        // let maxHours = 24;\r\n\r\n        // let tmpMin = []\r\n        // let tmpHours = []\r\n        // for (let i = 0; i < maxHours; i++) {\r\n        //     tmpMin.push()\r\n        // }\r\n\r\n\r\n        // TODO :: get hours\r\n        var hours = []; // time array\r\n        var th = 0; // start time\r\n        //loop to increment the time and push results in array\r\n        for (var i = 0; th < 24 * 60; i++) {\r\n            var hh = Math.floor(th / 60); // gething hours of day in 0-24 format\r\n            var mm = (th % 60); // gething minutes of the hour in 0-55 format\r\n            hours[i] = (\"0\" + (hh)).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n            th++;\r\n        }\r\n        hours = _.uniq(hours)\r\n        console.log(\"ActionsWork -> setDdlTime -> hours\", hours)\r\n        // timeHours\r\n        // timeMin\r\n\r\n        // TODO :: get min\r\n        // var min = []; // time array\r\n        // var tm = 0;\r\n        // for (var j = 0; th < 60 *60; j++) {\r\n        //     // var hh = Math.floor(th / 60); // gething hours of day in 0-24 format\r\n        //     var mm = (tm % 60); // gething minutes of the hour in 0-55 format\r\n        //     min[i] = (\"0\" + (mm)).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n        //     tm +=10;\r\n        // }\r\n        // min = _.uniq(min)\r\n        // console.log(\"ActionsWork -> setDdlTime -> min\", min)\r\n        // timeHours\r\n    }\r\n\r\n    // TODO :: Select\r\n\r\n    handleChangeProject = (value, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.projectId = value;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleBlurProject = () => {\r\n        console.log('blur ---- ', this.typeList);\r\n    }\r\n\r\n    handleFocusProject = () => {\r\n        console.log('focus ....', this.typeList);\r\n    }\r\n    handleChangeType = (value, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.typeId = value;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleBlurType = () => {\r\n        console.log('blur ---- ', this.typeList);\r\n    }\r\n\r\n    handleFocusType = () => {\r\n        console.log('focus ....', this.typeList);\r\n    }\r\n\r\n    onChangeTimeIn = (time, timestring, index) => {\r\n        // console.log(\"ActionsWork -> onChangeTimeIn -> time, timestring, index\", time, timestring, index)\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeIn = time;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n    onChangeTimeOut = (time, timestring, index) => {\r\n        console.log(\"ActionsWork -> onChangeTimeOut -> time, timestring, index\", time, timestring, index)\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeOut = time;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n\r\n    calManHours = () => {\r\n\r\n    }\r\n\r\n    handleAddData = () => {\r\n        console.log(\"ActionsWork -> handleAddData -> handleAddData\")\r\n        this.state.data.push({\r\n            projectId: null,\r\n            typeId: null,\r\n            workDate: null,\r\n            workDetail: null,\r\n            workUrl: null,\r\n            workManhour: null,\r\n            workTimeIn: null,\r\n            workTimeOut: null,\r\n        })\r\n        let a = this.state.data\r\n        this.setState({ data: a })\r\n        console.log(\"ActionsWork -> handleAddData ->  this.state.data\", this.state.data)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<>\r\n\r\n            <div className=\"App\">\r\n                <div id=\"boxType\" className=\"container-box-content\">\r\n                    <div className=\"row wrap-container\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item href=\"/project\">\r\n                                <HomeOutlined />\r\n                                <span className=\"breadcrum-custom\">project</span>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item href=\"#\">\r\n                                {this.props.match.params.action === 'create' ? <span className=\"breadcrum-custom\">create project</span> : null}\r\n                                {this.props.match.params.action === 'edit' ? <span className=\"breadcrum-custom\">  Edit</span> : null}\r\n                                {this.props.match.params.action === 'view' ? <span className=\"breadcrum-custom\">  View</span> : null}\r\n                            </Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <div className=\"wrap-content\">\r\n                            <div className=\"box-action\">\r\n                                <div className=\"box-title-search\">\r\n\r\n\r\n                                </div>\r\n                                {/* <div className=\"box-content\">\r\n                                    <div className=\"box-action-date\">\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"ddlDate\">Date : <span style={{ color: 'red' }}>*</span></label></div>\r\n                                            <div className=\"col-5\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                                <DateBox\r\n                                                    value={null}\r\n                                                    type=\"date\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                {/* <hr className=\"hr-action\"></hr> */}\r\n                                <div style={{ textAlign: 'right' }}>\r\n                                    {/* <p><span style={{ color: 'red' }}>*</span> Items marked with an asterisk are required</p> */}\r\n                                </div>\r\n                                {this.state.data.map((data, i) => {\r\n                                    console.log(\"ActionsWork -> render -> data\", data)\r\n                                    console.log(\"ActionsWork -> render -> i\", i);\r\n                                    return (\r\n                                        <>\r\n                                            <div className=\"box-action-content text-center\">\r\n                                                {this.props.match.params.action === 'create' ? <p className=\"font-size-search\">Create Project</p> : null}\r\n                                                {this.props.match.params.action === 'edit' ? <p className=\"font-size-search\">Edit Work</p> : null}\r\n                                                {this.props.match.params.action === 'view' ? <p className=\"font-size-search\">View Work</p> : null}\r\n\r\n                                                {/* Start Date */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"ddlStartDate\">Start Date : <span style={{ color: 'red' }}>*</span></label></div>\r\n                                                    <div className=\"col-4\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                                        <DateBox\r\n                                                            value={null}\r\n                                                            type=\"date\" />\r\n                                                    </div>\r\n\r\n                                                    {/* <Select\r\n                                                            showSearch\r\n                                                            style={{ width: 200 }}\r\n                                                            placeholder=\"Please selete project\"\r\n                                                            optionFilterProp=\"children\"\r\n                                                            onChange={(e) => { this.handleChangeProject(e, i) }}\r\n                                                            onFocus={(e) => { this.handleFocusProject(e, i) }}\r\n                                                            onBlur={(e) => { this.handleBlurProject(e, i) }}\r\n                                                            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                                            value={data.projectId}\r\n                                                        >\r\n                                                            {this.projectList}\r\n                                                        </Select> */}\r\n                                                </div>\r\n\r\n                                                {/* End Date */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"ddlEndDate\">End Date<span style={{ color: 'red' }}>*</span></label></div>\r\n                                                    <div className=\"col-4\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                                        <DateBox\r\n                                                            value={null}\r\n                                                            type=\"date\" />\r\n                                                    </div> </div>\r\n\r\n                                                {/* Project */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"ddlProject\">Project<span style={{ color: 'red' }}>*</span></label></div>\r\n                                                    <input type=\"text\" class=\"form-control col-4\" id=\"txtProject\" />\r\n\r\n                                                </div>\r\n\r\n                                                {/* WorkOut */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"ddlPhase\">Phase<span style={{ color: 'red' }}>*</span></label></div>\r\n                                                    <input type=\"text\" class=\"form-control col-5\" id=\"txtPhase\" />\r\n                                                </div>\r\n\r\n                                                {/* man hours */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtManDay\">Man Day<span style={{ color: 'red' }}></span></label></div>\r\n                                                    <input type=\"text\" class=\"form-control col-5\" id=\"txtManDay\" />\r\n                                                    <div class=\"col-3\">\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                {/* Detail */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtDetail\">Detail <span style={{ color: 'red' }}>*</span></label></div>\r\n                                                    <textarea rows=\"3\" type=\"text\" class=\"form-control col-5\" id=\"txtDetail\" />\r\n\r\n                                                </div>\r\n\r\n                                                {/* CustomerEmail */}\r\n                                                <div className=\"row form-group\">\r\n                                                    <div className=\"col-4\" style={{ textAlign: 'right' }}><label for=\"txtCustomerEmail\">Customer Email<span style={{ color: 'red' }}></span></label></div>\r\n                                                    <input type=\"text\" class=\"form-control col-5\" id=\"txtCustomerEmail\" />\r\n\r\n                                                </div>\r\n                                                <div style={{ textAlign: 'right' }}>\r\n                                                    <p><span style={{ color: 'red' }}>*</span> Items marked with an asterisk are required</p> \r\n                                            </div></div>\r\n\r\n   <div className=\"row form-group\">\r\n                                    <div className=\"col-12\" style={{ textAlign: 'right' }}>\r\n                                        <button type=\"button\" class=\"btn btn-secondary\" style={{ marginRight: 20 }} onClick={this.handleReset}>CANCEL</button>\r\n                                        {/* <button type=\"button\" class=\"btn btn-primary\" style={{ marginRight: 80 }}>CREATE</button> */}\r\n\r\n                                        <button type=\"button\" class=\"btn btn-custom-color\" style={{ marginRight: 20 }} onClick={this.openModal}>CREATE</button>\r\n                                        {/* <Button variant=\"custom\" style={{ marginRight: 70 }} onClick={this.openModal}>CREATE\r\n                     </Button> */}\r\n                                    </div>  </div> \r\n                                        </>\r\n                                    )\r\n\r\n                                })}\r\n                                <br />\r\n                                <div>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"row form-group\">\r\n                                <div className=\"col-12\" style={{ textAlign: 'right' }}>\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" style={{ marginRight: 20 }} onClick={this.handleReset}>CANCEL</button>\r\n\r\n                                    <button type=\"button\" class=\"btn btn-custom-color\" style={{ marginRight: 70 }} onClick={this.openModal}>CREATE</button>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                                <Modal.Header closeButton style={{ color: \"#bb1717\" }}>\r\n                                    <Modal.Title style={{ padding: \"3rem 11rem\" }}>Confirm</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body style={{ textAlign: \"center\" }}>Please confirm your configuration.</Modal.Body>\r\n\r\n                                <Modal.Footer style={{ borderTop: \"3px\" }} style={{ justifyContent: \"center\" }}>\r\n                                    <Button variant=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                                        ON</Button>\r\n\r\n                                    <Button variant=\"primary\" onClick={this.openModal}>\r\n                                        YES</Button>\r\n\r\n                                </Modal.Footer>\r\n\r\n                            </Modal>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            {/* </div> */}\r\n        </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ActionsProject;\r\n","C:\\Users\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\confirm_popup.js",["274","275","276","277","278","279","280","281","282","283"],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":11},{"ruleId":"288","severity":1,"message":"292","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":14},{"ruleId":"288","severity":1,"message":"293","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":12},{"ruleId":"288","severity":1,"message":"294","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":17},{"ruleId":"295","severity":1,"message":"296","line":11,"column":1,"nodeType":"297","endLine":21,"endColumn":2},{"ruleId":"288","severity":1,"message":"298","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"299","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":15},{"ruleId":"288","severity":1,"message":"300","line":3,"column":17,"nodeType":"290","messageId":"291","endLine":3,"endColumn":23},{"ruleId":"288","severity":1,"message":"301","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":14},{"ruleId":"288","severity":1,"message":"302","line":15,"column":5,"nodeType":"290","messageId":"291","endLine":15,"endColumn":9},{"ruleId":"288","severity":1,"message":"303","line":26,"column":5,"nodeType":"290","messageId":"291","endLine":26,"endColumn":16},{"ruleId":"288","severity":1,"message":"304","line":27,"column":5,"nodeType":"290","messageId":"291","endLine":27,"endColumn":13},{"ruleId":"288","severity":1,"message":"305","line":28,"column":5,"nodeType":"290","messageId":"291","endLine":28,"endColumn":14},{"ruleId":"288","severity":1,"message":"306","line":29,"column":5,"nodeType":"290","messageId":"291","endLine":29,"endColumn":12},{"ruleId":"288","severity":1,"message":"307","line":167,"column":17,"nodeType":"290","messageId":"291","endLine":167,"endColumn":19},{"ruleId":"288","severity":1,"message":"308","line":9,"column":10,"nodeType":"290","messageId":"291","endLine":9,"endColumn":22},{"ruleId":"288","severity":1,"message":"309","line":11,"column":8,"nodeType":"290","messageId":"291","endLine":11,"endColumn":19},{"ruleId":"288","severity":1,"message":"310","line":13,"column":27,"nodeType":"290","messageId":"291","endLine":13,"endColumn":33},{"ruleId":"288","severity":1,"message":"311","line":13,"column":35,"nodeType":"290","messageId":"291","endLine":13,"endColumn":41},{"ruleId":"288","severity":1,"message":"312","line":13,"column":43,"nodeType":"290","messageId":"291","endLine":13,"endColumn":48},{"ruleId":"313","severity":1,"message":"314","line":153,"column":74,"nodeType":"315","endLine":153,"endColumn":110},{"ruleId":"295","severity":1,"message":"296","line":3,"column":1,"nodeType":"297","endLine":13,"endColumn":2},{"ruleId":"288","severity":1,"message":"309","line":12,"column":8,"nodeType":"290","messageId":"291","endLine":12,"endColumn":19},{"ruleId":"288","severity":1,"message":"310","line":14,"column":27,"nodeType":"290","messageId":"291","endLine":14,"endColumn":33},{"ruleId":"288","severity":1,"message":"311","line":14,"column":35,"nodeType":"290","messageId":"291","endLine":14,"endColumn":41},{"ruleId":"288","severity":1,"message":"312","line":14,"column":43,"nodeType":"290","messageId":"291","endLine":14,"endColumn":48},{"ruleId":"316","severity":1,"message":"317","line":44,"column":72,"nodeType":"318","endLine":44,"endColumn":75},{"ruleId":"313","severity":1,"message":"314","line":145,"column":74,"nodeType":"315","endLine":145,"endColumn":110},{"ruleId":"288","severity":1,"message":"298","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"299","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":15},{"ruleId":"288","severity":1,"message":"310","line":8,"column":27,"nodeType":"290","messageId":"291","endLine":8,"endColumn":33},{"ruleId":"288","severity":1,"message":"311","line":8,"column":35,"nodeType":"290","messageId":"291","endLine":8,"endColumn":41},{"ruleId":"288","severity":1,"message":"312","line":8,"column":43,"nodeType":"290","messageId":"291","endLine":8,"endColumn":48},{"ruleId":"288","severity":1,"message":"319","line":9,"column":46,"nodeType":"290","messageId":"291","endLine":9,"endColumn":57},{"ruleId":"288","severity":1,"message":"320","line":13,"column":24,"nodeType":"290","messageId":"291","endLine":13,"endColumn":36},{"ruleId":"321","severity":1,"message":"322","line":209,"column":62,"nodeType":"323","messageId":"324","endLine":209,"endColumn":64},{"ruleId":"321","severity":1,"message":"322","line":210,"column":92,"nodeType":"323","messageId":"324","endLine":210,"endColumn":94},{"ruleId":"321","severity":1,"message":"322","line":224,"column":86,"nodeType":"323","messageId":"324","endLine":224,"endColumn":88},{"ruleId":"313","severity":1,"message":"314","line":251,"column":45,"nodeType":"315","endLine":251,"endColumn":56},{"ruleId":"288","severity":1,"message":"325","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"300","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":16},{"ruleId":"288","severity":1,"message":"326","line":2,"column":18,"nodeType":"290","messageId":"291","endLine":2,"endColumn":22},{"ruleId":"288","severity":1,"message":"327","line":2,"column":24,"nodeType":"290","messageId":"291","endLine":2,"endColumn":30},{"ruleId":"288","severity":1,"message":"328","line":2,"column":32,"nodeType":"290","messageId":"291","endLine":2,"endColumn":35},{"ruleId":"288","severity":1,"message":"329","line":2,"column":37,"nodeType":"290","messageId":"291","endLine":2,"endColumn":40},{"ruleId":"288","severity":1,"message":"330","line":2,"column":42,"nodeType":"290","messageId":"291","endLine":2,"endColumn":49},{"ruleId":"288","severity":1,"message":"293","line":2,"column":51,"nodeType":"290","messageId":"291","endLine":2,"endColumn":55},{"ruleId":"288","severity":1,"message":"331","line":2,"column":57,"nodeType":"290","messageId":"291","endLine":2,"endColumn":67},{"ruleId":"288","severity":1,"message":"332","line":2,"column":76,"nodeType":"290","messageId":"291","endLine":2,"endColumn":86},{"ruleId":"288","severity":1,"message":"333","line":2,"column":88,"nodeType":"290","messageId":"291","endLine":2,"endColumn":94},{"ruleId":"288","severity":1,"message":"334","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":9},{"ruleId":"288","severity":1,"message":"301","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":14},{"ruleId":"284","replacedBy":"335"},{"ruleId":"286","replacedBy":"336"},{"ruleId":"288","severity":1,"message":"289","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":11},{"ruleId":"288","severity":1,"message":"292","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":14},{"ruleId":"288","severity":1,"message":"293","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":12},{"ruleId":"288","severity":1,"message":"294","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":17},{"ruleId":"295","severity":1,"message":"296","line":14,"column":1,"nodeType":"297","endLine":26,"endColumn":2},{"ruleId":"288","severity":1,"message":"298","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"301","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":14},{"ruleId":"288","severity":1,"message":"302","line":15,"column":5,"nodeType":"290","messageId":"291","endLine":15,"endColumn":9},{"ruleId":"288","severity":1,"message":"303","line":26,"column":5,"nodeType":"290","messageId":"291","endLine":26,"endColumn":16},{"ruleId":"288","severity":1,"message":"304","line":27,"column":5,"nodeType":"290","messageId":"291","endLine":27,"endColumn":13},{"ruleId":"288","severity":1,"message":"305","line":28,"column":5,"nodeType":"290","messageId":"291","endLine":28,"endColumn":14},{"ruleId":"288","severity":1,"message":"306","line":29,"column":5,"nodeType":"290","messageId":"291","endLine":29,"endColumn":12},{"ruleId":"288","severity":1,"message":"307","line":178,"column":17,"nodeType":"290","messageId":"291","endLine":178,"endColumn":19},{"ruleId":"313","severity":1,"message":"314","line":415,"column":84,"nodeType":"315","endLine":415,"endColumn":120},{"ruleId":"288","severity":1,"message":"298","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"299","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":15},{"ruleId":"288","severity":1,"message":"310","line":8,"column":27,"nodeType":"290","messageId":"291","endLine":8,"endColumn":33},{"ruleId":"288","severity":1,"message":"311","line":8,"column":35,"nodeType":"290","messageId":"291","endLine":8,"endColumn":41},{"ruleId":"288","severity":1,"message":"312","line":8,"column":43,"nodeType":"290","messageId":"291","endLine":8,"endColumn":48},{"ruleId":"288","severity":1,"message":"319","line":9,"column":46,"nodeType":"290","messageId":"291","endLine":9,"endColumn":57},{"ruleId":"288","severity":1,"message":"320","line":13,"column":24,"nodeType":"290","messageId":"291","endLine":13,"endColumn":36},{"ruleId":"321","severity":1,"message":"322","line":212,"column":62,"nodeType":"323","messageId":"324","endLine":212,"endColumn":64},{"ruleId":"321","severity":1,"message":"322","line":213,"column":92,"nodeType":"323","messageId":"324","endLine":213,"endColumn":94},{"ruleId":"321","severity":1,"message":"322","line":227,"column":86,"nodeType":"323","messageId":"324","endLine":227,"endColumn":88},{"ruleId":"313","severity":1,"message":"314","line":254,"column":45,"nodeType":"315","endLine":254,"endColumn":56},{"ruleId":"295","severity":1,"message":"296","line":3,"column":1,"nodeType":"297","endLine":13,"endColumn":2},{"ruleId":"288","severity":1,"message":"298","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"337","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":28},{"ruleId":"288","severity":1,"message":"338","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":31},{"ruleId":"288","severity":1,"message":"339","line":7,"column":10,"nodeType":"290","messageId":"291","endLine":7,"endColumn":27},{"ruleId":"288","severity":1,"message":"340","line":11,"column":8,"nodeType":"290","messageId":"291","endLine":11,"endColumn":15},{"ruleId":"288","severity":1,"message":"310","line":13,"column":27,"nodeType":"290","messageId":"291","endLine":13,"endColumn":33},{"ruleId":"288","severity":1,"message":"311","line":13,"column":35,"nodeType":"290","messageId":"291","endLine":13,"endColumn":41},{"ruleId":"288","severity":1,"message":"312","line":13,"column":43,"nodeType":"290","messageId":"291","endLine":13,"endColumn":48},{"ruleId":"288","severity":1,"message":"341","line":14,"column":8,"nodeType":"290","messageId":"291","endLine":14,"endColumn":16},{"ruleId":"288","severity":1,"message":"342","line":14,"column":20,"nodeType":"290","messageId":"291","endLine":14,"endColumn":36},{"ruleId":"288","severity":1,"message":"343","line":14,"column":38,"nodeType":"290","messageId":"291","endLine":14,"endColumn":44},{"ruleId":"288","severity":1,"message":"319","line":14,"column":46,"nodeType":"290","messageId":"291","endLine":14,"endColumn":57},{"ruleId":"288","severity":1,"message":"344","line":14,"column":59,"nodeType":"290","messageId":"291","endLine":14,"endColumn":71},{"ruleId":"288","severity":1,"message":"345","line":14,"column":73,"nodeType":"290","messageId":"291","endLine":14,"endColumn":80},{"ruleId":"288","severity":1,"message":"346","line":14,"column":82,"nodeType":"290","messageId":"291","endLine":14,"endColumn":94},{"ruleId":"288","severity":1,"message":"347","line":14,"column":96,"nodeType":"290","messageId":"291","endLine":14,"endColumn":102},{"ruleId":"288","severity":1,"message":"320","line":18,"column":24,"nodeType":"290","messageId":"291","endLine":18,"endColumn":36},{"ruleId":"288","severity":1,"message":"348","line":23,"column":7,"nodeType":"290","messageId":"291","endLine":23,"endColumn":16},{"ruleId":"288","severity":1,"message":"349","line":34,"column":7,"nodeType":"290","messageId":"291","endLine":34,"endColumn":20},{"ruleId":"288","severity":1,"message":"350","line":39,"column":7,"nodeType":"290","messageId":"291","endLine":39,"endColumn":19},{"ruleId":"288","severity":1,"message":"351","line":178,"column":14,"nodeType":"290","messageId":"291","endLine":178,"endColumn":24},{"ruleId":"313","severity":1,"message":"314","line":288,"column":70,"nodeType":"315","endLine":288,"endColumn":106},{"ruleId":"288","severity":1,"message":"298","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"337","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":28},{"ruleId":"288","severity":1,"message":"338","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":31},{"ruleId":"288","severity":1,"message":"339","line":7,"column":10,"nodeType":"290","messageId":"291","endLine":7,"endColumn":27},{"ruleId":"288","severity":1,"message":"340","line":12,"column":8,"nodeType":"290","messageId":"291","endLine":12,"endColumn":15},{"ruleId":"288","severity":1,"message":"310","line":14,"column":27,"nodeType":"290","messageId":"291","endLine":14,"endColumn":33},{"ruleId":"288","severity":1,"message":"311","line":14,"column":35,"nodeType":"290","messageId":"291","endLine":14,"endColumn":41},{"ruleId":"288","severity":1,"message":"312","line":14,"column":43,"nodeType":"290","messageId":"291","endLine":14,"endColumn":48},{"ruleId":"288","severity":1,"message":"341","line":15,"column":8,"nodeType":"290","messageId":"291","endLine":15,"endColumn":16},{"ruleId":"288","severity":1,"message":"342","line":15,"column":20,"nodeType":"290","messageId":"291","endLine":15,"endColumn":36},{"ruleId":"288","severity":1,"message":"343","line":15,"column":38,"nodeType":"290","messageId":"291","endLine":15,"endColumn":44},{"ruleId":"288","severity":1,"message":"319","line":15,"column":46,"nodeType":"290","messageId":"291","endLine":15,"endColumn":57},{"ruleId":"288","severity":1,"message":"344","line":15,"column":59,"nodeType":"290","messageId":"291","endLine":15,"endColumn":71},{"ruleId":"288","severity":1,"message":"345","line":15,"column":73,"nodeType":"290","messageId":"291","endLine":15,"endColumn":80},{"ruleId":"288","severity":1,"message":"346","line":15,"column":82,"nodeType":"290","messageId":"291","endLine":15,"endColumn":94},{"ruleId":"288","severity":1,"message":"347","line":15,"column":96,"nodeType":"290","messageId":"291","endLine":15,"endColumn":102},{"ruleId":"288","severity":1,"message":"320","line":19,"column":24,"nodeType":"290","messageId":"291","endLine":19,"endColumn":36},{"ruleId":"288","severity":1,"message":"348","line":24,"column":7,"nodeType":"290","messageId":"291","endLine":24,"endColumn":16},{"ruleId":"288","severity":1,"message":"349","line":35,"column":7,"nodeType":"290","messageId":"291","endLine":35,"endColumn":20},{"ruleId":"288","severity":1,"message":"350","line":40,"column":7,"nodeType":"290","messageId":"291","endLine":40,"endColumn":19},{"ruleId":"288","severity":1,"message":"351","line":179,"column":14,"nodeType":"290","messageId":"291","endLine":179,"endColumn":24},{"ruleId":"313","severity":1,"message":"314","line":286,"column":70,"nodeType":"315","endLine":286,"endColumn":106},{"ruleId":"288","severity":1,"message":"325","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"326","line":2,"column":18,"nodeType":"290","messageId":"291","endLine":2,"endColumn":22},{"ruleId":"288","severity":1,"message":"327","line":2,"column":24,"nodeType":"290","messageId":"291","endLine":2,"endColumn":30},{"ruleId":"288","severity":1,"message":"328","line":2,"column":32,"nodeType":"290","messageId":"291","endLine":2,"endColumn":35},{"ruleId":"288","severity":1,"message":"329","line":2,"column":37,"nodeType":"290","messageId":"291","endLine":2,"endColumn":40},{"ruleId":"288","severity":1,"message":"330","line":2,"column":42,"nodeType":"290","messageId":"291","endLine":2,"endColumn":49},{"ruleId":"288","severity":1,"message":"293","line":2,"column":51,"nodeType":"290","messageId":"291","endLine":2,"endColumn":55},{"ruleId":"288","severity":1,"message":"331","line":2,"column":57,"nodeType":"290","messageId":"291","endLine":2,"endColumn":67},{"ruleId":"288","severity":1,"message":"332","line":2,"column":76,"nodeType":"290","messageId":"291","endLine":2,"endColumn":86},{"ruleId":"288","severity":1,"message":"333","line":2,"column":88,"nodeType":"290","messageId":"291","endLine":2,"endColumn":94},{"ruleId":"288","severity":1,"message":"334","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":9},{"ruleId":"288","severity":1,"message":"301","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":14},{"ruleId":"288","severity":1,"message":"298","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"340","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":15},{"ruleId":"288","severity":1,"message":"334","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":9},{"ruleId":"288","severity":1,"message":"331","line":8,"column":22,"nodeType":"290","messageId":"291","endLine":8,"endColumn":32},{"ruleId":"288","severity":1,"message":"333","line":8,"column":34,"nodeType":"290","messageId":"291","endLine":8,"endColumn":40},{"ruleId":"288","severity":1,"message":"352","line":9,"column":24,"nodeType":"290","messageId":"291","endLine":9,"endColumn":36},{"ruleId":"288","severity":1,"message":"301","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":14},{"ruleId":"313","severity":1,"message":"314","line":341,"column":84,"nodeType":"315","endLine":341,"endColumn":120},{"ruleId":"288","severity":1,"message":"298","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"331","line":8,"column":22,"nodeType":"290","messageId":"291","endLine":8,"endColumn":32},{"ruleId":"288","severity":1,"message":"352","line":9,"column":24,"nodeType":"290","messageId":"291","endLine":9,"endColumn":36},{"ruleId":"288","severity":1,"message":"301","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":14},{"ruleId":"288","severity":1,"message":"353","line":12,"column":7,"nodeType":"290","messageId":"291","endLine":12,"endColumn":13},{"ruleId":"288","severity":1,"message":"302","line":15,"column":5,"nodeType":"290","messageId":"291","endLine":15,"endColumn":9},{"ruleId":"288","severity":1,"message":"303","line":26,"column":5,"nodeType":"290","messageId":"291","endLine":26,"endColumn":16},{"ruleId":"288","severity":1,"message":"304","line":27,"column":5,"nodeType":"290","messageId":"291","endLine":27,"endColumn":13},{"ruleId":"288","severity":1,"message":"305","line":28,"column":5,"nodeType":"290","messageId":"291","endLine":28,"endColumn":14},{"ruleId":"288","severity":1,"message":"306","line":29,"column":5,"nodeType":"290","messageId":"291","endLine":29,"endColumn":12},{"ruleId":"288","severity":1,"message":"307","line":174,"column":17,"nodeType":"290","messageId":"291","endLine":174,"endColumn":19},{"ruleId":"313","severity":1,"message":"314","line":420,"column":76,"nodeType":"315","endLine":420,"endColumn":112},{"ruleId":"288","severity":1,"message":"354","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"325","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"334","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":9},{"ruleId":"288","severity":1,"message":"301","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":14},{"ruleId":"288","severity":1,"message":"355","line":5,"column":7,"nodeType":"290","messageId":"291","endLine":5,"endColumn":22},{"ruleId":"288","severity":1,"message":"356","line":6,"column":7,"nodeType":"290","messageId":"291","endLine":6,"endColumn":22},{"ruleId":"288","severity":1,"message":"357","line":7,"column":7,"nodeType":"290","messageId":"291","endLine":7,"endColumn":18},{"ruleId":"288","severity":1,"message":"358","line":8,"column":7,"nodeType":"290","messageId":"291","endLine":8,"endColumn":23},{"ruleId":"288","severity":1,"message":"359","line":9,"column":7,"nodeType":"290","messageId":"291","endLine":9,"endColumn":16},{"ruleId":"288","severity":1,"message":"360","line":15,"column":11,"nodeType":"290","messageId":"291","endLine":15,"endColumn":16},"no-native-reassign",["361"],"no-negated-in-lhs",["362"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Form' is defined but never used.","'NavLink' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'moment' is defined but never used.","'data' is assigned a value but never used.","'projectList' is assigned a value but never used.","'typeList' is assigned a value but never used.","'timeHours' is assigned a value but never used.","'timeMin' is assigned a value but never used.","'mm' is assigned a value but never used.","'AiTwotoneEye' is defined but never used.","'SearchField' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SearchPanel' is defined but never used.","'UserOutlined' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'List' is defined but never used.","'Avatar' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tooltip' is defined but never used.","'TimePicker' is defined but never used.","'Pagination' is defined but never used.","'Select' is defined but never used.","'_' is defined but never used.",["361"],["362"],"'BsFillCalendarFill' is defined but never used.","'AiOutlineStepBackward' is defined but never used.","'AiFillStepForward' is defined but never used.","'DateBox' is defined but never used.","'TreeList' is defined but never used.","'RemoteOperations' is defined but never used.","'Column' is defined but never used.","'HeaderFilter' is defined but never used.","'Editing' is defined but never used.","'RequiredRule' is defined but never used.","'Lookup' is defined but never used.","'tasksData' is assigned a value but never used.","'employeesData' is assigned a value but never used.","'statusesData' is assigned a value but never used.","'initNewRow' is defined but never used.","'PlusOutlined' is defined but never used.","'format' is assigned a value but never used.","'useEffect' is defined but never used.","'IconExitRegular' is assigned a value but never used.","'IconSaveRegular' is assigned a value but never used.","'IconWarning' is assigned a value but never used.","'IconCheckRegular' is assigned a value but never used.","'IconTrash' is assigned a value but never used.","'isDel' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]