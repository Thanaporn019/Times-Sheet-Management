[{"D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\index.js":"1","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\reportWebVitals.js":"2","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\App.js":"3","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\Layout\\Head.js":"4","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\routes\\index.js":"5","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\create-edit.js":"6","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\create-edit-view.js":"7","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\create-edit.js":"8","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\index.js":"9","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\index.js":"10","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\index.js":"11","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\home\\index.js":"12","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\config.js":"13","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\confirm_popup.js":"14","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\alert_popup.js":"15"},{"size":952,"mtime":1611550006694,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1611550006700,"results":"18","hashOfConfig":"17"},{"size":935,"mtime":1611550006689,"results":"19","hashOfConfig":"17"},{"size":3908,"mtime":1611550006690,"results":"20","hashOfConfig":"17"},{"size":1284,"mtime":1611550006701,"results":"21","hashOfConfig":"17"},{"size":7337,"mtime":1611550006695,"results":"22","hashOfConfig":"17"},{"size":41564,"mtime":1611636935866,"results":"23","hashOfConfig":"17"},{"size":18711,"mtime":1611550006696,"results":"24","hashOfConfig":"17"},{"size":29837,"mtime":1611636844790,"results":"25","hashOfConfig":"17"},{"size":18565,"mtime":1611640310970,"results":"26","hashOfConfig":"17"},{"size":19879,"mtime":1611640285217,"results":"27","hashOfConfig":"17"},{"size":548,"mtime":1611550006699,"results":"28","hashOfConfig":"17"},{"size":465,"mtime":1611550006693,"results":"29","hashOfConfig":"17"},{"size":7213,"mtime":1611550006692,"results":"30","hashOfConfig":"17"},{"size":5536,"mtime":1611550006692,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1brhldy",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\index.js",[],["72","73"],"D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\reportWebVitals.js",[],"D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\App.js",[],"D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\Layout\\Head.js",["74","75","76","77"],"import React, { Component } from 'react';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { IoPersonCircleOutline } from \"react-icons/io5\";\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nclass Head extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div class=\"gx-header-horizontal gx-header-horizontal-dark gx-below-header-horizontal\" style={{position: 'sticky', top: 0, zIndex: 9999}}>\r\n          <header class=\"ant-layout-header gx-header-horizontal-main\">\r\n            <div class=\"gx-container\">\r\n              <div class=\"gx-header-horizontal-main-flex\">\r\n                <div class=\"gx-header-search gx-d-none gx-d-lg-flex\">\r\n                  <div class=\"gx-search-bar gx-lt-icon-search-bar-lg\">\r\n                    <div class=\"gx-form-group\">\r\n                      {/* <input class=\"ant-input\" type=\"search\" placeholder=\"Search in app...\" value=\"\" />\r\n                      <span class=\"gx-search-icon gx-pointer\">\r\n                        <i class=\"icon icon-search\"></i>\r\n                      </span> */}\r\n\r\n                      <span style={{ color: '#fff', fontSize: '22pt', fontWeight: 700 }}>SMARTADMIN</span>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <ul class=\"gx-header-notifications gx-ml-auto\">\r\n                  <li class=\"gx-notify\" style={{fontSize: '20pt'}}>\r\n                <Link to=\"/work\" >\r\n                    <span class=\"gx-pointer gx-d-block\">\r\n                      Work\r\n                    </span>\r\n                </Link>\r\n                  </li>\r\n                  <li class=\"gx-msg\" style={{fontSize: '20pt'}}>\r\n                  <Link to=\"/project\" >\r\n                    <span class=\"gx-pointer gx-status-pos gx-d-block\">\r\n                      Project\r\n                    </span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"gx-msg\">\r\n                  <Link to=\"/jobtype\" style={{fontSize: '20pt'}}>\r\n                    <span class=\"gx-pointer gx-status-pos gx-d-block\">\r\n                      Job type\r\n                    </span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"gx-msg\" style={{color: '#fff'}}>\r\n                    <span style={{color: '#fff', fontSize: 36}} class=\"gx-pointer gx-status-pos gx-d-block\">\r\n                    <IoPersonCircleOutline />\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </header>\r\n        </div>\r\n        {/* <Navbar className=\"Navbar-color\" expand=\"lg\" >\r\n          <Navbar.Brand href=\"/\" className=\"Navbar-brand-Style\">SMARTADMIN</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/work\" style={{ marginLeft: \"600px\" }}>work</Nav.Link>\r\n\r\n              <Nav.Link href=\"/projects\" style={{ marginLeft: \"20px\" }}>project</Nav.Link>\r\n\r\n              <Nav.Link href=\"/jobtype\" style={{ marginLeft: \"20px\" }}>job type</Nav.Link>\r\n            </Nav>\r\n\r\n            <Form inline>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Navbar> */}\r\n\r\n        {/* <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#features\">Features</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-info\">Search</Button>\r\n          </Form>\r\n        </Navbar> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Head;","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\routes\\index.js",["78"],"import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from '../pages/home'\r\nimport Project from '../pages/Project'\r\nimport JobType from '../pages/JobType'\r\nimport Work from '../pages/Work'\r\nimport ActionsWork from '../pages/Work/create-edit-view'\r\nimport ActionJobType from '../pages/JobType/create-edit'\r\nimport ActionsProject from '../pages/Project/create-edit'\r\n\r\n\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route exact path=\"/jobtype\" component={JobType} />\r\n    <Route exact path=\"/project\" component={Project} />\r\n    <Route exact path=\"/work\" component={Work} />\r\n    <Route exact path=\"/work/:query?\" render={(props) => <ActionsWork {...props} /> } />\r\n    <Route exact path=\"/project/:query?\" render={(props) => <ActionsProject {...props} /> } />\r\n    <Route exact path=\"/jobtype/:query?\" render={(props) => <ActionJobType {...props} /> } />\r\n    {/* <Route exact path=\"/work/:action?/:workId?\" render={(props) => <ActionsWork {...props} /> } /> */}\r\n    {/* <Route exact path=\"/jobtype/:action?/:typeId\" render={(props) => <ActionJobType {...props} /> } />\r\n    <Route exact path=\"/project/:action?/:projectId\" render={(props) => <ActionsProject {...props} /> } /> */}\r\n   \r\n  </Switch>\r\n)","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\create-edit.js",["79","80","81","82","83","84","85","86","87","88","89"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, TimePicker, Select } from 'antd';\r\nimport { HomeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport configService from '../../config';\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nclass ActionJobType extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        console.log(\"Actionsjobtype -> constructor -> props\", props)\r\n        let query = _.cloneDeep(props.match.params.query);\r\n        let tempQuery = JSON.parse(JSON.stringify(query))\r\n        let param = JSON.parse(tempQuery)\r\n        console.log(\"ActionJobType -> constructor -> param\", param)\r\n        super(props);\r\n        this.state = {\r\n            isPopupSuccess: false, // alert success case\r\n            isPopupError: false,  // alert error case\r\n            isPopupMsg: '',  // alert msg\r\n            isOpen: false, // open popup confirm\r\n            isTypeShowConfirm: '', // ประเภทของ popup : save , del\r\n            isDataPopUp: {}, // ข้อมูลที่ใช้\r\n            isTextMsg: '', // msg ของ Popup\r\n            data: [{\r\n                jobtypeId: null,\r\n                codeId: null,\r\n\r\n            }],\r\n            projectList: [],\r\n            typeList: [],\r\n            params: param\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<>\r\n\r\n            <div className=\"App\">\r\n                <div id=\"boxType\" className=\"container-box-content\">\r\n                    <div className=\"row wrap-container\">\r\n\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item href=\"/jobtype\">\r\n                                <HomeOutlined />\r\n                                <span className=\"breadcrum-custom\">Job Type</span>\r\n                            </Breadcrumb.Item>\r\n                            {/* <Breadcrumb.Item href=\"#\"> */}\r\n                            {this.state.params.action === 'create' ? <span className=\"breadcrum-custom\">  Create Job type</span> : null}\r\n                            {this.state.params.action === 'edit' ? <span className=\"breadcrum-custom\">  Update Job type</span> : null}\r\n\r\n                            {/* </Breadcrumb.Item> */}\r\n                        </Breadcrumb>\r\n\r\n                        <div className=\"wrap-content\">\r\n                            <div className=\"box-action\">\r\n                                <div className=\"box-title-search\">\r\n                                    <div className=\"box-action-content\">\r\n                                        {this.state.params.action === 'create' ? <p className=\"font-size-search\">Create Job type</p> : null}\r\n                                        {this.state.params.action === 'edit' ? <p className=\"font-size-search\">Update Job type</p> : null}\r\n\r\n                                        {/* Job Type Name */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-5\" style={{ textAlign: 'right' }}><label  className=\"title-field\" for=\"txtJob Type Name\">Job Type Name<span style={{ color: 'red' }}>*</span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-3\" id=\"txtJob Type Name\" />\r\n                                        </div>\r\n\r\n\r\n                                        {/* Code */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-5\" style={{ textAlign: 'right' }}><label  className=\"title-field\" for=\"txtCode\">Code <span style={{ color: 'red' }}>*</span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-3\" id=\"txtCode\" />\r\n\r\n                                        </div>\r\n\r\n                                        <div style={{ textAlign: 'right' }}>\r\n\r\n                                            <p className=\"title-field\" ><span style={{ color: 'red' }}>*</span> Items marked with an asterisk are required</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-12\" style={{ textAlign: 'right' }}>\r\n                                        {this.state.params.action !== 'view' ?\r\n                                            <Link to='/jobtype'>\r\n                                                <button  class=\"btn-custom btn-reset\" style={{ marginRight: 20 }} onClick={this.handleReset}>CANCEL</button>\r\n                                            </Link> : null}\r\n\r\n                                        {this.state.params.action !== 'view' ? <button class=\"btn-custom btn-search\" style={{ marginRight: 20 }} onClick={() => {\r\n                                            this.setState({ isOpen: true, isTypeShowConfirm: 'save', isTextMsg: msgPopupTitle.saved, isDataPopUp: this.state.data })\r\n                                        }}>\r\n                                            {this.state.params.action === 'edit' ? 'UPDATE' : 'CREATE'}\r\n                                            </button> : null}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n             {/* POPUP */}\r\n             <AlertPopUp successStatus={this.state.isPopupSuccess} errorStatus={this.state.isPopupError} message={this.state.isPopupMsg}\r\n                clearActive={() => {\r\n                    this.setState({ isPopupError: false })\r\n                    this.setState({ isPopupSuccess: false })\r\n                }} />\r\n\r\n            <ConfirmPopup open={this.state.isOpen} type={this.state.isTypeShowConfirm} text={this.state.isTextMsg} data={this.state.isDataPopUp} del={false}\r\n                onClose={() => { this.setState({ isOpen: false }) }}\r\n                clearActive={(e) => { this.setState({ isOpen: false }) }}\r\n                confirmActive={(e) => {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: false })\r\n                    this.setState({ isPopupSuccess: true })\r\n                    this.setState({ isPopupMsg: this.state.params.action === 'edit'? msgAlertTitle.updated: msgAlertTitle.saved })\r\n                    console.log(\"Work -> render -> e\", e)\r\n                }}\r\n                />\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActionJobType;\r\n","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\create-edit-view.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport DateBox from \"devextreme-react/date-box\";\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, TimePicker, Select } from \"antd\";\r\nimport { HomeOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport configService from \"../../config\";\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nconst format = \"HH:mm A\";\r\nconst Option = Select.Option;\r\n\r\nlet data = [\r\n    {\r\n        projectId: null,\r\n        typeId: null,\r\n        workDate: null,\r\n        workDetail: null,\r\n        workUrl: null,\r\n        workManhour: null,\r\n        workTimeIn: null,\r\n        workTimeOut: null,\r\n    },\r\n];\r\n\r\nlet projectList = [];\r\nlet typeList = [];\r\nlet timeHours = [];\r\nlet timeMin = [];\r\n\r\nclass ActionsWork extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        console.log(\"ActionsWork -> constructor -> props\", props);\r\n        let query = _.cloneDeep(props.match.params.query);\r\n        let tempQuery = JSON.parse(JSON.stringify(query));\r\n        let param = JSON.parse(tempQuery);\r\n\r\n        super(props);\r\n        this.state = {\r\n            isPopupSuccess: false, // alert success case\r\n            isPopupError: false, // alert error case\r\n            isPopupMsg: \"\", // alert msg\r\n            isOpen: false, // open popup confirm\r\n            isTypeShowConfirm: \"\", // ประเภทของ popup : save , del\r\n            isDataPopUp: {}, // ข้อมูลที่ใช้\r\n            isTextMsg: \"\", // msg ของ Popup\r\n            isDelete: false, // ใช้เช็คว่าเป็นการลบไหม\r\n            data: [\r\n                {\r\n                    projectId: null,\r\n                    typeId: null,\r\n                    workDate: null,\r\n                    workDetail: null,\r\n                    workUrl: null,\r\n                    workManhour: null,\r\n                    workTimeIn: null,\r\n                    workTimeOut: null,\r\n                },\r\n            ],\r\n            projectList: [],\r\n            typeList: [],\r\n            params: param,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(\"ActionsWork -> componentDidMount -> s\", this.state.data)\r\n        this.getTypeList();\r\n        this.getProjectList();\r\n        this.setDdlTime();\r\n    }\r\n\r\n    getProjectList() {\r\n        this.setState({\r\n            projectList: [\r\n                {\r\n                    projectId: \"001\",\r\n                    projectName: \"test1\",\r\n                },\r\n                {\r\n                    projectId: \"002\",\r\n                    projectName: \"test2\",\r\n                },\r\n            ],\r\n        });\r\n\r\n        let resData = [\r\n            {\r\n                projectId: \"001\",\r\n                projectName: \"test1\",\r\n            },\r\n            {\r\n                projectId: \"002\",\r\n                projectName: \"test2\",\r\n            },\r\n        ];\r\n        let temp = [];\r\n        for (let i = 0; i < resData.length; i++) {\r\n            temp.push(\r\n                <Option key={resData[i].projectId}> {resData[i].projectName} </Option>\r\n            );\r\n        }\r\n\r\n        this.projectList = temp;\r\n    }\r\n\r\n    getTypeList() {\r\n        this.setState({\r\n            jobtypeList: [\r\n                {\r\n                    typeId: \"001\",\r\n                    typeName: \"test1\",\r\n                },\r\n                {\r\n                    typeId: \"002\",\r\n                    typeName: \"test2\",\r\n                },\r\n            ],\r\n        });\r\n\r\n        let resData = [\r\n            {\r\n                typeId: \"001\",\r\n                typeName: \"test1\",\r\n            },\r\n            {\r\n                typeId: \"002\",\r\n                typeName: \"test2\",\r\n            },\r\n        ];\r\n        let temp = [];\r\n        for (let i = 0; i < resData.length; i++) {\r\n            temp.push(\r\n                <Option key={resData[i].typeId}> {resData[i].typeName} </Option>\r\n            );\r\n            console.log(\r\n                \"ActionsWork -> getJobtypeList -> resData[i].typeId\",\r\n                resData[i].typeId\r\n            );\r\n        }\r\n\r\n        this.typeList = temp;\r\n    }\r\n\r\n    handleProjectChange = (value, i) => {\r\n        console.log(\"ActionsWork -> handleProjectChange -> i\", i);\r\n        console.log(\"ActionsWork -> handleProjectChange -> value\", value);\r\n\r\n        // let temp = _.cloneDeep(this.state.filter)\r\n        // temp.projectId = value\r\n        // this.setState({\r\n        //     filter: {\r\n        //         dateFrom: temp.dateFrom,\r\n        //         dateTo: temp.dateTo,\r\n        //         typeId: temp.typeId,\r\n        //         projectId: value\r\n        //     }\r\n        // });\r\n    };\r\n    handleTypeChange = (event) => {\r\n        let temp = _.cloneDeep(this.state.filter);\r\n        temp.typeId = event.target.value;\r\n        this.setState({\r\n            filter: {\r\n                dateFrom: temp.dateFrom,\r\n                dateTo: temp.dateTo,\r\n                typeId: temp.typeId,\r\n                projectId: temp.projectId,\r\n            },\r\n        });\r\n    };\r\n\r\n    setDdlTime() {\r\n        // let maxMin = 60;\r\n        // let maxHours = 24;\r\n\r\n        // let tmpMin = []\r\n        // let tmpHours = []\r\n        // for (let i = 0; i < maxHours; i++) {\r\n        //     tmpMin.push()\r\n        // }\r\n\r\n        // TODO :: get hours\r\n        var hours = []; // time array\r\n        var th = 0; // start time\r\n        //loop to increment the time and push results in array\r\n        for (var i = 0; th < 24 * 60; i++) {\r\n            var hh = Math.floor(th / 60); // gething hours of day in 0-24 format\r\n            var mm = th % 60; // gething minutes of the hour in 0-55 format\r\n            hours[i] = (\"0\" + hh).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n            th++;\r\n        }\r\n        hours = _.uniq(hours);\r\n        console.log(\"ActionsWork -> setDdlTime -> hours\", hours);\r\n        // timeHours\r\n        // timeMin\r\n\r\n        // TODO :: get min\r\n        // var min = []; // time array\r\n        // var tm = 0;\r\n        // for (var j = 0; th < 60 *60; j++) {\r\n        //     // var hh = Math.floor(th / 60); // gething hours of day in 0-24 format\r\n        //     var mm = (tm % 60); // gething minutes of the hour in 0-55 format\r\n        //     min[i] = (\"0\" + (mm)).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n        //     tm +=10;\r\n        // }\r\n        // min = _.uniq(min)\r\n        // console.log(\"ActionsWork -> setDdlTime -> min\", min)\r\n        // timeHours\r\n    }\r\n\r\n    // TODO :: Select\r\n\r\n    handleChangeProject = (value, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.projectId = value;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    };\r\n\r\n    handleBlurProject = () => {\r\n        console.log(\"blur ---- \", this.typeList);\r\n    };\r\n\r\n    handleFocusProject = () => {\r\n        console.log(\"focus ....\", this.typeList);\r\n    };\r\n    handleChangeType = (value, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.typeId = value;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    };\r\n\r\n    handleBlurType = () => {\r\n        console.log(\"blur ---- \", this.typeList);\r\n    };\r\n\r\n    handleFocusType = () => {\r\n        console.log(\"focus ....\", this.typeList);\r\n    };\r\n\r\n    onChangeTimeIn = (time, timestring, index) => {\r\n        // console.log(\"ActionsWork -> onChangeTimeIn -> time, timestring, index\", time, timestring, index)\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeIn = time;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    };\r\n    onChangeTimeOut = (time, timestring, index) => {\r\n        console.log(\r\n            \"ActionsWork -> onChangeTimeOut -> time, timestring, index\",\r\n            time,\r\n            timestring,\r\n            index\r\n        );\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeOut = time;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    };\r\n\r\n    calManHours = () => { };\r\n\r\n    handleAddData = () => {\r\n        console.log(\"ActionsWork -> handleAddData -> handleAddData\");\r\n        this.state.data.push({\r\n            projectId: null,\r\n            typeId: null,\r\n            workDate: null,\r\n            workDetail: null,\r\n            workUrl: null,\r\n            workManhour: null,\r\n            workTimeIn: null,\r\n            workTimeOut: null,\r\n        });\r\n        let a = this.state.data;\r\n        this.setState({ data: a });\r\n        console.log(\r\n            \"ActionsWork -> handleAddData ->  this.state.data\",\r\n            this.state.data\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"App\">\r\n                    <div id=\"boxType\" className=\"container-box-content\">\r\n                        <div className=\"row wrap-container\">\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item href=\"/work\">\r\n                                    <HomeOutlined />\r\n                                    <span className=\"breadcrum-custom\"> work </span>\r\n                                </Breadcrumb.Item>\r\n                                {this.state.params.action === \"create\" ? (\r\n                                    <span className=\"breadcrum-custom\"> Create work </span>\r\n                                ) : null}\r\n                                {this.state.params.action === \"edit\" ? (\r\n                                    <span className=\"breadcrum-custom\"> Update work </span>\r\n                                ) : null}\r\n                            </Breadcrumb>\r\n\r\n                            <div className=\"wrap-content\">\r\n                                <div className=\"box-action\">\r\n                                    <div className=\"box-title-search\">\r\n\r\n                                        {this.state.params.action === \"create\" ? (\r\n                                            <p className=\"font-size-search\"> Create Work </p>\r\n                                        ) : null}\r\n                                        {this.state.params.action === \"edit\" ? (\r\n                                            <p className=\"font-size-search\"> Update Work </p>\r\n                                        ) : null}\r\n                                    </div>\r\n                                    <div className=\"box-content\" style={{ marginBottom: 0 }}>\r\n                                        <div className=\"box-action-date\">\r\n                                            <div className=\"row form-group\">\r\n                                                <div className=\"col-3\" style={{ textAlign: \"right\" }}>\r\n\r\n                                                    <label className=\"title-field\" for=\"ddlDate\">\r\n\r\n                                                        Date : <span style={{ color: \"red\" }}> * </span>\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div\r\n                                                    className=\"col-4\"\r\n                                                    style={{ paddingLeft: 0, paddingRight: 0 }}\r\n                                                >\r\n                                                    <DateBox value={null} type=\"date\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr className=\"hr-action\"> </hr>\r\n                                        <div style={{ textAlign: \"right\" }}>\r\n                                            <p className=\"title-field\">\r\n\r\n                                                <span style={{ color: \"red\" }}> * </span> Items marked\r\n                        with an asterisk are required\r\n                      </p>\r\n                                        </div>\r\n                                        {this.state.data.map((data, i) => {\r\n                                            console.log(\"ActionsWork -> render -> data\", data);\r\n                                            console.log(\"ActionsWork -> render -> i\", i);\r\n                                            return (\r\n                                                <>\r\n                                                    <div className=\"box-action-content\">\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div\r\n                                                                        className=\"col-4\"\r\n                                                                        style={{ textAlign: \"right\" }}\r\n                                                                    >\r\n                                                                        <label\r\n                                                                            className=\"title-field\"\r\n                                                                            for=\"ddlProjectName\"\r\n                                                                        >\r\n\r\n                                                                            Project Name\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-8\">\r\n                                                                        <Select\r\n                                                                            showSearch\r\n                                                                            style={{ width: 200 }}\r\n                                                                            placeholder=\"Please selete project\"\r\n                                                                            optionFilterProp=\"children\"\r\n                                                                            onChange={(e) => {\r\n                                                                                this.handleChangeProject(e, i);\r\n                                                                            }}\r\n                                                                            onFocus={(e) => {\r\n                                                                                this.handleFocusProject(e, i);\r\n                                                                            }}\r\n                                                                            onBlur={(e) => {\r\n                                                                                this.handleBlurProject(e, i);\r\n                                                                            }}\r\n                                                                            filterOption={(input, option) =>\r\n                                                                                option.props.children\r\n                                                                                    .toLowerCase()\r\n                                                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                                                            }\r\n                                                                            value={data.projectId}\r\n                                                                        >\r\n\r\n                                                                            {this.projectList}\r\n                                                                        </Select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div\r\n                                                                        className=\"col-4\"\r\n                                                                        style={{ textAlign: \"right\" }}\r\n                                                                    >\r\n                                                                        <label\r\n                                                                            className=\"title-field\"\r\n                                                                            for=\"ddlJobType\"\r\n                                                                        >\r\n\r\n                                                                            Job Type\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-8\">\r\n                                                                        <Select\r\n                                                                            showSearch\r\n                                                                            style={{ width: 200 }}\r\n                                                                            placeholder=\"Please selete Type\"\r\n                                                                            optionFilterProp=\"children\"\r\n                                                                            onChange={(e) => {\r\n                                                                                this.handleChangeType(e, i);\r\n                                                                            }}\r\n                                                                            onFocus={(e) => {\r\n                                                                                this.handleFocusType(e, i);\r\n                                                                            }}\r\n                                                                            onBlur={(e) => {\r\n                                                                                this.handleBlurType(e, i);\r\n                                                                            }}\r\n                                                                            filterOption={(input, option) =>\r\n                                                                                option.props.children\r\n                                                                                    .toLowerCase()\r\n                                                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                                                            }\r\n                                                                            value={data.typeId}\r\n                                                                        >\r\n\r\n                                                                            {this.typeList}\r\n                                                                        </Select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* Time in */}\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div\r\n                                                                        className=\"col-4\"\r\n                                                                        style={{ textAlign: \"right\" }}\r\n                                                                    >\r\n                                                                        <label\r\n                                                                            className=\"title-field\"\r\n                                                                            for=\"ddlTimeIn\"\r\n                                                                        >\r\n\r\n                                                                            Time in\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-8\">\r\n                                                                        <TimePicker\r\n                                                                            showNow={true}\r\n                                                                            className=\"font-12pt\"\r\n                                                                            style={{ fontSize: \"12pt\" }}\r\n                                                                            use12Hours\r\n                                                                            placeholder=\"Select time in\"\r\n                                                                            format={format}\r\n                                                                            value={data.workTimeIn}\r\n                                                                            showNow={true}\r\n                                                                            onChange={(time, timestring) => {\r\n                                                                                this.onChangeTimeIn(\r\n                                                                                    time,\r\n                                                                                    timestring,\r\n                                                                                    i\r\n                                                                                );\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* Time out */}\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div\r\n                                                                        className=\"col-4\"\r\n                                                                        style={{ textAlign: \"right\" }}\r\n                                                                    >\r\n                                                                        <label\r\n                                                                            className=\"title-field\"\r\n                                                                            for=\"ddlTimeOut\"\r\n                                                                        >\r\n\r\n                                                                            Time out\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-8\">\r\n                                                                        <TimePicker\r\n                                                                            showNow={true}\r\n                                                                            className=\"font-12pt\"\r\n                                                                            style={{ fontSize: \"12pt\" }}\r\n                                                                            use12Hours\r\n                                                                            placeholder=\"Select Time out\"\r\n                                                                            format={format}\r\n                                                                            value={data.workTimeOut}\r\n                                                                            showNow={true}\r\n                                                                            onChange={(time, timestring) => {\r\n                                                                                this.onChangeTimeOut(\r\n                                                                                    time,\r\n                                                                                    timestring,\r\n                                                                                    i\r\n                                                                                );\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* Man hours */}\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div\r\n                                                                        className=\"col-4\"\r\n                                                                        style={{ textAlign: \"right\" }}\r\n                                                                    >\r\n                                                                        <label\r\n                                                                            className=\"title-field\"\r\n                                                                            for=\"txtManHours\"\r\n                                                                        >\r\n                                                                            Man hours\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-4\">\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            class=\"form-control\"\r\n                                                                            id=\"txtManHours\"\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-3\">\r\n                                                                        <button\r\n                                                                            class=\"btn-custom btn-calculate\"\r\n                                                                            onClick={this.calManHours}\r\n                                                                        >\r\n\r\n                                                                            Calculate\r\n                                    </button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* Url */}\r\n                                                            <div className=\"col-6\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div\r\n                                                                        className=\"col-4\"\r\n                                                                        style={{ textAlign: \"right\" }}\r\n                                                                    >\r\n                                                                        <label className=\"title-field\" for=\"txtUrl\">\r\n\r\n                                                                            Url\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-8\">\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            class=\"form-control\"\r\n                                                                            id=\"txtUrl\"\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* Detail */}\r\n                                                        <div className=\"row form-group\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div\r\n                                                                        className=\"col-2\"\r\n                                                                        style={{ textAlign: \"right\" }}\r\n                                                                    >\r\n                                                                        <label\r\n                                                                            className=\"title-field\"\r\n                                                                            for=\"txtDetail\"\r\n                                                                        >\r\n\r\n                                                                            Detail\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-10\">\r\n                                                                        <textarea\r\n                                                                            rows=\"3\"\r\n                                                                            type=\"text\"\r\n                                                                            class=\"form-control\"\r\n                                                                            id=\"txtDetail\"\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {this.state.data.length > 1 ? (\r\n                                                        <div\r\n                                                            style={{\r\n                                                                textAlign: \"end\",\r\n                                                                marginTop: 20,\r\n                                                                marginBottom: 10,\r\n                                                            }}\r\n                                                        >\r\n                                                            <button\r\n                                                                type=\"button\"\r\n                                                                style={{\r\n                                                                    background: \"red\",\r\n                                                                    color: \"#fff\",\r\n                                                                    width: 300,\r\n                                                                }}\r\n                                                                className=\"btn btn-popup-custom error\"\r\n                                                                onClick={() => {\r\n                                                                    console.log(\"ActionsWork -> render -> d\");\r\n                                                                    this.setState({\r\n                                                                        isOpen: true,\r\n                                                                        isTypeShowConfirm: \"del\",\r\n                                                                        isTextMsg: msgPopupTitle.deleted,\r\n                                                                        isDataPopUp: this.state.data,\r\n                                                                        isDelete: true,\r\n                                                                    });\r\n                                                                }}\r\n                                                            >\r\n                                                                Delete\r\n                              </button>\r\n                                                        </div>\r\n                                                    ) : null}\r\n                                                    <hr className=\"hr-action\"> </hr>\r\n                                                </>\r\n                                            );\r\n                                        })}\r\n                                        <br />\r\n                                        <div>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                class=\"btn btn-add-work\"\r\n                                                onClick={this.handleAddData}\r\n                                            >\r\n\r\n                                                <span className=\"btn-add-work-icon\">\r\n\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row form-group\">\r\n                                        <div className=\"col-12\" style={{ textAlign: \"right\" }}>\r\n                                            <Link to=\"/work\">\r\n                                                <button\r\n                                                    class=\"btn-custom btn-reset\"\r\n                                                    style={{ marginRight: 20 }}\r\n                                                >\r\n\r\n                                                    CANCEL\r\n                        </button>\r\n                                            </Link>\r\n                                            <button\r\n                                                class=\"btn-custom btn-search\"\r\n                                                style={{ marginRight: 70 }}\r\n                                                onClick={() => {\r\n                                                    this.setState({\r\n                                                        isOpen: true,\r\n                                                        isTypeShowConfirm: \"save\",\r\n                                                        isTextMsg: msgPopupTitle.saved,\r\n                                                        isDataPopUp: this.state.data,\r\n                                                        isDelete: false,\r\n                                                    });\r\n                                                }}\r\n                                            >\r\n\r\n                                                {this.state.params.action === \"edit\"\r\n                                                    ? \"UPDATE\"\r\n                                                    : \"CREATE\"}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* POPUP */}\r\n                <AlertPopUp\r\n                    successStatus={this.state.isPopupSuccess}\r\n                    errorStatus={this.state.isPopupError}\r\n                    message={this.state.isPopupMsg}\r\n                    clearActive={() => {\r\n                        this.setState({ isPopupError: false });\r\n                        this.setState({ isPopupSuccess: false });\r\n                    }}\r\n                />\r\n                <ConfirmPopup\r\n                    open={this.state.isOpen}\r\n                    type={this.state.isTypeShowConfirm}\r\n                    text={this.state.isTextMsg}\r\n                    data={this.state.isDataPopUp}\r\n                    del={false}\r\n                    onClose={() => {\r\n                        this.setState({ isOpen: false });\r\n                    }}\r\n                    clearActive={(e) => {\r\n                        this.setState({ isOpen: false });\r\n                    }}\r\n                    confirmActive={(e) => {\r\n                        this.setState({ isOpen: false });\r\n                        this.setState({ isPopupError: false });\r\n                        this.setState({ isPopupSuccess: true });\r\n                        this.setState({\r\n                            isPopupMsg:\r\n                                this.state.isDelete === false &&\r\n                                    this.state.params.action === \"edit\"\r\n                                    ? msgAlertTitle.updated\r\n                                    : this.state.isDelete === false\r\n                                        ? msgAlertTitle.saved\r\n                                        : msgAlertTitle.deleted,\r\n                        });\r\n                        console.log(\"Work -> render -> e\", e);\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActionsWork;\r\n","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\create-edit.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, TimePicker, Select } from 'antd';\r\nimport { HomeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { BrowserRouter as Router, Switch, Route,  Link } from 'react-router-dom';\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport configService from '../../config';\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nconst format = 'HH:mm';\r\nconst Option = Select.Option;\r\n\r\nlet data = [{\r\n    projectId: null,\r\n    typeId: null,\r\n    workDate: null,\r\n    workDetail: null,\r\n    workUrl: null,\r\n    workManhour: null,\r\n    workTimeIn: null,\r\n    workTimeOut: null,\r\n}]\r\n\r\nlet projectList = [];\r\nlet typeList = [];\r\nlet timeHours = [];\r\nlet timeMin = [];\r\n\r\nclass ActionsProject extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    constructor(props) {\r\n        console.log(\"Actionsproject -> constructor -> props\", props)\r\n        let query = _.cloneDeep(props.match.params.query);\r\n        let tempQuery = JSON.parse(JSON.stringify(query))\r\n        let param = JSON.parse(tempQuery)\r\n\r\n        super(props);\r\n        this.state = {\r\n            isPopupSuccess: false, // alert success case\r\n            isPopupError: false,  // alert error case\r\n            isPopupMsg: '',  // alert msg\r\n            isOpen: false, // open popup confirm\r\n            isTypeShowConfirm: '', // ประเภทของ popup : save , del\r\n            isDataPopUp: {}, // ข้อมูลที่ใช้\r\n            isTextMsg: '', // msg ของ Popup\r\n            data: [{\r\n                projectId: null,\r\n                typeId: null,\r\n                workDate: null,\r\n                workDetail: null,\r\n                workUrl: null,\r\n                workManhour: null,\r\n                workTimeIn: null,\r\n                workTimeOut: null,\r\n            }],\r\n            projectList: [],\r\n            typeList: [],\r\n            params: param\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // console.log(\"ActionsWork -> componentDidMount -> s\", this.state.data)\r\n        this.getTypeList();\r\n        this.getProjectList();\r\n    }\r\n\r\n    getProjectList() {\r\n        this.setState({\r\n            projectList: [{\r\n                projectId: '001',\r\n                projectName: 'test1'\r\n            },\r\n            {\r\n                projectId: '002',\r\n                projectName: 'test2'\r\n            }]\r\n        })\r\n\r\n        let resData = [{\r\n            projectId: '001',\r\n            projectName: 'test1'\r\n        },\r\n        {\r\n            projectId: '002',\r\n            projectName: 'test2'\r\n        }]\r\n        let temp = [];\r\n        for (let i = 0; i < resData.length; i++) {\r\n            temp.push(<Option key={resData[i].projectId}>{resData[i].projectName}</Option>);\r\n        }\r\n\r\n        this.projectList = temp\r\n    }\r\n\r\n    getTypeList() {\r\n        this.setState({\r\n            jobtypeList: [{\r\n                typeId: '001',\r\n                typeName: 'test1'\r\n            },\r\n            {\r\n                typeId: '002',\r\n                typeName: 'test2'\r\n            }]\r\n        })\r\n\r\n        let resData = [{\r\n            typeId: '001',\r\n            typeName: 'test1'\r\n        },\r\n        {\r\n            typeId: '002',\r\n            typeName: 'test2'\r\n        }]\r\n        let temp = []\r\n        for (let i = 0; i < resData.length; i++) {\r\n            temp.push(<Option key={resData[i].typeId}>{resData[i].typeName}</Option>);\r\n            console.log(\"ActionsWork -> getJobtypeList -> resData[i].typeId\", resData[i].typeId)\r\n        }\r\n\r\n        this.typeList = temp\r\n    }\r\n\r\n    handleProjectChange = (value, i) => {\r\n        console.log(\"ActionsWork -> handleProjectChange -> i\", i)\r\n        console.log(\"ActionsWork -> handleProjectChange -> value\", value)\r\n\r\n        // let temp = _.cloneDeep(this.state.filter)\r\n        // temp.projectId = value\r\n        // this.setState({\r\n        //     filter: {\r\n        //         dateFrom: temp.dateFrom,\r\n        //         dateTo: temp.dateTo,\r\n        //         typeId: temp.typeId,\r\n        //         projectId: value\r\n        //     }\r\n        // });\r\n    }\r\n    handleTypeChange = (event) => {\r\n\r\n        let temp = _.cloneDeep(this.state.filter)\r\n        temp.typeId = event.target.value\r\n        this.setState({\r\n            filter: {\r\n                dateFrom: temp.dateFrom,\r\n                dateTo: temp.dateTo,\r\n                typeId: temp.typeId,\r\n                projectId: temp.projectId\r\n            }\r\n        });\r\n    }\r\n\r\n    // TODO :: Select\r\n\r\n    handleChangeProject = (value, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.projectId = value;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleBlurProject = () => {\r\n        console.log('blur ---- ', this.typeList);\r\n    }\r\n\r\n    handleFocusProject = () => {\r\n        console.log('focus ....', this.typeList);\r\n    }\r\n    handleChangeType = (value, index) => {\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.typeId = value;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleBlurType = () => {\r\n        console.log('blur ---- ', this.typeList);\r\n    }\r\n\r\n    handleFocusType = () => {\r\n        console.log('focus ....', this.typeList);\r\n    }\r\n\r\n    onChangeTimeIn = (time, timestring, index) => {\r\n        // console.log(\"ActionsWork -> onChangeTimeIn -> time, timestring, index\", time, timestring, index)\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeIn = time;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n    onChangeTimeOut = (time, timestring, index) => {\r\n        console.log(\"ActionsWork -> onChangeTimeOut -> time, timestring, index\", time, timestring, index)\r\n        let data = [...this.state.data];\r\n        let item = { ...data[index] };\r\n        item.workTimeOut = time;\r\n        data[index] = item;\r\n        this.setState({ data });\r\n    }\r\n\r\n    calManHours = () => {\r\n\r\n    }\r\n\r\n    handleAddData = () => {\r\n        console.log(\"ActionsWork -> handleAddData -> handleAddData\")\r\n        this.state.data.push({\r\n            projectId: null,\r\n            typeId: null,\r\n            workDate: null,\r\n            workDetail: null,\r\n            workUrl: null,\r\n            workManhour: null,\r\n            workTimeIn: null,\r\n            workTimeOut: null,\r\n        })\r\n        let a = this.state.data\r\n        this.setState({ data: a })\r\n        console.log(\"ActionsProject -> handleAddData ->  this.state.data\", this.state.data)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<>\r\n\r\n            <div className=\"App\">\r\n                <div id=\"boxType\" className=\"container-box-content\">\r\n                    <div className=\"row wrap-container\">\r\n\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item href=\"/project\">\r\n                                <HomeOutlined />\r\n                                <span className=\"breadcrum-custom\">project</span>\r\n                            </Breadcrumb.Item>\r\n                            {/* <Breadcrumb.Item href=\"#\"> */}\r\n                            {this.state.params.action === 'create' ? <span className=\"breadcrum-custom\">Create project</span> : null}\r\n                            {this.state.params.action === 'edit' ? <span className=\"breadcrum-custom\">  Update project</span> : null}\r\n                            {this.state.params.action === 'view' ? <span className=\"breadcrum-custom\">  Detail project</span> : null}\r\n\r\n                            {/* </Breadcrumb.Item> */}\r\n                        </Breadcrumb>\r\n\r\n\r\n                        <div className=\"wrap-content\">\r\n                            <div className=\"box-action\">\r\n                                <div className=\"box-title-search\">\r\n                                    <div className=\"box-action-content\">\r\n                                        {this.state.params.action === 'create' ? <p className=\"font-size-search\">Create Project</p> : null}\r\n                                        {this.state.params.action === 'edit' ? <p className=\"font-size-search\">Update Project</p> : null}\r\n                                        {this.state.params.action === 'view' ? <p className=\"font-size-search\">Detail Project</p> : null}\r\n\r\n                                        {/* Start Date */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"ddlStartDate\">Start Date {this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <div className=\"col-4\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                                <DateBox\r\n                                                    value={null}\r\n                                                    type=\"date\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* End Date */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"ddlEndDate\">End Date{this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <div className=\"col-4\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                                <DateBox\r\n                                                    value={null}\r\n                                                    type=\"date\" />\r\n                                            </div> </div>\r\n\r\n                                        {/* Project */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"ddlProject\">Project{this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <input type=\"text\" class=\"form-control col-4\" id=\"txtProject\" />\r\n\r\n                                        </div>\r\n\r\n                                        {/* Phase */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"ddlPhase\">Phase{this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtPhase\" />\r\n                                        </div>\r\n\r\n                                        {/*Man Day */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtManDay\">Man Day{this.state.params.action !== 'view' ? <span style={{ color: 'red' }}></span> : null}</label></div>\r\n\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtManDay\" />\r\n\r\n                                        </div>\r\n\r\n                                        {/* Detail */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtDetail\">Detail {this.state.params.action !== 'view' ? <span style={{ color: 'red' }}>*</span> : null}</label></div>\r\n                                            <textarea rows=\"3\" type=\"text\" class=\"form-control col-5\" id=\"txtDetail\" />\r\n\r\n                                        </div>\r\n\r\n                                        {/* CustomerEmail */}\r\n                                        <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtCustomerEmail\">Customer Email<span style={{ color: 'red' }}></span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtCustomerEmail\" />\r\n\r\n                                        </div>\r\n\r\n                                        {/* CreateDate */}\r\n                                        {this.state.params.action === 'view' ? <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtCreateDate\">CreateDate<span style={{ color: 'red' }}></span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtCreateDate\" />\r\n\r\n                                        </div> : null}\r\n\r\n                                        {/* CreateBy */}\r\n                                        {this.state.params.action === 'view' ? <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtCreateBy\">CreateBy<span style={{ color: 'red' }}></span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtCreateBy\" />\r\n\r\n                                        </div> : null}\r\n\r\n                                        {/* UpdateDate */}\r\n                                        {this.state.params.action === 'view' ? <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtUpdateDate\">UpdateDate<span style={{ color: 'red' }}></span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtUpdateDate\" />\r\n\r\n                                        </div> : null}\r\n\r\n                                        {/*  UpdateBy */}\r\n                                        {this.state.params.action === 'view' ? <div className=\"row form-group\">\r\n                                            <div className=\"col-4\" style={{ textAlign: 'right' }}><label className=\"title-field\" for=\"txtUpdateBy\">UpdateBy<span style={{ color: 'red' }}></span></label></div>\r\n                                            <input type=\"text\" class=\"form-control col-5\" id=\"txtUpdateBy\" />\r\n\r\n                                        </div> : null}\r\n\r\n                                        {this.state.params.action !== 'view' ? <div style={{ textAlign: 'right' }}>\r\n                                            <p className=\"title-field\"><span style={{ color: 'red' }}>*</span> Items marked with an asterisk are required</p>\r\n                                        </div> : null}\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-12\" style={{ textAlign: 'right' }}>\r\n                                        {this.state.params.action !== 'view' ?\r\n                                            <Link to='/project'>\r\n                                                <button  class=\"btn-custom btn-reset\" style={{ marginRight: 20 }}>CANCEL</button>\r\n                                            </Link> : null}\r\n                                        {this.state.params.action !== 'view' ? <button class=\"btn-custom btn-search\" style={{ marginRight: 20 }} onClick={() => {\r\n                                            // this.this.state.params.action === 'edit'\r\n                                            this.setState({ isOpen: true, isTypeShowConfirm: 'save', isTextMsg: this.state.params.action === 'edit' ? msgPopupTitle.saved: msgPopupTitle.saved, isDataPopUp: this.state.data })\r\n\r\n                                        }}>{this.state.params.action === 'edit' ? 'UPDATE' : 'CREATE'}</button> : null}\r\n                                        {this.state.params.action === 'view' ?\r\n                                            <Link to='/project'>\r\n                                                <button class=\"btn-custom btn-search \" style={{ marginRight: 20 }} >BACK</button>\r\n                                            </Link>\r\n                                            : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* POPUP */}\r\n            <AlertPopUp successStatus={this.state.isPopupSuccess} errorStatus={this.state.isPopupError} message={this.state.isPopupMsg}\r\n                clearActive={() => {\r\n                    this.setState({ isPopupError: false })\r\n                    this.setState({ isPopupSuccess: false })\r\n                }} />\r\n\r\n            <ConfirmPopup open={this.state.isOpen} type={this.state.isTypeShowConfirm} text={this.state.isTextMsg} data={this.state.isDataPopUp} del={false}\r\n                onClose={() => { this.setState({ isOpen: false }) }}\r\n                clearActive={(e) => { this.setState({ isOpen: false }) }}\r\n                confirmActive={(e) => {\r\n                    this.setState({ isOpen: false })\r\n                    this.setState({ isPopupError: false })\r\n                    this.setState({ isPopupSuccess: true })\r\n                    this.setState({ isPopupMsg: this.state.params.action === 'edit' ?msgAlertTitle.updated :msgAlertTitle.saved })\r\n                    console.log(\"Work -> render -> e\", e)\r\n                }}\r\n            />\r\n        </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ActionsProject;\r\n","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Work\\index.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport DateBox from 'devextreme-react/date-box';\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport { HomeOutlined, EyeOutlined, DeleteOutlined, FormOutlined } from '@ant-design/icons';\r\nimport DropDownButton from 'devextreme-react/drop-down-button';\r\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\r\nimport moment from 'moment';\r\nimport AlertPopUp from \"../../components/popup/alert_popup\";\r\nimport ConfirmPopup from \"../../components/popup/confirm_popup\";\r\nimport {\r\n  SimpleItem,\r\n  GroupItem\r\n} from 'devextreme-react/form';\r\nimport DataGrid, {\r\n  Column,\r\n  Grouping,\r\n  GroupPanel,\r\n  Paging,\r\n  SearchPanel,\r\n  Editing,\r\n  Pager,\r\n  Scrolling,\r\n  Form,\r\n  Button\r\n} from 'devextreme-react/data-grid';\r\nimport AspNetData from 'devextreme-aspnet-data-nojquery';\r\nimport _ from \"lodash\";\r\nimport { Breadcrumb, Modal, TimePicker, Select } from 'antd';\r\nimport configService from '../../config';\r\nconst msgAlertTitle = configService.msgAlert;\r\nconst msgPopupTitle = configService.msgConfirm;\r\nconst url = 'https://js.devexpress.com/Demos/Mvc/api/TreeListTasks';\r\nconst format = \"HH:mm A\";\r\n\r\nconst tasksData = AspNetData.createStore({\r\n  key: 'Task_ID',\r\n  loadUrl: `${url}/Tasks`,\r\n  insertUrl: `${url}/InsertTask`,\r\n  updateUrl: `${url}/UpdateTask`,\r\n  deleteUrl: `${url}/DeleteTask`,\r\n  onBeforeSend: function (method, ajaxOptions) {\r\n    ajaxOptions.xhrFields = { withCredentials: true };\r\n  }\r\n});\r\n\r\nlet d = <FormOutlined />\r\n\r\nconst employeesData = AspNetData.createStore({\r\n  key: 'ID',\r\n  loadUrl: `${url}/TaskEmployees`\r\n});\r\n\r\nconst statusesData = [\r\n  'Not Started',\r\n  'Need Assistance',\r\n  'In Progress',\r\n  'Deferred',\r\n  'Completed'\r\n];\r\n\r\nclass Work extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      itembar: [false, false, false],\r\n      filter: {\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n        projectId: null,\r\n        typeId: null\r\n      },\r\n      projectList: [],\r\n      jobtypeList: [],\r\n      isPopupSuccess: false, // alert success case\r\n      isPopupError: false,  // alert error case\r\n      isPopupMsg: '',  // alert msg\r\n      isOpen: false, // open popup confirm\r\n      isTypeShowConfirm: '', // ประเภทของ popup : save , del\r\n      isDataPopUp: {}, // ข้อมูลที่ใช้\r\n      isTextMsg: '', // msg ของ Popup\r\n      data: [\r\n        {\r\n          'id': 1,\r\n          'workId': '0001',\r\n          'projectId': '0001',\r\n          'projectName': 'test1',\r\n          'projectPhase': '1',\r\n          'typeId': '0001',\r\n          'typeName': 'test1',\r\n          'workDate': '20/12/2020',\r\n          'workDetail': '....',\r\n          'workUrl': '-',\r\n          'workManhour': '8',\r\n          'workTimeIn': '09:00 AM',\r\n          'workTimeOut': '18:00 PM',\r\n          'updateDate': null,\r\n          'updateBy': null,\r\n          'createDate': '20/11/2020',\r\n          'createBy': 'joon',\r\n          'groupId': 0\r\n        }, {\r\n          'workId': '0002',\r\n          'projectId': '0002',\r\n          'projectName': 'test2',\r\n          'projectPhase': '1',\r\n          'typeId': '0002',\r\n          'typeName': 'test2',\r\n          'workDate': '25/01/2021',\r\n          'workDetail': '....',\r\n          'workUrl': '-',\r\n          'workManhour': '8',\r\n          'workTimeIn': '09:00 AM',\r\n          'workTimeOut': '18:00 PM',\r\n          'updateDate': null,\r\n          'updateBy': null,\r\n          'createDate': '20/11/2020',\r\n          'createBy': 'joon',\r\n          'groupId': 0,\r\n          'id': 2\r\n        }, {\r\n          'workId': '0003',\r\n          'projectId': '0003',\r\n          'projectName': 'test3',\r\n          'projectPhase': '1',\r\n          'typeId': '0003',\r\n          'typeName': 'test3',\r\n          'workDate': '20/11/2020',\r\n          'workDetail': '....',\r\n          'workUrl': '-',\r\n          'workManhour': '8',\r\n          'workTimeIn': '09:00 AM',\r\n          'workTimeOut': '18:00 PM',\r\n          'updateDate': null,\r\n          'updateBy': null,\r\n          'createDate': '20/11/2020',\r\n          'createBy': 'joon',\r\n          'groupId': 0,\r\n          'id': 3\r\n        }, {\r\n          'workId': '0003',\r\n          'projectId': '0003',\r\n          'projectName': 'test3',\r\n          'projectPhase': '1',\r\n          'typeId': '0003',\r\n          'typeName': 'test3',\r\n          'workDate': '20/02/2020',\r\n          'workDetail': '....',\r\n          'workUrl': '-',\r\n          'workManhour': '8',\r\n          'workTimeIn': '09:00 AM',\r\n          'workTimeOut': '18:00 PM',\r\n          'updateDate': null,\r\n          'updateBy': null,\r\n          'createDate': '20/11/2020',\r\n          'createBy': 'joon',\r\n          'groupId': 3,\r\n          'id': 4\r\n        }],\r\n      popOver: {\r\n        workId: '',\r\n        visible: false\r\n      },\r\n      popupEditVisable: false\r\n    };\r\n\r\n    this.dataPopup = [\r\n      { id: 1, name: 'Edit', icon: 'edit' },\r\n      { id: 2, name: 'Delete', icon: 'trash' },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjectList()\r\n    this.getJobtypeList()\r\n  }\r\n\r\n  getProjectList() {\r\n    this.setState({\r\n      projectList: [{\r\n        projectId: '001',\r\n        projectName: 'test1'\r\n      },\r\n      {\r\n        projectId: '002',\r\n        projectName: 'test2'\r\n      }]\r\n    })\r\n  }\r\n\r\n  getJobtypeList() {\r\n    this.setState({\r\n      jobtypeList: [{\r\n        typeId: '001',\r\n        typeName: 'test1'\r\n      },\r\n      {\r\n        typeId: '002',\r\n        typeName: 'test2'\r\n      }]\r\n    })\r\n    console.log(\"Work -> getJobtypeList -> this.state.jobtypeList\", this.state.jobtypeList)\r\n  }\r\n\r\n  handleProjectChange = (event) => {\r\n\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    temp.projectId = event.target.value\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: temp.dateFrom,\r\n        dateTo: temp.dateTo,\r\n        typeId: temp.typeId,\r\n        projectId: event.target.value\r\n      }\r\n    });\r\n  }\r\n  handleTypeChange = (event) => {\r\n\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    temp.typeId = event.target.value\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: temp.dateFrom,\r\n        dateTo: temp.dateTo,\r\n        typeId: temp.typeId,\r\n        projectId: temp.projectId\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChangeDate = (event, type) => {\r\n    let temp = _.cloneDeep(this.state.filter)\r\n    if (type === 'from') {\r\n      this.setState({\r\n        filter: {\r\n          dateFrom: event.value,\r\n          dateTo: temp.dateTo,\r\n          typeId: temp.typeId,\r\n          projectId: temp.projectId\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        filter: {\r\n          dateFrom: temp.dateFrom,\r\n          dateTo: event.value,\r\n          typeId: temp.typeId,\r\n          projectId: temp.projectId\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    console.log(\"Work -> handleReset -> this.state.filter\", this.state.filter)\r\n    this.setState({\r\n      filter: {\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n        projectId: null,\r\n        typeId: null\r\n      }\r\n    })\r\n    setTimeout(() => {\r\n      console.log(\"Work -> handleReset -> ll\", this.state.filter)\r\n    }, 100);\r\n  }\r\n\r\n  groupRender = (data) => {\r\n    console.log(\"groupRender -> data\", data)\r\n    let day = moment(data.value, 'DD/MM/YYYY').format('dddd')\r\n    let id = data.data.items && data.data.items.length > 0 ? data.data.items[0].workId : data.data.collapsedItems && data.data.collapsedItems.length > 0 ? data.data.collapsedItems[0].workId : null\r\n    let name = `DATE : ${data.value}  ${day}`\r\n    let now = moment().format('DD/MM/YYYY');\r\n    console.log(\"groupRender -> name\", name)\r\n    return (<div className=\"row\">\r\n      <div style={{ fontSize: '12pt' }} className={`col-6 ${day === 'Sunday' || day === 'Saturday' ? 'color-red' : data.value === now ? 'color-blue' : 'color-black'}`}>\r\n        {name}\r\n      </div>\r\n\r\n      <div className=\"col-6\" style={{ textAlign: 'end' }}>\r\n        <Link to={\"/work\" + `/{\"action\":\"edit\",\"workId\":\"${id}\"}`}>\r\n          <span className=\"custom-icon-group\" style={{ color: 'black', fontSize: '12pt', marginRight: 20 }}><FormOutlined /></span>\r\n        </Link>\r\n        <a className=\"custom-icon-group\" onClick={() => {\r\n          this.setState({ isOpen: true, isTypeShowConfirm: 'del', isTextMsg: msgPopupTitle.deleted, isDataPopUp: this.state.data })\r\n          console.log(\"project -> DelcellRender -> data\", id)\r\n        }}><span style={{ color: '#111', fontSize: '12pt', marginRight: 20 }}><DeleteOutlined /></span></a>\r\n      </div>\r\n\r\n    </div>\r\n    )\r\n  }\r\n\r\n  handleVisibleChange = (id, visible) => {\r\n    console.log(`Work -> handleVisibleChange -> visible`, visible)\r\n    console.log(`Work -> handleVisibleChange -> id`, id)\r\n    this.setState({\r\n      popOver: {\r\n        workId: id,\r\n        visible: visible\r\n      }\r\n    });\r\n  };\r\n\r\n  actionRender = (data) => {\r\n    console.log(`Work -> actionRender -> data`, data)\r\n    let a = false;\r\n    return (<>\r\n      <DropDownButton\r\n        text=\"...\"\r\n        dropDownOptions={{ width: 100 }}\r\n        items={this.dataPopup}\r\n        displayExpr=\"name\"\r\n        keyExpr=\"id\"\r\n        onItemClick={(e) => { this.onItemClick(e, data) }}\r\n      />\r\n      {/* <Popover\r\n        content={\r\n          <div>\r\n            <span style={{ color: 'black', fontSize: '12pt', marginRight: 20 }}><FormOutlined /></span>\r\n            <span style={{ color: '#111', fontSize: '12pt', marginRight: 20 }}><DeleteOutlined /></span>\r\n          </div>\r\n        }\r\n        // <a onClick={this.hide}>Close</a>\r\n        // title=\"\"\r\n        trigger=\"click\"\r\n        visible={this.state.popOver.id === data.data.id ? this.state.popOver.visible : false}\r\n        onVisibleChange={(e) => {\r\n          console.log(`Work -> actionRender -> e`, e)\r\n          this.handleVisibleChange(data.data.workId, e)\r\n        }}\r\n      >\r\n        <button >...</button>\r\n      </Popover> */}\r\n    </>)\r\n  }\r\n\r\n  onItemClick = (e, data) => {\r\n    console.log(`Work -> onItemClick -> e`, e, data)\r\n    if (e.itemData.name === 'Edit') {\r\n      this.setState({ popupEditVisable: true })\r\n    } else if (e.itemData.name === 'Delete') {\r\n      // call function delete\r\n    }\r\n  }\r\n\r\n  calManHours = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<>\r\n\r\n      <div className=\"App\">\r\n        <div id=\"boxType\" className=\"container-box-content\">\r\n          <div className=\"row wrap-container\">\r\n            <Breadcrumb>\r\n              {/* <Breadcrumb.Item href=\"#\"> */}\r\n              <HomeOutlined />\r\n              <span className=\"breadcrum-custom\"> Work</span>\r\n              {/* </Breadcrumb.Item> */}\r\n            </Breadcrumb>\r\n\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\">\r\n                <div className=\"box-title-search\">\r\n                  <p className=\"font-size-search\">Search Work</p>\r\n\r\n                </div>\r\n                <div className=\"box-content\">\r\n                  <div className=\"box-search-border\">\r\n                    <form>\r\n\r\n                      {/*  Dropdown */}\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlProjectName\" className=\"title-field\">Project Name</label></div>\r\n                            <select class=\"form-control col-7\" id=\"ddlProjectName\" value={this.state.filter.projectId} onChange={this.handleProjectChange}>\r\n                              {\r\n                                this.state.projectList.map(r => {\r\n                                  console.log(r, r.projectId == this.state.filter.projectId)\r\n                                  return <option value={r.projectId} selected={r.projectId == this.state.filter.projectId}>{r.projectName}</option>\r\n\r\n                                })\r\n                              }\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlJobType\" className=\"title-field\">Job Type</label></div>\r\n                            <select class=\"form-control col-7\" id=\"ddlJobType\" value={this.state.filter.typeId} onChange={this.handleTypeChange}>\r\n                              {\r\n                                this.state.jobtypeList.map(r => {\r\n                                  console.log(\"Work -> render -> r\", r)\r\n                                  return <option value={r.typeId} selected={r.typeId == this.state.filter.typeId}>{r.typeName}</option>\r\n                                })\r\n                              }\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/*  วันที่ */}\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlDateFrom\" className=\"title-field\">Date : From</label></div>\r\n                            <div className=\"col-7\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                              <DateBox\r\n                                value={this.state.filter.dateFrom}\r\n                                type=\"date\" onValueChanged={(e) => {\r\n                                  this.handleChangeDate(e, 'from')\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <div className=\"row form-group\">\r\n                            <div className=\"col-4\"><label for=\"ddlDateTo\" className=\"title-field\">Date : To</label></div>\r\n                            <div className=\"col-7\" style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                              <DateBox value={this.state.filter.dateTo}\r\n                                type=\"date\" type=\"date\" onValueChanged={(e) => {\r\n                                  this.handleChangeDate(e, 'to')\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                    </form>\r\n\r\n                    <div className=\"row form-group\">\r\n                      <div className=\"col-12\" style={{ textAlign: 'center' }}>\r\n                        <button class=\"btn-custom btn-reset \" style={{ marginRight: 20 }} onClick={this.handleReset}>RESET</button>\r\n                        <button class=\"btn-custom btn-search \">SEARCH</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            {/* content start*/}\r\n            <div className=\"wrap-content\">\r\n              <div className=\"box-search\" style={{ padding: 30 }}>\r\n                <div style={{ textAlign: 'end', padding: 15 }}>\r\n                  <Link to='/work/{\"action\":\"create\"}'>\r\n                    <button className=\"btn-custom btn-search \" style={{ width: 185 }}><span className=\"btn-icon\"><IoAddOutline /></span> <span className=\"btn-txt-icon\">Create Work</span></button>\r\n\r\n                  </Link>\r\n                </div>\r\n                <div style={{ padding: 20 }} className=\"table-responsive\">\r\n                  <DataGrid\r\n                    dataSource={this.state.data}\r\n                    allowColumnReordering={false}\r\n                    showBorders={true}\r\n                  // columnWidth={100}\r\n                  >\r\n                    <Scrolling columnRenderingMode=\"virtual\" />\r\n                    {/* <Editing\r\n                      allowUpdating={true}\r\n                      allowDeleting={true}\r\n                      // allowAdding={false}\r\n                      mode=\"form\"\r\n                      useIcons={true}\r\n                    ></Editing> */}\r\n                    <GroupPanel visible={false} />\r\n                    <SearchPanel visible={false} />\r\n                    <Grouping autoExpandAll={true} />\r\n                    <Paging defaultPageSize={10} />\r\n                    <Pager\r\n                      showPageSizeSelector={true}\r\n                      allowedPageSizes={[5, 10, 20]}\r\n                      showInfo={true}\r\n                      showNavigationButtons={true}\r\n                    />\r\n\r\n                    <Column dataField=\"projectName\" caption=\"Project\" dataType=\"string\" />\r\n                    <Column dataField=\"projectPhase\" caption=\"Phase\" dataType=\"string\" />\r\n                    <Column dataField=\"typeName\" caption=\"Type\" dataType=\"string\" />\r\n                    <Column dataField=\"workDetail\" caption=\"Detail\" dataType=\"string\" />\r\n                    <Column dataField=\"workManhour\" caption=\"Man Hours\" dataType=\"string\" />\r\n                    <Column dataField=\"workTimeIn\" caption=\"Time In\" dataType=\"string\" />\r\n                    <Column dataField=\"workTimeOut\" caption=\"Time Out\" dataType=\"string\" />\r\n                    <Column caption=\"Edit Delete\" alignment=\"center\" width={110} cellRender={this.actionRender}>\r\n\r\n                    </Column>\r\n                    <Column className=\"color-red\" dataField=\"workDate\" groupIndex={0} groupCellRender={this.groupRender} />\r\n                  </DataGrid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* content end*/}\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* POPUP */}\r\n      <AlertPopUp successStatus={this.state.isPopupSuccess} errorStatus={this.state.isPopupError} message={this.state.isPopupMsg}\r\n        clearActive={() => {\r\n          this.setState({ isPopupError: false })\r\n          this.setState({ isPopupSuccess: false })\r\n        }} />\r\n\r\n      <ConfirmPopup open={this.state.isOpen} type={this.state.isTypeShowConfirm} text={this.state.isTextMsg} data={this.state.isDataPopUp} del={false}\r\n        onClose={() => { this.setState({ isOpen: false }) }}\r\n        clearActive={(e) => { this.setState({ isOpen: false }) }}\r\n        confirmActive={(e) => {\r\n          this.setState({ isOpen: false })\r\n          this.setState({ isPopupError: false })\r\n          this.setState({ isPopupSuccess: true })\r\n          this.setState({ isPopupMsg: msgAlertTitle.deleted })\r\n          console.log(\"Work -> render -> e\", e)\r\n        }}\r\n      />\r\n\r\n      <Modal centered\r\n        footer={null}\r\n        header={null}\r\n        visible={this.state.popupEditVisable}\r\n        width={650}\r\n        closable={false}\r\n        onOk={() => {\r\n          this.setState({ popupEditVisable: false })\r\n        }}\r\n      >\r\n        {this.state.popupEditVisable ? <div className=\"wrap-content\">\r\n          <div className=\"box-action\">\r\n            <div className=\"box-title-search\">\r\n              <p className=\"font-size-search\"> Update Work </p>\r\n            </div>\r\n\r\n            <div className=\"box-action-content\">\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col-4\"\r\n                      style={{ textAlign: \"right\" }}\r\n                    >\r\n                      <label\r\n                        className=\"title-field\"\r\n                        for=\"ddlProjectName\"\r\n                      >\r\n\r\n                        Project Name\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                      <Select\r\n                        showSearch\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Please selete project\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(e) => {\r\n                          // this.handleChangeProject(e, i);\r\n                        }}\r\n                        onFocus={(e) => {\r\n                          // this.handleFocusProject(e, i);\r\n                        }}\r\n                        onBlur={(e) => {\r\n                          // this.handleBlurProject(e, i);\r\n                        }}\r\n                        filterOption={(input, option) =>\r\n                          option.props.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      // value={data.projectId}\r\n                      >\r\n\r\n                        {/* {this.projectList} */}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col-4\"\r\n                      style={{ textAlign: \"right\" }}\r\n                    >\r\n                      <label\r\n                        className=\"title-field\"\r\n                        for=\"ddlJobType\"\r\n                      >\r\n\r\n                        Job Type\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                      <Select\r\n                        showSearch\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Please selete Type\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(e) => {\r\n                          // this.handleChangeType(e, i);\r\n                        }}\r\n                        onFocus={(e) => {\r\n                          // this.handleFocusType(e, i);\r\n                        }}\r\n                        onBlur={(e) => {\r\n                          // this.handleBlurType(e);\r\n                        }}\r\n                        filterOption={(input, option) =>\r\n                          option.props.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      // value={ }\r\n                      >\r\n\r\n                        {/* {this.typeList} */}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Time in */}\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col-4\"\r\n                      style={{ textAlign: \"right\" }}\r\n                    >\r\n                      <label\r\n                        className=\"title-field\"\r\n                        for=\"ddlTimeIn\"\r\n                      >\r\n\r\n                        Time in\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                      <TimePicker\r\n                        showNow={true}\r\n                        className=\"font-12pt\"\r\n                        style={{ fontSize: \"12pt\" }}\r\n                        use12Hours\r\n                        placeholder=\"Select time in\"\r\n                        format={format}\r\n                        // value={ }\r\n                        showNow={true}\r\n                        onChange={(time, timestring) => {\r\n                          // this.onChangeTimeIn(\r\n                          //   time,\r\n                          //   timestring,\r\n                          //   i\r\n                          // );\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Time out */}\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col-4\"\r\n                      style={{ textAlign: \"right\" }}\r\n                    >\r\n                      <label\r\n                        className=\"title-field\"\r\n                        for=\"ddlTimeOut\"\r\n                      >\r\n\r\n                        Time out\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                      <TimePicker\r\n                        showNow={true}\r\n                        className=\"font-12pt\"\r\n                        style={{ fontSize: \"12pt\" }}\r\n                        use12Hours\r\n                        placeholder=\"Select Time out\"\r\n                        format={format}\r\n                        // value={data.workTimeOut}\r\n                        showNow={true}\r\n                        onChange={(time, timestring) => {\r\n                          // this.onChangeTimeOut(\r\n                          //   time,\r\n                          //   timestring,\r\n                          //   i\r\n                          // );\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Man hours */}\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col-4\"\r\n                      style={{ textAlign: \"right\" }}\r\n                    >\r\n                      <label\r\n                        className=\"title-field\"\r\n                        for=\"txtManHours\"\r\n                      >\r\n                        Man hours\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"txtManHours\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                      <button\r\n                        class=\"btn-custom btn-calculate\"\r\n                        onClick={this.calManHours}\r\n                      >\r\n\r\n                        Calculate\r\n                                    </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Url */}\r\n                <div className=\"col-6\">\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col-4\"\r\n                      style={{ textAlign: \"right\" }}\r\n                    >\r\n                      <label className=\"title-field\" for=\"txtUrl\">\r\n\r\n                        Url\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"txtUrl\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Detail */}\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div\r\n                      className=\"col-2\"\r\n                      style={{ textAlign: \"right\" }}\r\n                    >\r\n                      <label\r\n                        className=\"title-field\"\r\n                        for=\"txtDetail\"\r\n                      >\r\n\r\n                        Detail\r\n                                      <span style={{ color: \"red\" }}> * </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                      <textarea\r\n                        rows=\"3\"\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"txtDetail\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row form-group\">\r\n            <div className=\"col-12\" style={{ textAlign: \"right\" }}>\r\n              <button\r\n                class=\"btn-custom btn-reset\"\r\n                style={{ marginRight: 20 }}\r\n              >\r\n\r\n                CANCEL\r\n                        </button>\r\n              <button\r\n                class=\"btn-custom btn-search\"\r\n                style={{ marginRight: 70 }}\r\n              // onClick={() => {\r\n              //   this.setState({\r\n              //     isOpen: true,\r\n              //     isTypeShowConfirm: \"save\",\r\n              //     isTextMsg: msgPopupTitle.saved,\r\n              //     isDataPopUp: this.state.data,\r\n              //     isDelete: false,\r\n              //   });\r\n              // }}\r\n              >\r\n                UPDATE\r\n                   </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          : null}\r\n\r\n      </Modal>\r\n    </>);\r\n  }\r\n}\r\n\r\n\r\nexport default Work;\r\n","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\JobType\\index.js",["145","146","147","148","149","150","151","152","153","154"],"D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\Project\\index.js",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172"],"D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\pages\\home\\index.js",["173"],"import React from 'react'\r\n\r\nexport default () => (\r\n  <div className=\"has-text-centered\">\r\n    {/* <section class=\"hero is-info\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Home Page</h1>\r\n        <h2 className=\"page-title\">ทำ Routing ให้กับ React ด้วย React Router v4</h2>\r\n        <p className=\"button button-large is-primary\"><a href=\"https://devahoy.com/posts/basic-web-with-react-router-v4/\" target=\"_blank\">อ่านบทความ</a></p>\r\n      </div>\r\n    </section> */}\r\n  </div>\r\n)\r\n","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\config.js",[],"D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\confirm_popup.js",["174","175","176","177","178","179","180","181","182","183"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport moment from 'moment';\r\nconst IconExitRegular = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"far\" data-icon=\"window-close\" class=\"svg-inline--fa fa-window-close fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h404c3.3 0 6 2.7 6 6v340zM356.5 194.6L295.1 256l61.4 61.4c4.6 4.6 4.6 12.1 0 16.8l-22.3 22.3c-4.6 4.6-12.1 4.6-16.8 0L256 295.1l-61.4 61.4c-4.6 4.6-12.1 4.6-16.8 0l-22.3-22.3c-4.6-4.6-4.6-12.1 0-16.8l61.4-61.4-61.4-61.4c-4.6-4.6-4.6-12.1 0-16.8l22.3-22.3c4.6-4.6 12.1-4.6 16.8 0l61.4 61.4 61.4-61.4c4.6-4.6 12.1-4.6 16.8 0l22.3 22.3c4.7 4.6 4.7 12.1 0 16.8z\"></path></svg>\r\nconst IconSaveRegular = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"far\" data-icon=\"save\" class=\"svg-inline--fa fa-save fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 0 1 1.757 4.243V426a6 6 0 0 1-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z\"></path></svg>\r\nconst IconWarning = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"fas\" data-icon=\"exclamation-triangle\" class=\"svg-inline--fa fa-exclamation-triangle fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\" d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"></path></svg>\r\nconst IconCheckRegular = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"far\" data-icon=\"check-square\" class=\"svg-inline--fa fa-check-square fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z\"></path></svg>\r\nconst IconTrash = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash-alt\" class=\"svg-inline--fa fa-trash-alt fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"></path></svg>\r\n\r\nconst ConfirmPopup = (props) => {\r\n    console.log(`auto boost: ConfirmPopup -> props`, props)\r\n    const isOpen = (props.open);\r\n    const isPopupType = (props.type);\r\n    const isDel = (props.del);\r\n\r\n    const setIsOpen = () => {\r\n        props.onClose()\r\n    }\r\n    const confirmActive = () => {\r\n        props.confirmActive(props.data)\r\n    }\r\n    return (<>\r\n\r\n\r\n\r\n        <Modal centered\r\n            footer={null}\r\n            header={null}\r\n            visible={isOpen}\r\n            width={650}\r\n            closable={false}\r\n            onOk={() => {\r\n                setIsOpen(false)\r\n            }}\r\n        >\r\n            {isPopupType === 'save' ?\r\n                <div>\r\n                    <div style={{ textAlign: 'center' , margin: 40}}>\r\n                        <p className=\"popup-title save\" style={{ color: '#38B000' }}> Confirm </p>\r\n                        <p className=\"popup-sub-title\"> {props.text}</p>\r\n                        <div style={{ textAlign: 'center', position: 'relative', top: 20 }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\" style={{textAlign:'end'}}>\r\n                                    <button className=\"btn-custom btn-reset\" htmlType=\"submit\" onClick={() => { props.clearActive() }} >\r\n                                        No\r\n                            </button>\r\n                                </div>\r\n                                <div className=\"col-6\" style={{textAlign:'start'}}>\r\n                                    <button className=\"btn-custom success\" style={{ background: '#38B000' }} onClick={() => {\r\n                                        confirmActive()\r\n                                    }}>\r\n                                        Yes\r\n                            </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                : <div>\r\n                <div style={{ textAlign: 'center' , margin: 40}}>\r\n                    <p className=\"popup-title del\" style={{ color: 'red' }}> Confirm </p>\r\n                    <p className=\"popup-sub-title\"> {props.text}</p>\r\n                    <div style={{ textAlign: 'center', position: 'relative', top: 20 }}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\" style={{textAlign:'end'}}>\r\n                                <Button className=\"btn-custom  btn-reset\"  onClick={() => { props.clearActive() }} >\r\n                                    No\r\n                        </Button>\r\n                            </div>\r\n                            <div className=\"col-6\" style={{textAlign:'start'}}>\r\n                                <Button htmlType=\"submit\" className=\"btn-custom error\" style={{ background: 'red' }} onClick={() => {\r\n                                    confirmActive()\r\n                                }}>\r\n                                    Yes\r\n                        </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            }\r\n        </Modal>\r\n    </>)\r\n\r\n}\r\nexport default ConfirmPopup;","D:\\lerning\\Times-Sheet-Management\\tsm-fe\\src\\components\\popup\\alert_popup.js",["184","185","186","187","188","189","190","191","192","193","194","195"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, List, Avatar, Row, Col, Tooltip, Form, TimePicker, Modal, Pagination, Select } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport moment from 'moment';\r\nimport { BsExclamationTriangle } from \"react-icons/bs\";\r\n\r\n\r\nconst IconCorrect = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"fas\" data-icon=\"check\" class=\"svg-inline--fa fa-check fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"></path></svg>\r\nconst IconInCorrect = (props) => <svg aria-hidden=\"true\" style={props.style} focusable=\"false\" data-prefix=\"fas\" data-icon=\"times\" class=\"svg-inline--fa fa-times fa-w-11\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 352 512\"><path fill=\"currentColor\" d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"></path></svg>\r\nconst AlertPopUp = (props) => {\r\n    console.log(\"AlertPopUp -> props\", props)\r\n    const isPopupSuccess = (props.successStatus);\r\n    const isPopupError = (props.errorStatus);\r\n    const isPopupLoading = (props.loadingStatus);\r\n    const msg = (props.message);\r\n    useEffect(() => {\r\n        // getProductItem()\r\n    }, []);\r\n    const setIsPopupError = () => {\r\n        props.onOk()\r\n    }\r\n    const setIsPopupSuccess = () => {\r\n        props.onOk()\r\n    }\r\n\r\n    const setIsPopupLoading = () => {\r\n        props.onOk()\r\n    }\r\n\r\n    return (<>\r\n        <Modal centered\r\n            footer={null}\r\n            header={null}\r\n            visible={isPopupError}\r\n            width={650}\r\n            onOk={() => {\r\n                setIsPopupError(false);\r\n            }}\r\n            closable={false}>\r\n\r\n            {isPopupError ? <>\r\n                <span className=\"popup-icon-error\" style={{ display: 'flow-root', textAlign: 'center', justifyContent: 'center' }}>\r\n                    <IconInCorrect style={{ width: '70px', color: '#fff', top: 12, position: 'relative' }} />\r\n                </span>\r\n                <div style={{ textAlign: 'center', bottom: 50, position: 'relative' }}>\r\n                    <p className=\"popup-title\"> System Error </p>\r\n                    <p className=\"popup-sub-title\"> {msg ? msg : ''} </p>\r\n                    <div style={{ textAlign: 'center', position: 'relative', top: 20 }}>\r\n                        <Button style={{background: 'red'}} className=\"btn-popup-custom error\" onClick={() => { props.clearActive() }} >OK</Button>\r\n                    </div>\r\n                </div>\r\n            </> : null}\r\n        </Modal>\r\n\r\n\r\n        <Modal centered\r\n            footer={null}\r\n            header={null}\r\n            visible={isPopupSuccess}\r\n            width={650}\r\n            closable={false}\r\n            onOk={() => {\r\n                setIsPopupSuccess(false)\r\n            }}>\r\n\r\n            {isPopupSuccess ? <>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <span className=\"popup-icon-success\" style={{ display: 'flow-root', textAlign: 'center', justifyContent: 'center' }}>\r\n                        <IconCorrect style={{ width: '75px', color: '#fff', top: 20, position: 'relative' }} />\r\n                    </span>\r\n                    <div style={{ textAlign: 'center', bottom: 50, position: 'relative' }}>\r\n                        <p className=\"popup-title\"> Success </p>\r\n                        <p className=\"popup-sub-title\"> {msg ? msg : ''} </p>\r\n                        <div style={{ textAlign: 'center', position: 'relative', top: 20 }}>\r\n                            <Button className=\"btn-popup-custom success\" onClick={() => { props.clearActive() }} >OK</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : null}\r\n        </Modal>\r\n\r\n\r\n        <Modal centered\r\n            footer={null}\r\n            header={null}\r\n            visible={isPopupLoading}\r\n            width={500}\r\n            closable={false}\r\n            onOk={() => {\r\n                setIsPopupLoading(false)\r\n            }}\r\n        >\r\n\r\n            {isPopupLoading ? <>\r\n                <div>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <div style={{ display: 'flow-root', textAlign: 'center', justifyContent: 'center' }}>\r\n                            {isPopupLoading ? <BsExclamationTriangle style={{ color: 'rgb(226 189 82)', fontSize: '75px' }} /> : null}\r\n                        </div>\r\n                        <div style={{ textAlign: 'center' }}>\r\n                            <p style={{ fontSize: 17, marginTop: 15, marginBottom: 15 }}>\r\n                                {msg ? <span dangerouslySetInnerHTML={{ __html: msg }}></span> : ''} </p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : null}\r\n        </Modal>\r\n\r\n\r\n    </>)\r\n};\r\n\r\nexport default AlertPopUp;\r\n",{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":11},{"ruleId":"200","severity":1,"message":"204","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"205","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":12},{"ruleId":"200","severity":1,"message":"206","line":6,"column":10,"nodeType":"202","messageId":"203","endLine":6,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":14,"column":1,"nodeType":"209","endLine":28,"endColumn":2},{"ruleId":"200","severity":1,"message":"210","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"211","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"212","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":23},{"ruleId":"200","severity":1,"message":"213","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":15},{"ruleId":"200","severity":1,"message":"214","line":8,"column":22,"nodeType":"202","messageId":"203","endLine":8,"endColumn":32},{"ruleId":"200","severity":1,"message":"215","line":8,"column":34,"nodeType":"202","messageId":"203","endLine":8,"endColumn":40},{"ruleId":"200","severity":1,"message":"216","line":9,"column":24,"nodeType":"202","messageId":"203","endLine":9,"endColumn":36},{"ruleId":"200","severity":1,"message":"217","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":14},{"ruleId":"200","severity":1,"message":"218","line":11,"column":27,"nodeType":"202","messageId":"203","endLine":11,"endColumn":33},{"ruleId":"200","severity":1,"message":"219","line":11,"column":35,"nodeType":"202","messageId":"203","endLine":11,"endColumn":41},{"ruleId":"200","severity":1,"message":"220","line":11,"column":43,"nodeType":"202","messageId":"203","endLine":11,"endColumn":48},{"ruleId":"200","severity":1,"message":"210","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"211","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"212","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":23},{"ruleId":"200","severity":1,"message":"217","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":14},{"ruleId":"200","severity":1,"message":"218","line":11,"column":27,"nodeType":"202","messageId":"203","endLine":11,"endColumn":33},{"ruleId":"200","severity":1,"message":"219","line":11,"column":35,"nodeType":"202","messageId":"203","endLine":11,"endColumn":41},{"ruleId":"200","severity":1,"message":"220","line":11,"column":43,"nodeType":"202","messageId":"203","endLine":11,"endColumn":48},{"ruleId":"200","severity":1,"message":"221","line":20,"column":5,"nodeType":"202","messageId":"203","endLine":20,"endColumn":9},{"ruleId":"200","severity":1,"message":"222","line":33,"column":5,"nodeType":"202","messageId":"203","endLine":33,"endColumn":16},{"ruleId":"200","severity":1,"message":"223","line":34,"column":5,"nodeType":"202","messageId":"203","endLine":34,"endColumn":13},{"ruleId":"200","severity":1,"message":"224","line":35,"column":5,"nodeType":"202","messageId":"203","endLine":35,"endColumn":14},{"ruleId":"200","severity":1,"message":"225","line":36,"column":5,"nodeType":"202","messageId":"203","endLine":36,"endColumn":12},{"ruleId":"200","severity":1,"message":"226","line":203,"column":17,"nodeType":"202","messageId":"203","endLine":203,"endColumn":19},{"ruleId":"227","severity":1,"message":"228","line":479,"column":77,"nodeType":"229","endLine":479,"endColumn":91},{"ruleId":"227","severity":1,"message":"228","line":516,"column":77,"nodeType":"229","endLine":516,"endColumn":91},{"ruleId":"200","severity":1,"message":"210","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"211","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"212","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":23},{"ruleId":"200","severity":1,"message":"214","line":8,"column":22,"nodeType":"202","messageId":"203","endLine":8,"endColumn":32},{"ruleId":"200","severity":1,"message":"216","line":9,"column":24,"nodeType":"202","messageId":"203","endLine":9,"endColumn":36},{"ruleId":"200","severity":1,"message":"217","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":14},{"ruleId":"200","severity":1,"message":"218","line":11,"column":27,"nodeType":"202","messageId":"203","endLine":11,"endColumn":33},{"ruleId":"200","severity":1,"message":"219","line":11,"column":35,"nodeType":"202","messageId":"203","endLine":11,"endColumn":41},{"ruleId":"200","severity":1,"message":"220","line":11,"column":43,"nodeType":"202","messageId":"203","endLine":11,"endColumn":48},{"ruleId":"200","severity":1,"message":"230","line":17,"column":7,"nodeType":"202","messageId":"203","endLine":17,"endColumn":13},{"ruleId":"200","severity":1,"message":"221","line":20,"column":5,"nodeType":"202","messageId":"203","endLine":20,"endColumn":9},{"ruleId":"200","severity":1,"message":"222","line":31,"column":5,"nodeType":"202","messageId":"203","endLine":31,"endColumn":16},{"ruleId":"200","severity":1,"message":"223","line":32,"column":5,"nodeType":"202","messageId":"203","endLine":32,"endColumn":13},{"ruleId":"200","severity":1,"message":"224","line":33,"column":5,"nodeType":"202","messageId":"203","endLine":33,"endColumn":14},{"ruleId":"200","severity":1,"message":"225","line":34,"column":5,"nodeType":"202","messageId":"203","endLine":34,"endColumn":12},{"ruleId":"200","severity":1,"message":"210","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"218","line":7,"column":27,"nodeType":"202","messageId":"203","endLine":7,"endColumn":33},{"ruleId":"200","severity":1,"message":"219","line":7,"column":35,"nodeType":"202","messageId":"203","endLine":7,"endColumn":41},{"ruleId":"200","severity":1,"message":"220","line":7,"column":43,"nodeType":"202","messageId":"203","endLine":7,"endColumn":48},{"ruleId":"200","severity":1,"message":"231","line":8,"column":24,"nodeType":"202","messageId":"203","endLine":8,"endColumn":35},{"ruleId":"200","severity":1,"message":"232","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":15},{"ruleId":"200","severity":1,"message":"233","line":10,"column":19,"nodeType":"202","messageId":"203","endLine":10,"endColumn":23},{"ruleId":"200","severity":1,"message":"234","line":15,"column":3,"nodeType":"202","messageId":"203","endLine":15,"endColumn":13},{"ruleId":"200","severity":1,"message":"235","line":16,"column":3,"nodeType":"202","messageId":"203","endLine":16,"endColumn":12},{"ruleId":"200","severity":1,"message":"236","line":24,"column":3,"nodeType":"202","messageId":"203","endLine":24,"endColumn":10},{"ruleId":"200","severity":1,"message":"205","line":27,"column":3,"nodeType":"202","messageId":"203","endLine":27,"endColumn":7},{"ruleId":"200","severity":1,"message":"212","line":28,"column":3,"nodeType":"202","messageId":"203","endLine":28,"endColumn":9},{"ruleId":"200","severity":1,"message":"237","line":39,"column":7,"nodeType":"202","messageId":"203","endLine":39,"endColumn":16},{"ruleId":"200","severity":1,"message":"238","line":50,"column":5,"nodeType":"202","messageId":"203","endLine":50,"endColumn":6},{"ruleId":"200","severity":1,"message":"239","line":52,"column":7,"nodeType":"202","messageId":"203","endLine":52,"endColumn":20},{"ruleId":"200","severity":1,"message":"240","line":57,"column":7,"nodeType":"202","messageId":"203","endLine":57,"endColumn":19},{"ruleId":"241","severity":1,"message":"242","line":290,"column":27,"nodeType":"243","messageId":"244","endLine":290,"endColumn":28},{"ruleId":"245","severity":1,"message":"246","line":293,"column":9,"nodeType":"247","endLine":296,"endColumn":12},{"ruleId":"200","severity":1,"message":"248","line":316,"column":9,"nodeType":"202","messageId":"203","endLine":316,"endColumn":10},{"ruleId":"249","severity":1,"message":"250","line":392,"column":62,"nodeType":"243","messageId":"251","endLine":392,"endColumn":64},{"ruleId":"249","severity":1,"message":"250","line":393,"column":92,"nodeType":"243","messageId":"251","endLine":393,"endColumn":94},{"ruleId":"249","severity":1,"message":"250","line":407,"column":86,"nodeType":"243","messageId":"251","endLine":407,"endColumn":88},{"ruleId":"227","severity":1,"message":"228","line":434,"column":45,"nodeType":"229","endLine":434,"endColumn":56},{"ruleId":"227","severity":1,"message":"228","line":667,"column":25,"nodeType":"229","endLine":667,"endColumn":39},{"ruleId":"227","severity":1,"message":"228","line":704,"column":25,"nodeType":"229","endLine":704,"endColumn":39},{"ruleId":"200","severity":1,"message":"210","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"218","line":3,"column":27,"nodeType":"202","messageId":"203","endLine":3,"endColumn":33},{"ruleId":"200","severity":1,"message":"219","line":3,"column":35,"nodeType":"202","messageId":"203","endLine":3,"endColumn":41},{"ruleId":"200","severity":1,"message":"220","line":3,"column":43,"nodeType":"202","messageId":"203","endLine":3,"endColumn":48},{"ruleId":"200","severity":1,"message":"231","line":9,"column":5,"nodeType":"202","messageId":"203","endLine":9,"endColumn":16},{"ruleId":"200","severity":1,"message":"237","line":21,"column":7,"nodeType":"202","messageId":"203","endLine":21,"endColumn":16},{"ruleId":"200","severity":1,"message":"239","line":32,"column":7,"nodeType":"202","messageId":"203","endLine":32,"endColumn":20},{"ruleId":"200","severity":1,"message":"240","line":37,"column":7,"nodeType":"202","messageId":"203","endLine":37,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":226,"column":13,"nodeType":"247","endLine":235,"endColumn":14},{"ruleId":"241","severity":1,"message":"242","line":247,"column":32,"nodeType":"243","messageId":"244","endLine":247,"endColumn":33},{"ruleId":"200","severity":1,"message":"210","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"252","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":28},{"ruleId":"200","severity":1,"message":"253","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":25},{"ruleId":"200","severity":1,"message":"254","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":25},{"ruleId":"200","severity":1,"message":"255","line":6,"column":10,"nodeType":"202","messageId":"203","endLine":6,"endColumn":31},{"ruleId":"200","severity":1,"message":"256","line":7,"column":10,"nodeType":"202","messageId":"203","endLine":7,"endColumn":27},{"ruleId":"200","severity":1,"message":"211","line":8,"column":10,"nodeType":"202","messageId":"203","endLine":8,"endColumn":15},{"ruleId":"200","severity":1,"message":"212","line":8,"column":17,"nodeType":"202","messageId":"203","endLine":8,"endColumn":23},{"ruleId":"200","severity":1,"message":"213","line":11,"column":8,"nodeType":"202","messageId":"203","endLine":11,"endColumn":15},{"ruleId":"200","severity":1,"message":"218","line":13,"column":27,"nodeType":"202","messageId":"203","endLine":13,"endColumn":33},{"ruleId":"200","severity":1,"message":"219","line":13,"column":35,"nodeType":"202","messageId":"203","endLine":13,"endColumn":41},{"ruleId":"200","severity":1,"message":"220","line":13,"column":43,"nodeType":"202","messageId":"203","endLine":13,"endColumn":48},{"ruleId":"200","severity":1,"message":"237","line":32,"column":7,"nodeType":"202","messageId":"203","endLine":32,"endColumn":16},{"ruleId":"200","severity":1,"message":"239","line":43,"column":7,"nodeType":"202","messageId":"203","endLine":43,"endColumn":20},{"ruleId":"200","severity":1,"message":"240","line":48,"column":7,"nodeType":"202","messageId":"203","endLine":48,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":248,"column":13,"nodeType":"247","endLine":258,"endColumn":14},{"ruleId":"241","severity":1,"message":"242","line":271,"column":32,"nodeType":"243","messageId":"244","endLine":271,"endColumn":33},{"ruleId":"241","severity":1,"message":"242","line":283,"column":32,"nodeType":"243","messageId":"244","endLine":283,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":3,"column":1,"nodeType":"209","endLine":13,"endColumn":2},{"ruleId":"200","severity":1,"message":"257","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"258","line":1,"column":28,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"259","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":9},{"ruleId":"200","severity":1,"message":"217","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":14},{"ruleId":"200","severity":1,"message":"260","line":5,"column":7,"nodeType":"202","messageId":"203","endLine":5,"endColumn":22},{"ruleId":"200","severity":1,"message":"261","line":6,"column":7,"nodeType":"202","messageId":"203","endLine":6,"endColumn":22},{"ruleId":"200","severity":1,"message":"262","line":7,"column":7,"nodeType":"202","messageId":"203","endLine":7,"endColumn":18},{"ruleId":"200","severity":1,"message":"263","line":8,"column":7,"nodeType":"202","messageId":"203","endLine":8,"endColumn":23},{"ruleId":"200","severity":1,"message":"264","line":9,"column":7,"nodeType":"202","messageId":"203","endLine":9,"endColumn":16},{"ruleId":"200","severity":1,"message":"265","line":15,"column":11,"nodeType":"202","messageId":"203","endLine":15,"endColumn":16},{"ruleId":"200","severity":1,"message":"258","line":1,"column":28,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"266","line":2,"column":18,"nodeType":"202","messageId":"203","endLine":2,"endColumn":22},{"ruleId":"200","severity":1,"message":"267","line":2,"column":24,"nodeType":"202","messageId":"203","endLine":2,"endColumn":30},{"ruleId":"200","severity":1,"message":"268","line":2,"column":32,"nodeType":"202","messageId":"203","endLine":2,"endColumn":35},{"ruleId":"200","severity":1,"message":"269","line":2,"column":37,"nodeType":"202","messageId":"203","endLine":2,"endColumn":40},{"ruleId":"200","severity":1,"message":"270","line":2,"column":42,"nodeType":"202","messageId":"203","endLine":2,"endColumn":49},{"ruleId":"200","severity":1,"message":"205","line":2,"column":51,"nodeType":"202","messageId":"203","endLine":2,"endColumn":55},{"ruleId":"200","severity":1,"message":"214","line":2,"column":57,"nodeType":"202","messageId":"203","endLine":2,"endColumn":67},{"ruleId":"200","severity":1,"message":"271","line":2,"column":76,"nodeType":"202","messageId":"203","endLine":2,"endColumn":86},{"ruleId":"200","severity":1,"message":"215","line":2,"column":88,"nodeType":"202","messageId":"203","endLine":2,"endColumn":94},{"ruleId":"200","severity":1,"message":"259","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":9},{"ruleId":"200","severity":1,"message":"217","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":14},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Form' is defined but never used.","'NavLink' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'DateBox' is defined but never used.","'TimePicker' is defined but never used.","'Select' is defined but never used.","'PlusOutlined' is defined but never used.","'moment' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'data' is assigned a value but never used.","'projectList' is assigned a value but never used.","'typeList' is assigned a value but never used.","'timeHours' is assigned a value but never used.","'timeMin' is assigned a value but never used.","'mm' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'format' is assigned a value but never used.","'EyeOutlined' is defined but never used.","'Toolbar' is defined but never used.","'Item' is defined but never used.","'SimpleItem' is defined but never used.","'GroupItem' is defined but never used.","'Editing' is defined but never used.","'tasksData' is assigned a value but never used.","'d' is assigned a value but never used.","'employeesData' is assigned a value but never used.","'statusesData' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'a' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'BsFillCalendarFill' is defined but never used.","'BsFillTrashFill' is defined but never used.","'FaClipboardList' is defined but never used.","'AiOutlineStepBackward' is defined but never used.","'AiFillStepForward' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'_' is defined but never used.","'IconExitRegular' is assigned a value but never used.","'IconSaveRegular' is assigned a value but never used.","'IconWarning' is assigned a value but never used.","'IconCheckRegular' is assigned a value but never used.","'IconTrash' is assigned a value but never used.","'isDel' is assigned a value but never used.","'List' is defined but never used.","'Avatar' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tooltip' is defined but never used.","'Pagination' is defined but never used.","no-global-assign","no-unsafe-negation"]